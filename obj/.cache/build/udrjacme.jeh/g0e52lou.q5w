<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class Mesh
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class Mesh
   ">
    <meta name="generator" content="docfx 2.58.0.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="Engine.Core.Components.Mesh">
  
  
  <h1 id="Engine_Core_Components_Mesh" data-uid="Engine.Core.Components.Mesh" class="text-break">Class Mesh
  </h1>
  <div class="markdown level0 summary"></div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><a class="xref" href="Engine.Core.Component.html">Component</a></div>
    <div class="level2"><span class="xref">Mesh</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <a class="xref" href="Engine.Core.Component.html#Engine_Core_Component_dependency">Component.dependency</a>
    </div>
    <div>
      <span class="xref">System.Object.ToString()</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
    <div>
      <span class="xref">System.Object.MemberwiseClone()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="Engine.Core.Components.html">Engine.Core.Components</a></h6>
  <h6><strong>Assembly</strong>: cs.temp.dll.dll</h6>
  <h5 id="Engine_Core_Components_Mesh_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class Mesh : Component</code></pre>
  </div>
  <h3 id="constructors">Constructors
  </h3>
  
  
  <a id="Engine_Core_Components_Mesh__ctor_" data-uid="Engine.Core.Components.Mesh.#ctor*"></a>
  <h4 id="Engine_Core_Components_Mesh__ctor_Engine_Core_Object3D_" data-uid="Engine.Core.Components.Mesh.#ctor(Engine.Core.Object3D)">Mesh(Object3D)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Mesh(Object3D dependency)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Object3D.html">Object3D</a></td>
        <td><span class="parametername">dependency</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh__ctor_" data-uid="Engine.Core.Components.Mesh.#ctor*"></a>
  <h4 id="Engine_Core_Components_Mesh__ctor_System_Collections_Generic_List_Engine_Core_Components_Vertex__System_Collections_Generic_List_Engine_Core_Components_Edge__System_Collections_Generic_List_Engine_Core_Components_Face__Engine_Core_Object3D_" data-uid="Engine.Core.Components.Mesh.#ctor(System.Collections.Generic.List{Engine.Core.Components.Vertex},System.Collections.Generic.List{Engine.Core.Components.Edge},System.Collections.Generic.List{Engine.Core.Components.Face},Engine.Core.Object3D)">Mesh(List&lt;Vertex&gt;, List&lt;Edge&gt;, List&lt;Face&gt;, Object3D)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Mesh(List&lt;Vertex&gt; vertices, List&lt;Edge&gt; edges, List&lt;Face&gt; faces, Object3D dependency)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;<a class="xref" href="Engine.Core.Components.Vertex.html">Vertex</a>&gt;</td>
        <td><span class="parametername">vertices</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;<a class="xref" href="Engine.Core.Components.Edge.html">Edge</a>&gt;</td>
        <td><span class="parametername">edges</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;<a class="xref" href="Engine.Core.Components.Face.html">Face</a>&gt;</td>
        <td><span class="parametername">faces</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="Engine.Core.Object3D.html">Object3D</a></td>
        <td><span class="parametername">dependency</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="properties">Properties
  </h3>
  
  
  <a id="Engine_Core_Components_Mesh_EdgesCount_" data-uid="Engine.Core.Components.Mesh.EdgesCount*"></a>
  <h4 id="Engine_Core_Components_Mesh_EdgesCount" data-uid="Engine.Core.Components.Mesh.EdgesCount">EdgesCount</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int EdgesCount { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_FacesCount_" data-uid="Engine.Core.Components.Mesh.FacesCount*"></a>
  <h4 id="Engine_Core_Components_Mesh_FacesCount" data-uid="Engine.Core.Components.Mesh.FacesCount">FacesCount</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int FacesCount { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_VerticesCount_" data-uid="Engine.Core.Components.Mesh.VerticesCount*"></a>
  <h4 id="Engine_Core_Components_Mesh_VerticesCount" data-uid="Engine.Core.Components.Mesh.VerticesCount">VerticesCount</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int VerticesCount { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  
  
  <a id="Engine_Core_Components_Mesh_AddEdge_" data-uid="Engine.Core.Components.Mesh.AddEdge*"></a>
  <h4 id="Engine_Core_Components_Mesh_AddEdge_Engine_Core_Components_Edge_" data-uid="Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Edge)">AddEdge(Edge)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddEdge(Edge edge)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Edge.html">Edge</a></td>
        <td><span class="parametername">edge</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_AddEdge_" data-uid="Engine.Core.Components.Mesh.AddEdge*"></a>
  <h4 id="Engine_Core_Components_Mesh_AddEdge_Engine_Core_Components_Vertex_Engine_Core_Components_Vertex_" data-uid="Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Vertex,Engine.Core.Components.Vertex)">AddEdge(Vertex, Vertex)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddEdge(Vertex v1, Vertex v2)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Vertex.html">Vertex</a></td>
        <td><span class="parametername">v1</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Vertex.html">Vertex</a></td>
        <td><span class="parametername">v2</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_AddEdge_" data-uid="Engine.Core.Components.Mesh.AddEdge*"></a>
  <h4 id="Engine_Core_Components_Mesh_AddEdge_Engine_Core_Components_Vertex___" data-uid="Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Vertex[])">AddEdge(Vertex[])</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddEdge(Vertex[] vertices)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Vertex.html">Vertex</a>[]</td>
        <td><span class="parametername">vertices</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_AddFace_" data-uid="Engine.Core.Components.Mesh.AddFace*"></a>
  <h4 id="Engine_Core_Components_Mesh_AddFace_Engine_Core_Components_Face_" data-uid="Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Face)">AddFace(Face)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddFace(Face face)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Face.html">Face</a></td>
        <td><span class="parametername">face</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_AddFace_" data-uid="Engine.Core.Components.Mesh.AddFace*"></a>
  <h4 id="Engine_Core_Components_Mesh_AddFace_Engine_Core_Components_Vertex___" data-uid="Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Vertex[])">AddFace(Vertex[])</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddFace(Vertex[] vertices)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Vertex.html">Vertex</a>[]</td>
        <td><span class="parametername">vertices</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_AddFace_" data-uid="Engine.Core.Components.Mesh.AddFace*"></a>
  <h4 id="Engine_Core_Components_Mesh_AddFace_Engine_Core_Components_Vertex___Engine_Core_Components_Edge___" data-uid="Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[])">AddFace(Vertex[], Edge[])</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddFace(Vertex[] vertices, Edge[] edges)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Vertex.html">Vertex</a>[]</td>
        <td><span class="parametername">vertices</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Edge.html">Edge</a>[]</td>
        <td><span class="parametername">edges</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_AddVertex_" data-uid="Engine.Core.Components.Mesh.AddVertex*"></a>
  <h4 id="Engine_Core_Components_Mesh_AddVertex_Engine_Core_Components_Vertex_" data-uid="Engine.Core.Components.Mesh.AddVertex(Engine.Core.Components.Vertex)">AddVertex(Vertex)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddVertex(Vertex vertex)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Vertex.html">Vertex</a></td>
        <td><span class="parametername">vertex</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_FindEdge_" data-uid="Engine.Core.Components.Mesh.FindEdge*"></a>
  <h4 id="Engine_Core_Components_Mesh_FindEdge_Engine_Core_Components_Edge_" data-uid="Engine.Core.Components.Mesh.FindEdge(Engine.Core.Components.Edge)">FindEdge(Edge)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Edge FindEdge(Edge edge)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Edge.html">Edge</a></td>
        <td><span class="parametername">edge</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Edge.html">Edge</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_FindFace_" data-uid="Engine.Core.Components.Mesh.FindFace*"></a>
  <h4 id="Engine_Core_Components_Mesh_FindFace_Engine_Core_Components_Face_" data-uid="Engine.Core.Components.Mesh.FindFace(Engine.Core.Components.Face)">FindFace(Face)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Face FindFace(Face face)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Face.html">Face</a></td>
        <td><span class="parametername">face</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Face.html">Face</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_FindIndex_" data-uid="Engine.Core.Components.Mesh.FindIndex*"></a>
  <h4 id="Engine_Core_Components_Mesh_FindIndex_Engine_Core_Components_Edge_" data-uid="Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Edge)">FindIndex(Edge)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int FindIndex(Edge edge)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Edge.html">Edge</a></td>
        <td><span class="parametername">edge</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_FindIndex_" data-uid="Engine.Core.Components.Mesh.FindIndex*"></a>
  <h4 id="Engine_Core_Components_Mesh_FindIndex_Engine_Core_Components_Face_" data-uid="Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Face)">FindIndex(Face)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int FindIndex(Face face)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Face.html">Face</a></td>
        <td><span class="parametername">face</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_FindIndex_" data-uid="Engine.Core.Components.Mesh.FindIndex*"></a>
  <h4 id="Engine_Core_Components_Mesh_FindIndex_Engine_Core_Components_Vertex_" data-uid="Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Vertex)">FindIndex(Vertex)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int FindIndex(Vertex vertex)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Vertex.html">Vertex</a></td>
        <td><span class="parametername">vertex</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_FindVertex_" data-uid="Engine.Core.Components.Mesh.FindVertex*"></a>
  <h4 id="Engine_Core_Components_Mesh_FindVertex_Engine_Core_Components_Vertex_" data-uid="Engine.Core.Components.Mesh.FindVertex(Engine.Core.Components.Vertex)">FindVertex(Vertex)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Vertex FindVertex(Vertex vertex)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Vertex.html">Vertex</a></td>
        <td><span class="parametername">vertex</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Vertex.html">Vertex</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_GetEdge_" data-uid="Engine.Core.Components.Mesh.GetEdge*"></a>
  <h4 id="Engine_Core_Components_Mesh_GetEdge_System_Int32_" data-uid="Engine.Core.Components.Mesh.GetEdge(System.Int32)">GetEdge(Int32)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Edge GetEdge(int index)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">index</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Edge.html">Edge</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_GetFace_" data-uid="Engine.Core.Components.Mesh.GetFace*"></a>
  <h4 id="Engine_Core_Components_Mesh_GetFace_System_Int32_" data-uid="Engine.Core.Components.Mesh.GetFace(System.Int32)">GetFace(Int32)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Face GetFace(int index)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">index</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Face.html">Face</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Engine_Core_Components_Mesh_GetVertex_" data-uid="Engine.Core.Components.Mesh.GetVertex*"></a>
  <h4 id="Engine_Core_Components_Mesh_GetVertex_System_Int32_" data-uid="Engine.Core.Components.Mesh.GetVertex(System.Int32)">GetVertex(Int32)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Vertex GetVertex(int index)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">index</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Engine.Core.Components.Vertex.html">Vertex</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
