### YamlMime:ManagedReference
items:
- uid: Engine.Core.Physics.CollisionDetection.Grid
  commentId: T:Engine.Core.Physics.CollisionDetection.Grid
  id: Grid
  parent: Engine.Core.Physics.CollisionDetection
  children:
  - Engine.Core.Physics.CollisionDetection.Grid.#ctor
  - Engine.Core.Physics.CollisionDetection.Grid.AddMeshToCell(Engine.Core.Maths.Vector2,Engine.Core.Components.Mesh3D)
  - Engine.Core.Physics.CollisionDetection.Grid.CellContains(Engine.Core.Maths.Vector2,Engine.Core.Components.Mesh3D)
  - Engine.Core.Physics.CollisionDetection.Grid.Contains(Engine.Core.Maths.Vector2)
  - Engine.Core.Physics.CollisionDetection.Grid.GetCell(Engine.Core.Maths.Vector2)
  - Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCell(Engine.Core.Maths.Vector2)
  - Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCells(Engine.Core.Maths.Vector2[])
  - Engine.Core.Physics.CollisionDetection.Grid.Item(Engine.Core.Maths.Vector2)
  - Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromAllCells(Engine.Core.Components.Mesh3D)
  - Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromCell(Engine.Core.Maths.Vector2,Engine.Core.Components.Mesh3D)
  - Engine.Core.Physics.CollisionDetection.Grid.SetCell(Engine.Core.Maths.Vector2,Engine.Core.Physics.CollisionDetection.Cell)
  langs:
  - csharp
  - vb
  name: Grid
  nameWithType: Grid
  fullName: Engine.Core.Physics.CollisionDetection.Grid
  type: Class
  source:
    remote:
      path: Engine.Core/Physics/CollisionDetection/Grid.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: Grid
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Physics/CollisionDetection/Grid.cs
    startLine: 10
  assemblies:
  - Engine
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public class Grid
    content.vb: Public Class Grid
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Engine.Core.Physics.CollisionDetection.Grid.Item(Engine.Core.Maths.Vector2)
  commentId: P:Engine.Core.Physics.CollisionDetection.Grid.Item(Engine.Core.Maths.Vector2)
  id: Item(Engine.Core.Maths.Vector2)
  parent: Engine.Core.Physics.CollisionDetection.Grid
  langs:
  - csharp
  - vb
  name: this[Vector2]
  nameWithType: Grid.this[Vector2]
  fullName: Engine.Core.Physics.CollisionDetection.Grid.this[Engine.Core.Maths.Vector2]
  type: Property
  source:
    remote:
      path: Engine.Core/Physics/CollisionDetection/Grid.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: this[]
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Physics/CollisionDetection/Grid.cs
    startLine: 14
  assemblies:
  - Engine
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public Cell this[Vector2 index] { get; set; }
    parameters:
    - id: index
      type: Engine.Core.Maths.Vector2
    return:
      type: Engine.Core.Physics.CollisionDetection.Cell
    content.vb: Public Default Property this[](index As Vector2) As Cell
  overload: Engine.Core.Physics.CollisionDetection.Grid.Item*
  nameWithType.vb: Grid.this[](Vector2)
  fullName.vb: Engine.Core.Physics.CollisionDetection.Grid.this[](Engine.Core.Maths.Vector2)
  name.vb: this[](Vector2)
- uid: Engine.Core.Physics.CollisionDetection.Grid.#ctor
  commentId: M:Engine.Core.Physics.CollisionDetection.Grid.#ctor
  id: '#ctor'
  parent: Engine.Core.Physics.CollisionDetection.Grid
  langs:
  - csharp
  - vb
  name: Grid()
  nameWithType: Grid.Grid()
  fullName: Engine.Core.Physics.CollisionDetection.Grid.Grid()
  type: Constructor
  source:
    remote:
      path: Engine.Core/Physics/CollisionDetection/Grid.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: .ctor
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Physics/CollisionDetection/Grid.cs
    startLine: 20
  assemblies:
  - Engine
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public Grid()
    content.vb: Public Sub New()
  overload: Engine.Core.Physics.CollisionDetection.Grid.#ctor*
  nameWithType.vb: Grid.New()
  fullName.vb: Engine.Core.Physics.CollisionDetection.Grid.New()
  name.vb: New()
- uid: Engine.Core.Physics.CollisionDetection.Grid.GetCell(Engine.Core.Maths.Vector2)
  commentId: M:Engine.Core.Physics.CollisionDetection.Grid.GetCell(Engine.Core.Maths.Vector2)
  id: GetCell(Engine.Core.Maths.Vector2)
  parent: Engine.Core.Physics.CollisionDetection.Grid
  langs:
  - csharp
  - vb
  name: GetCell(Vector2)
  nameWithType: Grid.GetCell(Vector2)
  fullName: Engine.Core.Physics.CollisionDetection.Grid.GetCell(Engine.Core.Maths.Vector2)
  type: Method
  source:
    remote:
      path: Engine.Core/Physics/CollisionDetection/Grid.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: GetCell
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Physics/CollisionDetection/Grid.cs
    startLine: 25
  assemblies:
  - Engine
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public Cell GetCell(Vector2 index)
    parameters:
    - id: index
      type: Engine.Core.Maths.Vector2
    return:
      type: Engine.Core.Physics.CollisionDetection.Cell
    content.vb: Public Function GetCell(index As Vector2) As Cell
  overload: Engine.Core.Physics.CollisionDetection.Grid.GetCell*
- uid: Engine.Core.Physics.CollisionDetection.Grid.SetCell(Engine.Core.Maths.Vector2,Engine.Core.Physics.CollisionDetection.Cell)
  commentId: M:Engine.Core.Physics.CollisionDetection.Grid.SetCell(Engine.Core.Maths.Vector2,Engine.Core.Physics.CollisionDetection.Cell)
  id: SetCell(Engine.Core.Maths.Vector2,Engine.Core.Physics.CollisionDetection.Cell)
  parent: Engine.Core.Physics.CollisionDetection.Grid
  langs:
  - csharp
  - vb
  name: SetCell(Vector2, Cell)
  nameWithType: Grid.SetCell(Vector2, Cell)
  fullName: Engine.Core.Physics.CollisionDetection.Grid.SetCell(Engine.Core.Maths.Vector2, Engine.Core.Physics.CollisionDetection.Cell)
  type: Method
  source:
    remote:
      path: Engine.Core/Physics/CollisionDetection/Grid.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: SetCell
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Physics/CollisionDetection/Grid.cs
    startLine: 37
  assemblies:
  - Engine
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public Cell SetCell(Vector2 index, Cell value)
    parameters:
    - id: index
      type: Engine.Core.Maths.Vector2
    - id: value
      type: Engine.Core.Physics.CollisionDetection.Cell
    return:
      type: Engine.Core.Physics.CollisionDetection.Cell
    content.vb: Public Function SetCell(index As Vector2, value As Cell) As Cell
  overload: Engine.Core.Physics.CollisionDetection.Grid.SetCell*
- uid: Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCell(Engine.Core.Maths.Vector2)
  commentId: M:Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCell(Engine.Core.Maths.Vector2)
  id: GetMeshesInCell(Engine.Core.Maths.Vector2)
  parent: Engine.Core.Physics.CollisionDetection.Grid
  langs:
  - csharp
  - vb
  name: GetMeshesInCell(Vector2)
  nameWithType: Grid.GetMeshesInCell(Vector2)
  fullName: Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCell(Engine.Core.Maths.Vector2)
  type: Method
  source:
    remote:
      path: Engine.Core/Physics/CollisionDetection/Grid.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: GetMeshesInCell
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Physics/CollisionDetection/Grid.cs
    startLine: 55
  assemblies:
  - Engine
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public List<Mesh3D> GetMeshesInCell(Vector2 index)
    parameters:
    - id: index
      type: Engine.Core.Maths.Vector2
    return:
      type: System.Collections.Generic.List{Engine.Core.Components.Mesh3D}
    content.vb: Public Function GetMeshesInCell(index As Vector2) As List(Of Mesh3D)
  overload: Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCell*
- uid: Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCells(Engine.Core.Maths.Vector2[])
  commentId: M:Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCells(Engine.Core.Maths.Vector2[])
  id: GetMeshesInCells(Engine.Core.Maths.Vector2[])
  parent: Engine.Core.Physics.CollisionDetection.Grid
  langs:
  - csharp
  - vb
  name: GetMeshesInCells(params Vector2[])
  nameWithType: Grid.GetMeshesInCells(params Vector2[])
  fullName: Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCells(params Engine.Core.Maths.Vector2[])
  type: Method
  source:
    remote:
      path: Engine.Core/Physics/CollisionDetection/Grid.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: GetMeshesInCells
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Physics/CollisionDetection/Grid.cs
    startLine: 60
  assemblies:
  - Engine
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public List<Mesh3D> GetMeshesInCells(params Vector2[] indexes)
    parameters:
    - id: indexes
      type: Engine.Core.Maths.Vector2[]
    return:
      type: System.Collections.Generic.List{Engine.Core.Components.Mesh3D}
    content.vb: Public Function GetMeshesInCells(ParamArray indexes As Vector2()) As List(Of Mesh3D)
  overload: Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCells*
  nameWithType.vb: Grid.GetMeshesInCells(ParamArray Vector2())
  fullName.vb: Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCells(ParamArray Engine.Core.Maths.Vector2())
  name.vb: GetMeshesInCells(ParamArray Vector2())
- uid: Engine.Core.Physics.CollisionDetection.Grid.Contains(Engine.Core.Maths.Vector2)
  commentId: M:Engine.Core.Physics.CollisionDetection.Grid.Contains(Engine.Core.Maths.Vector2)
  id: Contains(Engine.Core.Maths.Vector2)
  parent: Engine.Core.Physics.CollisionDetection.Grid
  langs:
  - csharp
  - vb
  name: Contains(Vector2)
  nameWithType: Grid.Contains(Vector2)
  fullName: Engine.Core.Physics.CollisionDetection.Grid.Contains(Engine.Core.Maths.Vector2)
  type: Method
  source:
    remote:
      path: Engine.Core/Physics/CollisionDetection/Grid.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: Contains
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Physics/CollisionDetection/Grid.cs
    startLine: 73
  assemblies:
  - Engine
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public bool Contains(Vector2 index)
    parameters:
    - id: index
      type: Engine.Core.Maths.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function Contains(index As Vector2) As Boolean
  overload: Engine.Core.Physics.CollisionDetection.Grid.Contains*
- uid: Engine.Core.Physics.CollisionDetection.Grid.AddMeshToCell(Engine.Core.Maths.Vector2,Engine.Core.Components.Mesh3D)
  commentId: M:Engine.Core.Physics.CollisionDetection.Grid.AddMeshToCell(Engine.Core.Maths.Vector2,Engine.Core.Components.Mesh3D)
  id: AddMeshToCell(Engine.Core.Maths.Vector2,Engine.Core.Components.Mesh3D)
  parent: Engine.Core.Physics.CollisionDetection.Grid
  langs:
  - csharp
  - vb
  name: AddMeshToCell(Vector2, Mesh3D)
  nameWithType: Grid.AddMeshToCell(Vector2, Mesh3D)
  fullName: Engine.Core.Physics.CollisionDetection.Grid.AddMeshToCell(Engine.Core.Maths.Vector2, Engine.Core.Components.Mesh3D)
  type: Method
  source:
    remote:
      path: Engine.Core/Physics/CollisionDetection/Grid.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: AddMeshToCell
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Physics/CollisionDetection/Grid.cs
    startLine: 86
  assemblies:
  - Engine
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public void AddMeshToCell(Vector2 index, Mesh3D mesh)
    parameters:
    - id: index
      type: Engine.Core.Maths.Vector2
    - id: mesh
      type: Engine.Core.Components.Mesh3D
    content.vb: Public Sub AddMeshToCell(index As Vector2, mesh As Mesh3D)
  overload: Engine.Core.Physics.CollisionDetection.Grid.AddMeshToCell*
- uid: Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromCell(Engine.Core.Maths.Vector2,Engine.Core.Components.Mesh3D)
  commentId: M:Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromCell(Engine.Core.Maths.Vector2,Engine.Core.Components.Mesh3D)
  id: RemoveMeshFromCell(Engine.Core.Maths.Vector2,Engine.Core.Components.Mesh3D)
  parent: Engine.Core.Physics.CollisionDetection.Grid
  langs:
  - csharp
  - vb
  name: RemoveMeshFromCell(Vector2, Mesh3D)
  nameWithType: Grid.RemoveMeshFromCell(Vector2, Mesh3D)
  fullName: Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromCell(Engine.Core.Maths.Vector2, Engine.Core.Components.Mesh3D)
  type: Method
  source:
    remote:
      path: Engine.Core/Physics/CollisionDetection/Grid.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: RemoveMeshFromCell
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Physics/CollisionDetection/Grid.cs
    startLine: 90
  assemblies:
  - Engine
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public void RemoveMeshFromCell(Vector2 index, Mesh3D mesh)
    parameters:
    - id: index
      type: Engine.Core.Maths.Vector2
    - id: mesh
      type: Engine.Core.Components.Mesh3D
    content.vb: Public Sub RemoveMeshFromCell(index As Vector2, mesh As Mesh3D)
  overload: Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromCell*
- uid: Engine.Core.Physics.CollisionDetection.Grid.CellContains(Engine.Core.Maths.Vector2,Engine.Core.Components.Mesh3D)
  commentId: M:Engine.Core.Physics.CollisionDetection.Grid.CellContains(Engine.Core.Maths.Vector2,Engine.Core.Components.Mesh3D)
  id: CellContains(Engine.Core.Maths.Vector2,Engine.Core.Components.Mesh3D)
  parent: Engine.Core.Physics.CollisionDetection.Grid
  langs:
  - csharp
  - vb
  name: CellContains(Vector2, Mesh3D)
  nameWithType: Grid.CellContains(Vector2, Mesh3D)
  fullName: Engine.Core.Physics.CollisionDetection.Grid.CellContains(Engine.Core.Maths.Vector2, Engine.Core.Components.Mesh3D)
  type: Method
  source:
    remote:
      path: Engine.Core/Physics/CollisionDetection/Grid.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: CellContains
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Physics/CollisionDetection/Grid.cs
    startLine: 94
  assemblies:
  - Engine
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public bool CellContains(Vector2 index, Mesh3D mesh)
    parameters:
    - id: index
      type: Engine.Core.Maths.Vector2
    - id: mesh
      type: Engine.Core.Components.Mesh3D
    return:
      type: System.Boolean
    content.vb: Public Function CellContains(index As Vector2, mesh As Mesh3D) As Boolean
  overload: Engine.Core.Physics.CollisionDetection.Grid.CellContains*
- uid: Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromAllCells(Engine.Core.Components.Mesh3D)
  commentId: M:Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromAllCells(Engine.Core.Components.Mesh3D)
  id: RemoveMeshFromAllCells(Engine.Core.Components.Mesh3D)
  parent: Engine.Core.Physics.CollisionDetection.Grid
  langs:
  - csharp
  - vb
  name: RemoveMeshFromAllCells(Mesh3D)
  nameWithType: Grid.RemoveMeshFromAllCells(Mesh3D)
  fullName: Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromAllCells(Engine.Core.Components.Mesh3D)
  type: Method
  source:
    remote:
      path: Engine.Core/Physics/CollisionDetection/Grid.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: RemoveMeshFromAllCells
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Physics/CollisionDetection/Grid.cs
    startLine: 98
  assemblies:
  - Engine
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public void RemoveMeshFromAllCells(Mesh3D mesh)
    parameters:
    - id: mesh
      type: Engine.Core.Components.Mesh3D
    content.vb: Public Sub RemoveMeshFromAllCells(mesh As Mesh3D)
  overload: Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromAllCells*
references:
- uid: Engine.Core.Physics.CollisionDetection
  commentId: N:Engine.Core.Physics.CollisionDetection
  href: Engine.html
  name: Engine.Core.Physics.CollisionDetection
  nameWithType: Engine.Core.Physics.CollisionDetection
  fullName: Engine.Core.Physics.CollisionDetection
  spec.csharp:
  - uid: Engine
    name: Engine
    href: Engine.html
  - name: .
  - uid: Engine.Core
    name: Core
    href: Engine.Core.html
  - name: .
  - uid: Engine.Core.Physics
    name: Physics
    href: Engine.Core.Physics.html
  - name: .
  - uid: Engine.Core.Physics.CollisionDetection
    name: CollisionDetection
    href: Engine.Core.Physics.CollisionDetection.html
  spec.vb:
  - uid: Engine
    name: Engine
    href: Engine.html
  - name: .
  - uid: Engine.Core
    name: Core
    href: Engine.Core.html
  - name: .
  - uid: Engine.Core.Physics
    name: Physics
    href: Engine.Core.Physics.html
  - name: .
  - uid: Engine.Core.Physics.CollisionDetection
    name: CollisionDetection
    href: Engine.Core.Physics.CollisionDetection.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Core.Physics.CollisionDetection.Grid.Item*
  commentId: Overload:Engine.Core.Physics.CollisionDetection.Grid.Item
  href: Engine.Core.Physics.CollisionDetection.Grid.html#Engine_Core_Physics_CollisionDetection_Grid_Item_Engine_Core_Maths_Vector2_
  name: this
  nameWithType: Grid.this
  fullName: Engine.Core.Physics.CollisionDetection.Grid.this
  nameWithType.vb: Grid.this[]
  fullName.vb: Engine.Core.Physics.CollisionDetection.Grid.this[]
  name.vb: this[]
- uid: Engine.Core.Maths.Vector2
  commentId: T:Engine.Core.Maths.Vector2
  parent: Engine.Core.Maths
  href: Engine.Core.Maths.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: Engine.Core.Maths.Vector2
- uid: Engine.Core.Physics.CollisionDetection.Cell
  commentId: T:Engine.Core.Physics.CollisionDetection.Cell
  parent: Engine.Core.Physics.CollisionDetection
  href: Engine.Core.Physics.CollisionDetection.Cell.html
  name: Cell
  nameWithType: Cell
  fullName: Engine.Core.Physics.CollisionDetection.Cell
- uid: Engine.Core.Maths
  commentId: N:Engine.Core.Maths
  href: Engine.html
  name: Engine.Core.Maths
  nameWithType: Engine.Core.Maths
  fullName: Engine.Core.Maths
  spec.csharp:
  - uid: Engine
    name: Engine
    href: Engine.html
  - name: .
  - uid: Engine.Core
    name: Core
    href: Engine.Core.html
  - name: .
  - uid: Engine.Core.Maths
    name: Maths
    href: Engine.Core.Maths.html
  spec.vb:
  - uid: Engine
    name: Engine
    href: Engine.html
  - name: .
  - uid: Engine.Core
    name: Core
    href: Engine.Core.html
  - name: .
  - uid: Engine.Core.Maths
    name: Maths
    href: Engine.Core.Maths.html
- uid: Engine.Core.Physics.CollisionDetection.Grid.#ctor*
  commentId: Overload:Engine.Core.Physics.CollisionDetection.Grid.#ctor
  href: Engine.Core.Physics.CollisionDetection.Grid.html#Engine_Core_Physics_CollisionDetection_Grid__ctor
  name: Grid
  nameWithType: Grid.Grid
  fullName: Engine.Core.Physics.CollisionDetection.Grid.Grid
  nameWithType.vb: Grid.New
  fullName.vb: Engine.Core.Physics.CollisionDetection.Grid.New
  name.vb: New
- uid: Engine.Core.Physics.CollisionDetection.Grid.GetCell*
  commentId: Overload:Engine.Core.Physics.CollisionDetection.Grid.GetCell
  href: Engine.Core.Physics.CollisionDetection.Grid.html#Engine_Core_Physics_CollisionDetection_Grid_GetCell_Engine_Core_Maths_Vector2_
  name: GetCell
  nameWithType: Grid.GetCell
  fullName: Engine.Core.Physics.CollisionDetection.Grid.GetCell
- uid: Engine.Core.Physics.CollisionDetection.Grid.SetCell*
  commentId: Overload:Engine.Core.Physics.CollisionDetection.Grid.SetCell
  href: Engine.Core.Physics.CollisionDetection.Grid.html#Engine_Core_Physics_CollisionDetection_Grid_SetCell_Engine_Core_Maths_Vector2_Engine_Core_Physics_CollisionDetection_Cell_
  name: SetCell
  nameWithType: Grid.SetCell
  fullName: Engine.Core.Physics.CollisionDetection.Grid.SetCell
- uid: Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCell*
  commentId: Overload:Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCell
  href: Engine.Core.Physics.CollisionDetection.Grid.html#Engine_Core_Physics_CollisionDetection_Grid_GetMeshesInCell_Engine_Core_Maths_Vector2_
  name: GetMeshesInCell
  nameWithType: Grid.GetMeshesInCell
  fullName: Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCell
- uid: System.Collections.Generic.List{Engine.Core.Components.Mesh3D}
  commentId: T:System.Collections.Generic.List{Engine.Core.Components.Mesh3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Mesh3D>
  nameWithType: List<Mesh3D>
  fullName: System.Collections.Generic.List<Engine.Core.Components.Mesh3D>
  nameWithType.vb: List(Of Mesh3D)
  fullName.vb: System.Collections.Generic.List(Of Engine.Core.Components.Mesh3D)
  name.vb: List(Of Mesh3D)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Engine.Core.Components.Mesh3D
    name: Mesh3D
    href: Engine.Core.Components.Mesh3D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Engine.Core.Components.Mesh3D
    name: Mesh3D
    href: Engine.Core.Components.Mesh3D.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCells*
  commentId: Overload:Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCells
  href: Engine.Core.Physics.CollisionDetection.Grid.html#Engine_Core_Physics_CollisionDetection_Grid_GetMeshesInCells_Engine_Core_Maths_Vector2___
  name: GetMeshesInCells
  nameWithType: Grid.GetMeshesInCells
  fullName: Engine.Core.Physics.CollisionDetection.Grid.GetMeshesInCells
- uid: Engine.Core.Maths.Vector2[]
  isExternal: true
  href: Engine.Core.Maths.Vector2.html
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: Engine.Core.Maths.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: Engine.Core.Maths.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: Engine.Core.Maths.Vector2
    name: Vector2
    href: Engine.Core.Maths.Vector2.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Engine.Core.Maths.Vector2
    name: Vector2
    href: Engine.Core.Maths.Vector2.html
  - name: (
  - name: )
- uid: Engine.Core.Physics.CollisionDetection.Grid.Contains*
  commentId: Overload:Engine.Core.Physics.CollisionDetection.Grid.Contains
  href: Engine.Core.Physics.CollisionDetection.Grid.html#Engine_Core_Physics_CollisionDetection_Grid_Contains_Engine_Core_Maths_Vector2_
  name: Contains
  nameWithType: Grid.Contains
  fullName: Engine.Core.Physics.CollisionDetection.Grid.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Engine.Core.Physics.CollisionDetection.Grid.AddMeshToCell*
  commentId: Overload:Engine.Core.Physics.CollisionDetection.Grid.AddMeshToCell
  href: Engine.Core.Physics.CollisionDetection.Grid.html#Engine_Core_Physics_CollisionDetection_Grid_AddMeshToCell_Engine_Core_Maths_Vector2_Engine_Core_Components_Mesh3D_
  name: AddMeshToCell
  nameWithType: Grid.AddMeshToCell
  fullName: Engine.Core.Physics.CollisionDetection.Grid.AddMeshToCell
- uid: Engine.Core.Components.Mesh3D
  commentId: T:Engine.Core.Components.Mesh3D
  parent: Engine.Core.Components
  href: Engine.Core.Components.Mesh3D.html
  name: Mesh3D
  nameWithType: Mesh3D
  fullName: Engine.Core.Components.Mesh3D
- uid: Engine.Core.Components
  commentId: N:Engine.Core.Components
  href: Engine.html
  name: Engine.Core.Components
  nameWithType: Engine.Core.Components
  fullName: Engine.Core.Components
  spec.csharp:
  - uid: Engine
    name: Engine
    href: Engine.html
  - name: .
  - uid: Engine.Core
    name: Core
    href: Engine.Core.html
  - name: .
  - uid: Engine.Core.Components
    name: Components
    href: Engine.Core.Components.html
  spec.vb:
  - uid: Engine
    name: Engine
    href: Engine.html
  - name: .
  - uid: Engine.Core
    name: Core
    href: Engine.Core.html
  - name: .
  - uid: Engine.Core.Components
    name: Components
    href: Engine.Core.Components.html
- uid: Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromCell*
  commentId: Overload:Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromCell
  href: Engine.Core.Physics.CollisionDetection.Grid.html#Engine_Core_Physics_CollisionDetection_Grid_RemoveMeshFromCell_Engine_Core_Maths_Vector2_Engine_Core_Components_Mesh3D_
  name: RemoveMeshFromCell
  nameWithType: Grid.RemoveMeshFromCell
  fullName: Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromCell
- uid: Engine.Core.Physics.CollisionDetection.Grid.CellContains*
  commentId: Overload:Engine.Core.Physics.CollisionDetection.Grid.CellContains
  href: Engine.Core.Physics.CollisionDetection.Grid.html#Engine_Core_Physics_CollisionDetection_Grid_CellContains_Engine_Core_Maths_Vector2_Engine_Core_Components_Mesh3D_
  name: CellContains
  nameWithType: Grid.CellContains
  fullName: Engine.Core.Physics.CollisionDetection.Grid.CellContains
- uid: Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromAllCells*
  commentId: Overload:Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromAllCells
  href: Engine.Core.Physics.CollisionDetection.Grid.html#Engine_Core_Physics_CollisionDetection_Grid_RemoveMeshFromAllCells_Engine_Core_Components_Mesh3D_
  name: RemoveMeshFromAllCells
  nameWithType: Grid.RemoveMeshFromAllCells
  fullName: Engine.Core.Physics.CollisionDetection.Grid.RemoveMeshFromAllCells
