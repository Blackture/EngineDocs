### YamlMime:ManagedReference
items:
- uid: Engine.Core.Events.Event`1
  commentId: T:Engine.Core.Events.Event`1
  id: Event`1
  parent: Engine.Core.Events
  children:
  - Engine.Core.Events.Event`1.AddListener(System.Action{`0})
  - Engine.Core.Events.Event`1.Invoke(`0)
  - Engine.Core.Events.Event`1.RemoveAllListeners
  - Engine.Core.Events.Event`1.RemoveListener(System.Action{`0})
  - Engine.Core.Events.Event`1.op_Addition(Engine.Core.Events.Event{`0},System.Action{`0})
  - Engine.Core.Events.Event`1.op_Subtraction(Engine.Core.Events.Event{`0},System.Action{`0})
  langs:
  - csharp
  - vb
  name: Event<T>
  nameWithType: Event<T>
  fullName: Engine.Core.Events.Event<T>
  type: Class
  source:
    remote:
      path: Engine.Core/Events/EventT.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: Event
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Events/EventT.cs
    startLine: 9
  assemblies:
  - Engine
  namespace: Engine.Core.Events
  syntax:
    content: public class Event<T>
    typeParameters:
    - id: T
    content.vb: Public Class [Event](Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: Event(Of T)
  fullName.vb: Engine.Core.Events.Event(Of T)
  name.vb: Event(Of T)
- uid: Engine.Core.Events.Event`1.AddListener(System.Action{`0})
  commentId: M:Engine.Core.Events.Event`1.AddListener(System.Action{`0})
  id: AddListener(System.Action{`0})
  parent: Engine.Core.Events.Event`1
  langs:
  - csharp
  - vb
  name: AddListener(Action<T>)
  nameWithType: Event<T>.AddListener(Action<T>)
  fullName: Engine.Core.Events.Event<T>.AddListener(System.Action<T>)
  type: Method
  source:
    remote:
      path: Engine.Core/Events/EventT.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: AddListener
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Events/EventT.cs
    startLine: 15
  assemblies:
  - Engine
  namespace: Engine.Core.Events
  syntax:
    content: public void AddListener(Action<T> method)
    parameters:
    - id: method
      type: System.Action{{T}}
    content.vb: Public Sub AddListener(method As Action(Of T))
  overload: Engine.Core.Events.Event`1.AddListener*
  nameWithType.vb: Event(Of T).AddListener(Action(Of T))
  fullName.vb: Engine.Core.Events.Event(Of T).AddListener(System.Action(Of T))
  name.vb: AddListener(Action(Of T))
- uid: Engine.Core.Events.Event`1.RemoveListener(System.Action{`0})
  commentId: M:Engine.Core.Events.Event`1.RemoveListener(System.Action{`0})
  id: RemoveListener(System.Action{`0})
  parent: Engine.Core.Events.Event`1
  langs:
  - csharp
  - vb
  name: RemoveListener(Action<T>)
  nameWithType: Event<T>.RemoveListener(Action<T>)
  fullName: Engine.Core.Events.Event<T>.RemoveListener(System.Action<T>)
  type: Method
  source:
    remote:
      path: Engine.Core/Events/EventT.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: RemoveListener
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Events/EventT.cs
    startLine: 20
  assemblies:
  - Engine
  namespace: Engine.Core.Events
  syntax:
    content: public void RemoveListener(Action<T> method)
    parameters:
    - id: method
      type: System.Action{{T}}
    content.vb: Public Sub RemoveListener(method As Action(Of T))
  overload: Engine.Core.Events.Event`1.RemoveListener*
  nameWithType.vb: Event(Of T).RemoveListener(Action(Of T))
  fullName.vb: Engine.Core.Events.Event(Of T).RemoveListener(System.Action(Of T))
  name.vb: RemoveListener(Action(Of T))
- uid: Engine.Core.Events.Event`1.RemoveAllListeners
  commentId: M:Engine.Core.Events.Event`1.RemoveAllListeners
  id: RemoveAllListeners
  parent: Engine.Core.Events.Event`1
  langs:
  - csharp
  - vb
  name: RemoveAllListeners()
  nameWithType: Event<T>.RemoveAllListeners()
  fullName: Engine.Core.Events.Event<T>.RemoveAllListeners()
  type: Method
  source:
    remote:
      path: Engine.Core/Events/EventT.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: RemoveAllListeners
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Events/EventT.cs
    startLine: 25
  assemblies:
  - Engine
  namespace: Engine.Core.Events
  syntax:
    content: public void RemoveAllListeners()
    content.vb: Public Sub RemoveAllListeners()
  overload: Engine.Core.Events.Event`1.RemoveAllListeners*
  nameWithType.vb: Event(Of T).RemoveAllListeners()
  fullName.vb: Engine.Core.Events.Event(Of T).RemoveAllListeners()
- uid: Engine.Core.Events.Event`1.Invoke(`0)
  commentId: M:Engine.Core.Events.Event`1.Invoke(`0)
  id: Invoke(`0)
  parent: Engine.Core.Events.Event`1
  langs:
  - csharp
  - vb
  name: Invoke(T)
  nameWithType: Event<T>.Invoke(T)
  fullName: Engine.Core.Events.Event<T>.Invoke(T)
  type: Method
  source:
    remote:
      path: Engine.Core/Events/EventT.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: Invoke
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Events/EventT.cs
    startLine: 30
  assemblies:
  - Engine
  namespace: Engine.Core.Events
  syntax:
    content: public void Invoke(T t)
    parameters:
    - id: t
      type: '{T}'
    content.vb: Public Sub Invoke(t As T)
  overload: Engine.Core.Events.Event`1.Invoke*
  nameWithType.vb: Event(Of T).Invoke(T)
  fullName.vb: Engine.Core.Events.Event(Of T).Invoke(T)
- uid: Engine.Core.Events.Event`1.op_Addition(Engine.Core.Events.Event{`0},System.Action{`0})
  commentId: M:Engine.Core.Events.Event`1.op_Addition(Engine.Core.Events.Event{`0},System.Action{`0})
  id: op_Addition(Engine.Core.Events.Event{`0},System.Action{`0})
  parent: Engine.Core.Events.Event`1
  langs:
  - csharp
  - vb
  name: operator +(Event<T>, Action<T>)
  nameWithType: Event<T>.operator +(Event<T>, Action<T>)
  fullName: Engine.Core.Events.Event<T>.operator +(Engine.Core.Events.Event<T>, System.Action<T>)
  type: Operator
  source:
    remote:
      path: Engine.Core/Events/EventT.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: op_Addition
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Events/EventT.cs
    startLine: 35
  assemblies:
  - Engine
  namespace: Engine.Core.Events
  syntax:
    content: public static Event<T> operator +(Event<T> e, Action<T> method)
    parameters:
    - id: e
      type: Engine.Core.Events.Event`1
    - id: method
      type: System.Action{{T}}
    return:
      type: Engine.Core.Events.Event`1
    content.vb: Public Shared Operator +(e As [Event](Of T), method As Action(Of T)) As [Event](Of T)
  overload: Engine.Core.Events.Event`1.op_Addition*
  nameWithType.vb: Event(Of T).+(Event(Of T), Action(Of T))
  fullName.vb: Engine.Core.Events.Event(Of T).+(Engine.Core.Events.Event(Of T), System.Action(Of T))
  name.vb: +(Event(Of T), Action(Of T))
- uid: Engine.Core.Events.Event`1.op_Subtraction(Engine.Core.Events.Event{`0},System.Action{`0})
  commentId: M:Engine.Core.Events.Event`1.op_Subtraction(Engine.Core.Events.Event{`0},System.Action{`0})
  id: op_Subtraction(Engine.Core.Events.Event{`0},System.Action{`0})
  parent: Engine.Core.Events.Event`1
  langs:
  - csharp
  - vb
  name: operator -(Event<T>, Action<T>)
  nameWithType: Event<T>.operator -(Event<T>, Action<T>)
  fullName: Engine.Core.Events.Event<T>.operator -(Engine.Core.Events.Event<T>, System.Action<T>)
  type: Operator
  source:
    remote:
      path: Engine.Core/Events/EventT.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: op_Subtraction
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Events/EventT.cs
    startLine: 40
  assemblies:
  - Engine
  namespace: Engine.Core.Events
  syntax:
    content: public static Event<T> operator -(Event<T> e, Action<T> method)
    parameters:
    - id: e
      type: Engine.Core.Events.Event`1
    - id: method
      type: System.Action{{T}}
    return:
      type: Engine.Core.Events.Event`1
    content.vb: Public Shared Operator -(e As [Event](Of T), method As Action(Of T)) As [Event](Of T)
  overload: Engine.Core.Events.Event`1.op_Subtraction*
  nameWithType.vb: Event(Of T).-(Event(Of T), Action(Of T))
  fullName.vb: Engine.Core.Events.Event(Of T).-(Engine.Core.Events.Event(Of T), System.Action(Of T))
  name.vb: -(Event(Of T), Action(Of T))
references:
- uid: Engine.Core.Events
  commentId: N:Engine.Core.Events
  href: Engine.html
  name: Engine.Core.Events
  nameWithType: Engine.Core.Events
  fullName: Engine.Core.Events
  spec.csharp:
  - uid: Engine
    name: Engine
    href: Engine.html
  - name: .
  - uid: Engine.Core
    name: Core
    href: Engine.Core.html
  - name: .
  - uid: Engine.Core.Events
    name: Events
    href: Engine.Core.Events.html
  spec.vb:
  - uid: Engine
    name: Engine
    href: Engine.html
  - name: .
  - uid: Engine.Core
    name: Core
    href: Engine.Core.html
  - name: .
  - uid: Engine.Core.Events
    name: Events
    href: Engine.Core.Events.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Core.Events.Event`1.AddListener*
  commentId: Overload:Engine.Core.Events.Event`1.AddListener
  href: Engine.Core.Events.Event-1.html#Engine_Core_Events_Event_1_AddListener_System_Action__0__
  name: AddListener
  nameWithType: Event<T>.AddListener
  fullName: Engine.Core.Events.Event<T>.AddListener
  nameWithType.vb: Event(Of T).AddListener
  fullName.vb: Engine.Core.Events.Event(Of T).AddListener
- uid: System.Action{{T}}
  commentId: T:System.Action{`0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Engine.Core.Events.Event`1.RemoveListener*
  commentId: Overload:Engine.Core.Events.Event`1.RemoveListener
  href: Engine.Core.Events.Event-1.html#Engine_Core_Events_Event_1_RemoveListener_System_Action__0__
  name: RemoveListener
  nameWithType: Event<T>.RemoveListener
  fullName: Engine.Core.Events.Event<T>.RemoveListener
  nameWithType.vb: Event(Of T).RemoveListener
  fullName.vb: Engine.Core.Events.Event(Of T).RemoveListener
- uid: Engine.Core.Events.Event`1.RemoveAllListeners*
  commentId: Overload:Engine.Core.Events.Event`1.RemoveAllListeners
  href: Engine.Core.Events.Event-1.html#Engine_Core_Events_Event_1_RemoveAllListeners
  name: RemoveAllListeners
  nameWithType: Event<T>.RemoveAllListeners
  fullName: Engine.Core.Events.Event<T>.RemoveAllListeners
  nameWithType.vb: Event(Of T).RemoveAllListeners
  fullName.vb: Engine.Core.Events.Event(Of T).RemoveAllListeners
- uid: Engine.Core.Events.Event`1.Invoke*
  commentId: Overload:Engine.Core.Events.Event`1.Invoke
  href: Engine.Core.Events.Event-1.html#Engine_Core_Events_Event_1_Invoke__0_
  name: Invoke
  nameWithType: Event<T>.Invoke
  fullName: Engine.Core.Events.Event<T>.Invoke
  nameWithType.vb: Event(Of T).Invoke
  fullName.vb: Engine.Core.Events.Event(Of T).Invoke
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Engine.Core.Events.Event`1.op_Addition*
  commentId: Overload:Engine.Core.Events.Event`1.op_Addition
  href: Engine.Core.Events.Event-1.html#Engine_Core_Events_Event_1_op_Addition_Engine_Core_Events_Event__0__System_Action__0__
  name: operator +
  nameWithType: Event<T>.operator +
  fullName: Engine.Core.Events.Event<T>.operator +
  nameWithType.vb: Event(Of T).+
  fullName.vb: Engine.Core.Events.Event(Of T).+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Engine.Core.Events.Event`1.op_Addition*
    name: +
    href: Engine.Core.Events.Event-1.html#Engine_Core_Events_Event_1_op_Addition_Engine_Core_Events_Event__0__System_Action__0__
- uid: Engine.Core.Events.Event`1
  commentId: T:Engine.Core.Events.Event`1
  parent: Engine.Core.Events
  href: Engine.Core.Events.Event-1.html
  name: Event<T>
  nameWithType: Event<T>
  fullName: Engine.Core.Events.Event<T>
  nameWithType.vb: Event(Of T)
  fullName.vb: Engine.Core.Events.Event(Of T)
  name.vb: Event(Of T)
  spec.csharp:
  - uid: Engine.Core.Events.Event`1
    name: Event
    href: Engine.Core.Events.Event-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Engine.Core.Events.Event`1
    name: Event
    href: Engine.Core.Events.Event-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Engine.Core.Events.Event`1.op_Subtraction*
  commentId: Overload:Engine.Core.Events.Event`1.op_Subtraction
  href: Engine.Core.Events.Event-1.html#Engine_Core_Events_Event_1_op_Subtraction_Engine_Core_Events_Event__0__System_Action__0__
  name: operator -
  nameWithType: Event<T>.operator -
  fullName: Engine.Core.Events.Event<T>.operator -
  nameWithType.vb: Event(Of T).-
  fullName.vb: Engine.Core.Events.Event(Of T).-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Engine.Core.Events.Event`1.op_Subtraction*
    name: '-'
    href: Engine.Core.Events.Event-1.html#Engine_Core_Events_Event_1_op_Subtraction_Engine_Core_Events_Event__0__System_Action__0__
