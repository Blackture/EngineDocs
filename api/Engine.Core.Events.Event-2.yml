### YamlMime:ManagedReference
items:
- uid: Engine.Core.Events.Event`2
  commentId: T:Engine.Core.Events.Event`2
  id: Event`2
  parent: Engine.Core.Events
  children:
  - Engine.Core.Events.Event`2.AddListener(System.Action{`0,`1})
  - Engine.Core.Events.Event`2.Invoke(`0,`1)
  - Engine.Core.Events.Event`2.RemoveAllListeners
  - Engine.Core.Events.Event`2.RemoveListener(System.Action{`0,`1})
  - Engine.Core.Events.Event`2.op_Addition(Engine.Core.Events.Event{`0,`1},System.Action{`0,`1})
  - Engine.Core.Events.Event`2.op_Subtraction(Engine.Core.Events.Event{`0,`1},System.Action{`0,`1})
  langs:
  - csharp
  - vb
  name: Event<T0, T1>
  nameWithType: Event<T0, T1>
  fullName: Engine.Core.Events.Event<T0, T1>
  type: Class
  source:
    remote:
      path: Engine.Core/Events/EventT2.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: Event
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Events/EventT2.cs
    startLine: 9
  assemblies:
  - Engine
  namespace: Engine.Core.Events
  syntax:
    content: public class Event<T0, T1>
    typeParameters:
    - id: T0
    - id: T1
    content.vb: Public Class [Event](Of T0, T1)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: Event(Of T0, T1)
  fullName.vb: Engine.Core.Events.Event(Of T0, T1)
  name.vb: Event(Of T0, T1)
- uid: Engine.Core.Events.Event`2.AddListener(System.Action{`0,`1})
  commentId: M:Engine.Core.Events.Event`2.AddListener(System.Action{`0,`1})
  id: AddListener(System.Action{`0,`1})
  parent: Engine.Core.Events.Event`2
  langs:
  - csharp
  - vb
  name: AddListener(Action<T0, T1>)
  nameWithType: Event<T0, T1>.AddListener(Action<T0, T1>)
  fullName: Engine.Core.Events.Event<T0, T1>.AddListener(System.Action<T0, T1>)
  type: Method
  source:
    remote:
      path: Engine.Core/Events/EventT2.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: AddListener
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Events/EventT2.cs
    startLine: 15
  assemblies:
  - Engine
  namespace: Engine.Core.Events
  syntax:
    content: public void AddListener(Action<T0, T1> method)
    parameters:
    - id: method
      type: System.Action{{T0},{T1}}
    content.vb: Public Sub AddListener(method As Action(Of T0, T1))
  overload: Engine.Core.Events.Event`2.AddListener*
  nameWithType.vb: Event(Of T0, T1).AddListener(Action(Of T0, T1))
  fullName.vb: Engine.Core.Events.Event(Of T0, T1).AddListener(System.Action(Of T0, T1))
  name.vb: AddListener(Action(Of T0, T1))
- uid: Engine.Core.Events.Event`2.RemoveListener(System.Action{`0,`1})
  commentId: M:Engine.Core.Events.Event`2.RemoveListener(System.Action{`0,`1})
  id: RemoveListener(System.Action{`0,`1})
  parent: Engine.Core.Events.Event`2
  langs:
  - csharp
  - vb
  name: RemoveListener(Action<T0, T1>)
  nameWithType: Event<T0, T1>.RemoveListener(Action<T0, T1>)
  fullName: Engine.Core.Events.Event<T0, T1>.RemoveListener(System.Action<T0, T1>)
  type: Method
  source:
    remote:
      path: Engine.Core/Events/EventT2.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: RemoveListener
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Events/EventT2.cs
    startLine: 20
  assemblies:
  - Engine
  namespace: Engine.Core.Events
  syntax:
    content: public void RemoveListener(Action<T0, T1> method)
    parameters:
    - id: method
      type: System.Action{{T0},{T1}}
    content.vb: Public Sub RemoveListener(method As Action(Of T0, T1))
  overload: Engine.Core.Events.Event`2.RemoveListener*
  nameWithType.vb: Event(Of T0, T1).RemoveListener(Action(Of T0, T1))
  fullName.vb: Engine.Core.Events.Event(Of T0, T1).RemoveListener(System.Action(Of T0, T1))
  name.vb: RemoveListener(Action(Of T0, T1))
- uid: Engine.Core.Events.Event`2.RemoveAllListeners
  commentId: M:Engine.Core.Events.Event`2.RemoveAllListeners
  id: RemoveAllListeners
  parent: Engine.Core.Events.Event`2
  langs:
  - csharp
  - vb
  name: RemoveAllListeners()
  nameWithType: Event<T0, T1>.RemoveAllListeners()
  fullName: Engine.Core.Events.Event<T0, T1>.RemoveAllListeners()
  type: Method
  source:
    remote:
      path: Engine.Core/Events/EventT2.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: RemoveAllListeners
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Events/EventT2.cs
    startLine: 25
  assemblies:
  - Engine
  namespace: Engine.Core.Events
  syntax:
    content: public void RemoveAllListeners()
    content.vb: Public Sub RemoveAllListeners()
  overload: Engine.Core.Events.Event`2.RemoveAllListeners*
  nameWithType.vb: Event(Of T0, T1).RemoveAllListeners()
  fullName.vb: Engine.Core.Events.Event(Of T0, T1).RemoveAllListeners()
- uid: Engine.Core.Events.Event`2.Invoke(`0,`1)
  commentId: M:Engine.Core.Events.Event`2.Invoke(`0,`1)
  id: Invoke(`0,`1)
  parent: Engine.Core.Events.Event`2
  langs:
  - csharp
  - vb
  name: Invoke(T0, T1)
  nameWithType: Event<T0, T1>.Invoke(T0, T1)
  fullName: Engine.Core.Events.Event<T0, T1>.Invoke(T0, T1)
  type: Method
  source:
    remote:
      path: Engine.Core/Events/EventT2.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: Invoke
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Events/EventT2.cs
    startLine: 30
  assemblies:
  - Engine
  namespace: Engine.Core.Events
  syntax:
    content: public void Invoke(T0 t0, T1 t1)
    parameters:
    - id: t0
      type: '{T0}'
    - id: t1
      type: '{T1}'
    content.vb: Public Sub Invoke(t0 As T0, t1 As T1)
  overload: Engine.Core.Events.Event`2.Invoke*
  nameWithType.vb: Event(Of T0, T1).Invoke(T0, T1)
  fullName.vb: Engine.Core.Events.Event(Of T0, T1).Invoke(T0, T1)
- uid: Engine.Core.Events.Event`2.op_Addition(Engine.Core.Events.Event{`0,`1},System.Action{`0,`1})
  commentId: M:Engine.Core.Events.Event`2.op_Addition(Engine.Core.Events.Event{`0,`1},System.Action{`0,`1})
  id: op_Addition(Engine.Core.Events.Event{`0,`1},System.Action{`0,`1})
  parent: Engine.Core.Events.Event`2
  langs:
  - csharp
  - vb
  name: operator +(Event<T0, T1>, Action<T0, T1>)
  nameWithType: Event<T0, T1>.operator +(Event<T0, T1>, Action<T0, T1>)
  fullName: Engine.Core.Events.Event<T0, T1>.operator +(Engine.Core.Events.Event<T0, T1>, System.Action<T0, T1>)
  type: Operator
  source:
    remote:
      path: Engine.Core/Events/EventT2.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: op_Addition
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Events/EventT2.cs
    startLine: 35
  assemblies:
  - Engine
  namespace: Engine.Core.Events
  syntax:
    content: public static Event<T0, T1> operator +(Event<T0, T1> e, Action<T0, T1> method)
    parameters:
    - id: e
      type: Engine.Core.Events.Event`2
    - id: method
      type: System.Action{{T0},{T1}}
    return:
      type: Engine.Core.Events.Event`2
    content.vb: Public Shared Operator +(e As [Event](Of T0, T1), method As Action(Of T0, T1)) As [Event](Of T0, T1)
  overload: Engine.Core.Events.Event`2.op_Addition*
  nameWithType.vb: Event(Of T0, T1).+(Event(Of T0, T1), Action(Of T0, T1))
  fullName.vb: Engine.Core.Events.Event(Of T0, T1).+(Engine.Core.Events.Event(Of T0, T1), System.Action(Of T0, T1))
  name.vb: +(Event(Of T0, T1), Action(Of T0, T1))
- uid: Engine.Core.Events.Event`2.op_Subtraction(Engine.Core.Events.Event{`0,`1},System.Action{`0,`1})
  commentId: M:Engine.Core.Events.Event`2.op_Subtraction(Engine.Core.Events.Event{`0,`1},System.Action{`0,`1})
  id: op_Subtraction(Engine.Core.Events.Event{`0,`1},System.Action{`0,`1})
  parent: Engine.Core.Events.Event`2
  langs:
  - csharp
  - vb
  name: operator -(Event<T0, T1>, Action<T0, T1>)
  nameWithType: Event<T0, T1>.operator -(Event<T0, T1>, Action<T0, T1>)
  fullName: Engine.Core.Events.Event<T0, T1>.operator -(Engine.Core.Events.Event<T0, T1>, System.Action<T0, T1>)
  type: Operator
  source:
    remote:
      path: Engine.Core/Events/EventT2.cs
      branch: main
      repo: https://github.com/Blackture/engine.git
    id: op_Subtraction
    path: C:/Users/Admin/Desktop/Engine/Engine.Core/Events/EventT2.cs
    startLine: 40
  assemblies:
  - Engine
  namespace: Engine.Core.Events
  syntax:
    content: public static Event<T0, T1> operator -(Event<T0, T1> e, Action<T0, T1> method)
    parameters:
    - id: e
      type: Engine.Core.Events.Event`2
    - id: method
      type: System.Action{{T0},{T1}}
    return:
      type: Engine.Core.Events.Event`2
    content.vb: Public Shared Operator -(e As [Event](Of T0, T1), method As Action(Of T0, T1)) As [Event](Of T0, T1)
  overload: Engine.Core.Events.Event`2.op_Subtraction*
  nameWithType.vb: Event(Of T0, T1).-(Event(Of T0, T1), Action(Of T0, T1))
  fullName.vb: Engine.Core.Events.Event(Of T0, T1).-(Engine.Core.Events.Event(Of T0, T1), System.Action(Of T0, T1))
  name.vb: -(Event(Of T0, T1), Action(Of T0, T1))
references:
- uid: Engine.Core.Events
  commentId: N:Engine.Core.Events
  href: Engine.html
  name: Engine.Core.Events
  nameWithType: Engine.Core.Events
  fullName: Engine.Core.Events
  spec.csharp:
  - uid: Engine
    name: Engine
    href: Engine.html
  - name: .
  - uid: Engine.Core
    name: Core
    href: Engine.Core.html
  - name: .
  - uid: Engine.Core.Events
    name: Events
    href: Engine.Core.Events.html
  spec.vb:
  - uid: Engine
    name: Engine
    href: Engine.html
  - name: .
  - uid: Engine.Core
    name: Core
    href: Engine.Core.html
  - name: .
  - uid: Engine.Core.Events
    name: Events
    href: Engine.Core.Events.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Core.Events.Event`2.AddListener*
  commentId: Overload:Engine.Core.Events.Event`2.AddListener
  href: Engine.Core.Events.Event-2.html#Engine_Core_Events_Event_2_AddListener_System_Action__0__1__
  name: AddListener
  nameWithType: Event<T0, T1>.AddListener
  fullName: Engine.Core.Events.Event<T0, T1>.AddListener
  nameWithType.vb: Event(Of T0, T1).AddListener
  fullName.vb: Engine.Core.Events.Event(Of T0, T1).AddListener
- uid: System.Action{{T0},{T1}}
  commentId: T:System.Action{`0,`1}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T0, T1>
  nameWithType: Action<T0, T1>
  fullName: System.Action<T0, T1>
  nameWithType.vb: Action(Of T0, T1)
  fullName.vb: System.Action(Of T0, T1)
  name.vb: Action(Of T0, T1)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Engine.Core.Events.Event`2.RemoveListener*
  commentId: Overload:Engine.Core.Events.Event`2.RemoveListener
  href: Engine.Core.Events.Event-2.html#Engine_Core_Events_Event_2_RemoveListener_System_Action__0__1__
  name: RemoveListener
  nameWithType: Event<T0, T1>.RemoveListener
  fullName: Engine.Core.Events.Event<T0, T1>.RemoveListener
  nameWithType.vb: Event(Of T0, T1).RemoveListener
  fullName.vb: Engine.Core.Events.Event(Of T0, T1).RemoveListener
- uid: Engine.Core.Events.Event`2.RemoveAllListeners*
  commentId: Overload:Engine.Core.Events.Event`2.RemoveAllListeners
  href: Engine.Core.Events.Event-2.html#Engine_Core_Events_Event_2_RemoveAllListeners
  name: RemoveAllListeners
  nameWithType: Event<T0, T1>.RemoveAllListeners
  fullName: Engine.Core.Events.Event<T0, T1>.RemoveAllListeners
  nameWithType.vb: Event(Of T0, T1).RemoveAllListeners
  fullName.vb: Engine.Core.Events.Event(Of T0, T1).RemoveAllListeners
- uid: Engine.Core.Events.Event`2.Invoke*
  commentId: Overload:Engine.Core.Events.Event`2.Invoke
  href: Engine.Core.Events.Event-2.html#Engine_Core_Events_Event_2_Invoke__0__1_
  name: Invoke
  nameWithType: Event<T0, T1>.Invoke
  fullName: Engine.Core.Events.Event<T0, T1>.Invoke
  nameWithType.vb: Event(Of T0, T1).Invoke
  fullName.vb: Engine.Core.Events.Event(Of T0, T1).Invoke
- uid: '{T0}'
  commentId: '!:T0'
  definition: T0
  name: T0
  nameWithType: T0
  fullName: T0
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T0
  commentId: '!:T0'
  name: T0
  nameWithType: T0
  fullName: T0
- uid: T1
  commentId: '!:T1'
  name: T1
  nameWithType: T1
  fullName: T1
- uid: Engine.Core.Events.Event`2.op_Addition*
  commentId: Overload:Engine.Core.Events.Event`2.op_Addition
  href: Engine.Core.Events.Event-2.html#Engine_Core_Events_Event_2_op_Addition_Engine_Core_Events_Event__0__1__System_Action__0__1__
  name: operator +
  nameWithType: Event<T0, T1>.operator +
  fullName: Engine.Core.Events.Event<T0, T1>.operator +
  nameWithType.vb: Event(Of T0, T1).+
  fullName.vb: Engine.Core.Events.Event(Of T0, T1).+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Engine.Core.Events.Event`2.op_Addition*
    name: +
    href: Engine.Core.Events.Event-2.html#Engine_Core_Events_Event_2_op_Addition_Engine_Core_Events_Event__0__1__System_Action__0__1__
- uid: Engine.Core.Events.Event`2
  commentId: T:Engine.Core.Events.Event`2
  parent: Engine.Core.Events
  href: Engine.Core.Events.Event-2.html
  name: Event<T0, T1>
  nameWithType: Event<T0, T1>
  fullName: Engine.Core.Events.Event<T0, T1>
  nameWithType.vb: Event(Of T0, T1)
  fullName.vb: Engine.Core.Events.Event(Of T0, T1)
  name.vb: Event(Of T0, T1)
  spec.csharp:
  - uid: Engine.Core.Events.Event`2
    name: Event
    href: Engine.Core.Events.Event-2.html
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  spec.vb:
  - uid: Engine.Core.Events.Event`2
    name: Event
    href: Engine.Core.Events.Event-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Engine.Core.Events.Event`2.op_Subtraction*
  commentId: Overload:Engine.Core.Events.Event`2.op_Subtraction
  href: Engine.Core.Events.Event-2.html#Engine_Core_Events_Event_2_op_Subtraction_Engine_Core_Events_Event__0__1__System_Action__0__1__
  name: operator -
  nameWithType: Event<T0, T1>.operator -
  fullName: Engine.Core.Events.Event<T0, T1>.operator -
  nameWithType.vb: Event(Of T0, T1).-
  fullName.vb: Engine.Core.Events.Event(Of T0, T1).-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Engine.Core.Events.Event`2.op_Subtraction*
    name: '-'
    href: Engine.Core.Events.Event-2.html#Engine_Core_Events_Event_2_op_Subtraction_Engine_Core_Events_Event__0__1__System_Action__0__1__
