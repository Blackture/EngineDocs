### YamlMime:ManagedReference
items:
- uid: Engine.Core.Maths.MatrixMxN
  commentId: T:Engine.Core.Maths.MatrixMxN
  id: MatrixMxN
  parent: Engine.Core.Maths
  children:
  - Engine.Core.Maths.MatrixMxN.#ctor
  - Engine.Core.Maths.MatrixMxN.#ctor(System.Collections.Generic.List{Engine.Core.Maths.Vector})
  - Engine.Core.Maths.MatrixMxN.#ctor(System.Int32,System.Int32)
  - Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN)
  - Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  - Engine.Core.Maths.MatrixMxN.AddRow(Engine.Core.Maths.Vector)
  - Engine.Core.Maths.MatrixMxN.ColumnCount
  - Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices(Engine.Core.Maths.MatrixMxN,System.Collections.Generic.List{Engine.Core.Maths.MatrixMxN}@)
  - Engine.Core.Maths.MatrixMxN.GetAdjointMatrix(Engine.Core.Maths.MatrixMxN@)
  - Engine.Core.Maths.MatrixMxN.GetCofactorMatrix(Engine.Core.Maths.MatrixMxN@)
  - Engine.Core.Maths.MatrixMxN.GetColumn(System.Int32)
  - Engine.Core.Maths.MatrixMxN.GetDeterminant(System.Single@)
  - Engine.Core.Maths.MatrixMxN.GetIdentityMatrix(System.Int32)
  - Engine.Core.Maths.MatrixMxN.GetInverse(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN@)
  - Engine.Core.Maths.MatrixMxN.GetMinorMatrix(Engine.Core.Maths.MatrixMxN@)
  - Engine.Core.Maths.MatrixMxN.GetRow(System.Int32)
  - Engine.Core.Maths.MatrixMxN.GetSubMatrix(System.Int32,System.Int32,Engine.Core.Maths.MatrixMxN@)
  - Engine.Core.Maths.MatrixMxN.GetValue(System.Int32,System.Int32)
  - Engine.Core.Maths.MatrixMxN.InsertRow(Engine.Core.Maths.Vector,System.Int32)
  - Engine.Core.Maths.MatrixMxN.Item(System.Int32,System.Int32)
  - Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN)
  - Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  - Engine.Core.Maths.MatrixMxN.op_Addition(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  - Engine.Core.Maths.MatrixMxN.op_Division(Engine.Core.Maths.MatrixMxN,System.Single)
  - Engine.Core.Maths.MatrixMxN.op_Implicit(Engine.Core.Maths.MatrixMxN)~Engine.Core.Maths.Matrix3x3
  - Engine.Core.Maths.MatrixMxN.op_Multiply(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  - Engine.Core.Maths.MatrixMxN.op_Multiply(Engine.Core.Maths.MatrixMxN,System.Single)
  - Engine.Core.Maths.MatrixMxN.op_Multiply(System.Single,Engine.Core.Maths.MatrixMxN)
  - Engine.Core.Maths.MatrixMxN.op_Subtraction(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  - Engine.Core.Maths.MatrixMxN.op_UnaryNegation(Engine.Core.Maths.MatrixMxN)
  - Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
  - Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixOperation,System.Single)
  - Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixOperation,System.Single)
  - Engine.Core.Maths.MatrixMxN.RemoveColumn(System.Int32)
  - Engine.Core.Maths.MatrixMxN.RemoveRow(System.Int32)
  - Engine.Core.Maths.MatrixMxN.RowAddition(System.Int32,System.Int32)
  - Engine.Core.Maths.MatrixMxN.RowCount
  - Engine.Core.Maths.MatrixMxN.RowOperation(Engine.Core.Maths.MatrixMxN,System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  - Engine.Core.Maths.MatrixMxN.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  - Engine.Core.Maths.MatrixMxN.RowSubstraction(System.Int32,System.Int32)
  - Engine.Core.Maths.MatrixMxN.ScalarDivision(Engine.Core.Maths.MatrixMxN,System.Single)
  - Engine.Core.Maths.MatrixMxN.ScalarDivision(System.Single)
  - Engine.Core.Maths.MatrixMxN.ScalarMultiplication(Engine.Core.Maths.MatrixMxN,System.Single)
  - Engine.Core.Maths.MatrixMxN.ScalarMultiplication(System.Single)
  - Engine.Core.Maths.MatrixMxN.SetValue(System.Int32,System.Int32,System.Single)
  - Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN)
  - Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  - Engine.Core.Maths.MatrixMxN.SwapRows(System.Int32,System.Int32)
  - Engine.Core.Maths.MatrixMxN.ToVector(Engine.Core.Maths.Vector@)
  - Engine.Core.Maths.MatrixMxN.ToVector3(Engine.Core.Maths.Vector3@)
  - Engine.Core.Maths.MatrixMxN.Transpose
  langs:
  - csharp
  - vb
  name: MatrixMxN
  nameWithType: MatrixMxN
  fullName: Engine.Core.Maths.MatrixMxN
  type: Class
  source:
    id: MatrixMxN
    path: ''
    startLine: 3272
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: 'public class MatrixMxN : Matrix, IMatrix'
    content.vb: >-
      Public Class MatrixMxN
          Inherits Matrix
          Implements IMatrix
  inheritance:
  - System.Object
  - Engine.Core.Maths.Matrix
  implements:
  - Engine.Core.Maths.IMatrix
  inheritedMembers:
  - Engine.Core.Maths.Matrix.I2x2
  - Engine.Core.Maths.Matrix.I3x3
  - Engine.Core.Maths.Matrix.I4x4
  - Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,{T}@)
  - Engine.Core.Maths.Matrix.GetInverse``1({T},{T}@)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.Maths.MatrixMxN.RowCount
  commentId: P:Engine.Core.Maths.MatrixMxN.RowCount
  id: RowCount
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: RowCount
  nameWithType: MatrixMxN.RowCount
  fullName: Engine.Core.Maths.MatrixMxN.RowCount
  type: Property
  source:
    id: RowCount
    path: ''
    startLine: 3280
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public override int RowCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property RowCount As Integer
  overridden: Engine.Core.Maths.Matrix.RowCount
  overload: Engine.Core.Maths.MatrixMxN.RowCount*
  implements:
  - Engine.Core.Maths.IMatrix.RowCount
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Engine.Core.Maths.MatrixMxN.ColumnCount
  commentId: P:Engine.Core.Maths.MatrixMxN.ColumnCount
  id: ColumnCount
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: ColumnCount
  nameWithType: MatrixMxN.ColumnCount
  fullName: Engine.Core.Maths.MatrixMxN.ColumnCount
  type: Property
  source:
    id: ColumnCount
    path: ''
    startLine: 3281
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public override int ColumnCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property ColumnCount As Integer
  overridden: Engine.Core.Maths.Matrix.ColumnCount
  overload: Engine.Core.Maths.MatrixMxN.ColumnCount*
  implements:
  - Engine.Core.Maths.IMatrix.ColumnCount
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Engine.Core.Maths.MatrixMxN.Item(System.Int32,System.Int32)
  commentId: P:Engine.Core.Maths.MatrixMxN.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Item[Int32, Int32]
  nameWithType: MatrixMxN.Item[Int32, Int32]
  fullName: Engine.Core.Maths.MatrixMxN.Item[System.Int32, System.Int32]
  type: Property
  source:
    id: this[]
    path: ''
    startLine: 3282
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public override float this[int r, int c] { get; set; }
    parameters:
    - id: r
      type: System.Int32
    - id: c
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Overrides Property Item(r As Integer, c As Integer) As Single
  overridden: Engine.Core.Maths.Matrix.Item(System.Int32,System.Int32)
  overload: Engine.Core.Maths.MatrixMxN.Item*
  implements:
  - Engine.Core.Maths.IMatrix.Item(System.Int32,System.Int32)
  nameWithType.vb: MatrixMxN.Item(Int32, Int32)
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Engine.Core.Maths.MatrixMxN.Item(System.Int32, System.Int32)
  name.vb: Item(Int32, Int32)
- uid: Engine.Core.Maths.MatrixMxN.#ctor
  commentId: M:Engine.Core.Maths.MatrixMxN.#ctor
  id: '#ctor'
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: MatrixMxN()
  nameWithType: MatrixMxN.MatrixMxN()
  fullName: Engine.Core.Maths.MatrixMxN.MatrixMxN()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3288
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public MatrixMxN()
    content.vb: Public Sub New
  overload: Engine.Core.Maths.MatrixMxN.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.#ctor(System.Collections.Generic.List{Engine.Core.Maths.Vector})
  commentId: M:Engine.Core.Maths.MatrixMxN.#ctor(System.Collections.Generic.List{Engine.Core.Maths.Vector})
  id: '#ctor(System.Collections.Generic.List{Engine.Core.Maths.Vector})'
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: MatrixMxN(List<Vector>)
  nameWithType: MatrixMxN.MatrixMxN(List<Vector>)
  fullName: Engine.Core.Maths.MatrixMxN.MatrixMxN(System.Collections.Generic.List<Engine.Core.Maths.Vector>)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3289
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public MatrixMxN(List<Vector> rows)
    parameters:
    - id: rows
      type: System.Collections.Generic.List{Engine.Core.Maths.Vector}
    content.vb: Public Sub New(rows As List(Of Vector))
  overload: Engine.Core.Maths.MatrixMxN.#ctor*
  nameWithType.vb: MatrixMxN.MatrixMxN(List(Of Vector))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Maths.MatrixMxN.MatrixMxN(System.Collections.Generic.List(Of Engine.Core.Maths.Vector))
  name.vb: MatrixMxN(List(Of Vector))
- uid: Engine.Core.Maths.MatrixMxN.#ctor(System.Int32,System.Int32)
  commentId: M:Engine.Core.Maths.MatrixMxN.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: MatrixMxN(Int32, Int32)
  nameWithType: MatrixMxN.MatrixMxN(Int32, Int32)
  fullName: Engine.Core.Maths.MatrixMxN.MatrixMxN(System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3293
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public MatrixMxN(int r, int c)
    parameters:
    - id: r
      type: System.Int32
    - id: c
      type: System.Int32
    content.vb: Public Sub New(r As Integer, c As Integer)
  overload: Engine.Core.Maths.MatrixMxN.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.GetValue(System.Int32,System.Int32)
  commentId: M:Engine.Core.Maths.MatrixMxN.GetValue(System.Int32,System.Int32)
  id: GetValue(System.Int32,System.Int32)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: GetValue(Int32, Int32)
  nameWithType: MatrixMxN.GetValue(Int32, Int32)
  fullName: Engine.Core.Maths.MatrixMxN.GetValue(System.Int32, System.Int32)
  type: Method
  source:
    id: GetValue
    path: ''
    startLine: 3387
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public float GetValue(int r, int c)
    parameters:
    - id: r
      type: System.Int32
    - id: c
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Function GetValue(r As Integer, c As Integer) As Single
  overload: Engine.Core.Maths.MatrixMxN.GetValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.SetValue(System.Int32,System.Int32,System.Single)
  commentId: M:Engine.Core.Maths.MatrixMxN.SetValue(System.Int32,System.Int32,System.Single)
  id: SetValue(System.Int32,System.Int32,System.Single)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: SetValue(Int32, Int32, Single)
  nameWithType: MatrixMxN.SetValue(Int32, Int32, Single)
  fullName: Engine.Core.Maths.MatrixMxN.SetValue(System.Int32, System.Int32, System.Single)
  type: Method
  source:
    id: SetValue
    path: ''
    startLine: 3395
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public void SetValue(int r, int c, float value)
    parameters:
    - id: r
      type: System.Int32
    - id: c
      type: System.Int32
    - id: value
      type: System.Single
    content.vb: Public Sub SetValue(r As Integer, c As Integer, value As Single)
  overload: Engine.Core.Maths.MatrixMxN.SetValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.GetRow(System.Int32)
  commentId: M:Engine.Core.Maths.MatrixMxN.GetRow(System.Int32)
  id: GetRow(System.Int32)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: GetRow(Int32)
  nameWithType: MatrixMxN.GetRow(Int32)
  fullName: Engine.Core.Maths.MatrixMxN.GetRow(System.Int32)
  type: Method
  source:
    id: GetRow
    path: ''
    startLine: 3403
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Vector GetRow(int r)
    parameters:
    - id: r
      type: System.Int32
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Function GetRow(r As Integer) As Vector
  overload: Engine.Core.Maths.MatrixMxN.GetRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.GetColumn(System.Int32)
  commentId: M:Engine.Core.Maths.MatrixMxN.GetColumn(System.Int32)
  id: GetColumn(System.Int32)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: GetColumn(Int32)
  nameWithType: MatrixMxN.GetColumn(Int32)
  fullName: Engine.Core.Maths.MatrixMxN.GetColumn(System.Int32)
  type: Method
  source:
    id: GetColumn
    path: ''
    startLine: 3416
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Vector GetColumn(int c)
    parameters:
    - id: c
      type: System.Int32
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Function GetColumn(c As Integer) As Vector
  overload: Engine.Core.Maths.MatrixMxN.GetColumn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.AddRow(Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.MatrixMxN.AddRow(Engine.Core.Maths.Vector)
  id: AddRow(Engine.Core.Maths.Vector)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: AddRow(Vector)
  nameWithType: MatrixMxN.AddRow(Vector)
  fullName: Engine.Core.Maths.MatrixMxN.AddRow(Engine.Core.Maths.Vector)
  type: Method
  source:
    id: AddRow
    path: ''
    startLine: 3429
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public void AddRow(Vector row)
    parameters:
    - id: row
      type: Engine.Core.Maths.Vector
    content.vb: Public Sub AddRow(row As Vector)
  overload: Engine.Core.Maths.MatrixMxN.AddRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.InsertRow(Engine.Core.Maths.Vector,System.Int32)
  commentId: M:Engine.Core.Maths.MatrixMxN.InsertRow(Engine.Core.Maths.Vector,System.Int32)
  id: InsertRow(Engine.Core.Maths.Vector,System.Int32)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: InsertRow(Vector, Int32)
  nameWithType: MatrixMxN.InsertRow(Vector, Int32)
  fullName: Engine.Core.Maths.MatrixMxN.InsertRow(Engine.Core.Maths.Vector, System.Int32)
  type: Method
  source:
    id: InsertRow
    path: ''
    startLine: 3438
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public void InsertRow(Vector row, int index)
    parameters:
    - id: row
      type: Engine.Core.Maths.Vector
    - id: index
      type: System.Int32
    content.vb: Public Sub InsertRow(row As Vector, index As Integer)
  overload: Engine.Core.Maths.MatrixMxN.InsertRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.RemoveRow(System.Int32)
  commentId: M:Engine.Core.Maths.MatrixMxN.RemoveRow(System.Int32)
  id: RemoveRow(System.Int32)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: RemoveRow(Int32)
  nameWithType: MatrixMxN.RemoveRow(Int32)
  fullName: Engine.Core.Maths.MatrixMxN.RemoveRow(System.Int32)
  type: Method
  source:
    id: RemoveRow
    path: ''
    startLine: 3447
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public void RemoveRow(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Sub RemoveRow(index As Integer)
  overload: Engine.Core.Maths.MatrixMxN.RemoveRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.RemoveColumn(System.Int32)
  commentId: M:Engine.Core.Maths.MatrixMxN.RemoveColumn(System.Int32)
  id: RemoveColumn(System.Int32)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: RemoveColumn(Int32)
  nameWithType: MatrixMxN.RemoveColumn(Int32)
  fullName: Engine.Core.Maths.MatrixMxN.RemoveColumn(System.Int32)
  type: Method
  source:
    id: RemoveColumn
    path: ''
    startLine: 3452
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public void RemoveColumn(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Sub RemoveColumn(index As Integer)
  overload: Engine.Core.Maths.MatrixMxN.RemoveColumn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.SwapRows(System.Int32,System.Int32)
  commentId: M:Engine.Core.Maths.MatrixMxN.SwapRows(System.Int32,System.Int32)
  id: SwapRows(System.Int32,System.Int32)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: SwapRows(Int32, Int32)
  nameWithType: MatrixMxN.SwapRows(Int32, Int32)
  fullName: Engine.Core.Maths.MatrixMxN.SwapRows(System.Int32, System.Int32)
  type: Method
  source:
    id: SwapRows
    path: ''
    startLine: 3469
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public override void SwapRows(int from, int to)
    parameters:
    - id: from
      type: System.Int32
    - id: to
      type: System.Int32
    content.vb: Public Overrides Sub SwapRows(from As Integer, to As Integer)
  overridden: Engine.Core.Maths.Matrix.SwapRows(System.Int32,System.Int32)
  overload: Engine.Core.Maths.MatrixMxN.SwapRows*
  implements:
  - Engine.Core.Maths.IMatrix.SwapRows(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Engine.Core.Maths.MatrixMxN.ScalarMultiplication(System.Single)
  commentId: M:Engine.Core.Maths.MatrixMxN.ScalarMultiplication(System.Single)
  id: ScalarMultiplication(System.Single)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: ScalarMultiplication(Single)
  nameWithType: MatrixMxN.ScalarMultiplication(Single)
  fullName: Engine.Core.Maths.MatrixMxN.ScalarMultiplication(System.Single)
  type: Method
  source:
    id: ScalarMultiplication
    path: ''
    startLine: 3476
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public MatrixMxN ScalarMultiplication(float f)
    parameters:
    - id: f
      type: System.Single
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Function ScalarMultiplication(f As Single) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.ScalarMultiplication*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.ScalarDivision(System.Single)
  commentId: M:Engine.Core.Maths.MatrixMxN.ScalarDivision(System.Single)
  id: ScalarDivision(System.Single)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: ScalarDivision(Single)
  nameWithType: MatrixMxN.ScalarDivision(Single)
  fullName: Engine.Core.Maths.MatrixMxN.ScalarDivision(System.Single)
  type: Method
  source:
    id: ScalarDivision
    path: ''
    startLine: 3490
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public MatrixMxN ScalarDivision(float f)
    parameters:
    - id: f
      type: System.Single
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Function ScalarDivision(f As Single) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.ScalarDivision*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN)
  commentId: M:Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN)
  id: Multiplication(Engine.Core.Maths.MatrixMxN)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Multiplication(MatrixMxN)
  nameWithType: MatrixMxN.Multiplication(MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN)
  type: Method
  source:
    id: Multiplication
    path: ''
    startLine: 3495
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public MatrixMxN Multiplication(MatrixMxN m)
    parameters:
    - id: m
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Function Multiplication(m As MatrixMxN) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.Multiplication*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN)
  commentId: M:Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN)
  id: Addition(Engine.Core.Maths.MatrixMxN)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Addition(MatrixMxN)
  nameWithType: MatrixMxN.Addition(MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN)
  type: Method
  source:
    id: Addition
    path: ''
    startLine: 3515
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public MatrixMxN Addition(MatrixMxN m)
    parameters:
    - id: m
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Function Addition(m As MatrixMxN) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.Addition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN)
  commentId: M:Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN)
  id: Substraction(Engine.Core.Maths.MatrixMxN)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Substraction(MatrixMxN)
  nameWithType: MatrixMxN.Substraction(MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN)
  type: Method
  source:
    id: Substraction
    path: ''
    startLine: 3533
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public MatrixMxN Substraction(MatrixMxN m)
    parameters:
    - id: m
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Function Substraction(m As MatrixMxN) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.Substraction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.RowAddition(System.Int32,System.Int32)
  commentId: M:Engine.Core.Maths.MatrixMxN.RowAddition(System.Int32,System.Int32)
  id: RowAddition(System.Int32,System.Int32)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: RowAddition(Int32, Int32)
  nameWithType: MatrixMxN.RowAddition(Int32, Int32)
  fullName: Engine.Core.Maths.MatrixMxN.RowAddition(System.Int32, System.Int32)
  type: Method
  source:
    id: RowAddition
    path: ''
    startLine: 3559
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  summary: "\nCalculates l+r. Doesn&apos;s change any row in the matrix\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">l</code> left side of the equation\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">r</code> right side of the equation\n"
  example: []
  syntax:
    content: public Vector RowAddition(int l, int r)
    parameters:
    - id: l
      type: System.Int32
      description: ''
    - id: r
      type: System.Int32
      description: ''
    return:
      type: Engine.Core.Maths.Vector
      description: Returns a row vector of the row l+r
    content.vb: Public Function RowAddition(l As Integer, r As Integer) As Vector
  overload: Engine.Core.Maths.MatrixMxN.RowAddition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.RowSubstraction(System.Int32,System.Int32)
  commentId: M:Engine.Core.Maths.MatrixMxN.RowSubstraction(System.Int32,System.Int32)
  id: RowSubstraction(System.Int32,System.Int32)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: RowSubstraction(Int32, Int32)
  nameWithType: MatrixMxN.RowSubstraction(Int32, Int32)
  fullName: Engine.Core.Maths.MatrixMxN.RowSubstraction(System.Int32, System.Int32)
  type: Method
  source:
    id: RowSubstraction
    path: ''
    startLine: 3565
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Vector RowSubstraction(int l, int r)
    parameters:
    - id: l
      type: System.Int32
    - id: r
      type: System.Int32
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Function RowSubstraction(l As Integer, r As Integer) As Vector
  overload: Engine.Core.Maths.MatrixMxN.RowSubstraction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  commentId: M:Engine.Core.Maths.MatrixMxN.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  id: RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: RowOperation(Int32, Int32, MatrixOperation, Single)
  nameWithType: MatrixMxN.RowOperation(Int32, Int32, MatrixOperation, Single)
  fullName: Engine.Core.Maths.MatrixMxN.RowOperation(System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
  type: Method
  source:
    id: RowOperation
    path: ''
    startLine: 3571
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public override void RowOperation(int target, int source, MatrixOperation operation, float f = 0F)
    parameters:
    - id: target
      type: System.Int32
    - id: source
      type: System.Int32
    - id: operation
      type: Engine.Core.Maths.MatrixOperation
    - id: f
      type: System.Single
    content.vb: Public Overrides Sub RowOperation(target As Integer, source As Integer, operation As MatrixOperation, f As Single = 0F)
  overridden: Engine.Core.Maths.Matrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  overload: Engine.Core.Maths.MatrixMxN.RowOperation*
  implements:
  - Engine.Core.Maths.IMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixOperation,System.Single)
  commentId: M:Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixOperation,System.Single)
  id: Operation(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixOperation,System.Single)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Operation(MatrixMxN, MatrixOperation, Single)
  nameWithType: MatrixMxN.Operation(MatrixMxN, MatrixOperation, Single)
  fullName: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixOperation, System.Single)
  type: Method
  source:
    id: Operation
    path: ''
    startLine: 3599
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  summary: "\nOperates on the matrix (changes the target row) and outputs the row after the calculation as a vector.\n"
  example: []
  syntax:
    content: public MatrixMxN Operation(MatrixMxN m, MatrixOperation operation, float f = 0F)
    parameters:
    - id: m
      type: Engine.Core.Maths.MatrixMxN
    - id: operation
      type: Engine.Core.Maths.MatrixOperation
      description: ''
    - id: f
      type: System.Single
      description: ''
    return:
      type: Engine.Core.Maths.MatrixMxN
      description: ''
    content.vb: Public Function Operation(m As MatrixMxN, operation As MatrixOperation, f As Single = 0F) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.Operation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
  commentId: M:Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
  id: Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Operation(IMatrix, MatrixOperation, Single)
  nameWithType: MatrixMxN.Operation(IMatrix, MatrixOperation, Single)
  fullName: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.IMatrix, Engine.Core.Maths.MatrixOperation, System.Single)
  type: Method
  source:
    id: Operation
    path: ''
    startLine: 3622
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public override IMatrix Operation(IMatrix m, MatrixOperation operation, float f = 0F)
    parameters:
    - id: m
      type: Engine.Core.Maths.IMatrix
    - id: operation
      type: Engine.Core.Maths.MatrixOperation
    - id: f
      type: System.Single
    return:
      type: Engine.Core.Maths.IMatrix
    content.vb: Public Overrides Function Operation(m As IMatrix, operation As MatrixOperation, f As Single = 0F) As IMatrix
  overridden: Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
  overload: Engine.Core.Maths.MatrixMxN.Operation*
  implements:
  - Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Engine.Core.Maths.MatrixMxN.Transpose
  commentId: M:Engine.Core.Maths.MatrixMxN.Transpose
  id: Transpose
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Transpose()
  nameWithType: MatrixMxN.Transpose()
  fullName: Engine.Core.Maths.MatrixMxN.Transpose()
  type: Method
  source:
    id: Transpose
    path: ''
    startLine: 3626
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public void Transpose()
    content.vb: Public Sub Transpose
  overload: Engine.Core.Maths.MatrixMxN.Transpose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.MatrixMxN.GetSubMatrix(System.Int32,System.Int32,Engine.Core.Maths.MatrixMxN@)
  commentId: M:Engine.Core.Maths.MatrixMxN.GetSubMatrix(System.Int32,System.Int32,Engine.Core.Maths.MatrixMxN@)
  id: GetSubMatrix(System.Int32,System.Int32,Engine.Core.Maths.MatrixMxN@)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: GetSubMatrix(Int32, Int32, out MatrixMxN)
  nameWithType: MatrixMxN.GetSubMatrix(Int32, Int32, out MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.GetSubMatrix(System.Int32, System.Int32, out Engine.Core.Maths.MatrixMxN)
  type: Method
  source:
    id: GetSubMatrix
    path: ''
    startLine: 3646
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public bool GetSubMatrix(int r, int c, out MatrixMxN subMatrix)
    parameters:
    - id: r
      type: System.Int32
    - id: c
      type: System.Int32
    - id: subMatrix
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: System.Boolean
    content.vb: Public Function GetSubMatrix(r As Integer, c As Integer, ByRef subMatrix As MatrixMxN) As Boolean
  overload: Engine.Core.Maths.MatrixMxN.GetSubMatrix*
  nameWithType.vb: MatrixMxN.GetSubMatrix(Int32, Int32, ByRef MatrixMxN)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Maths.MatrixMxN.GetSubMatrix(System.Int32, System.Int32, ByRef Engine.Core.Maths.MatrixMxN)
  name.vb: GetSubMatrix(Int32, Int32, ByRef MatrixMxN)
- uid: Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices(Engine.Core.Maths.MatrixMxN,System.Collections.Generic.List{Engine.Core.Maths.MatrixMxN}@)
  commentId: M:Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices(Engine.Core.Maths.MatrixMxN,System.Collections.Generic.List{Engine.Core.Maths.MatrixMxN}@)
  id: Get2x2SubMatrices(Engine.Core.Maths.MatrixMxN,System.Collections.Generic.List{Engine.Core.Maths.MatrixMxN}@)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Get2x2SubMatrices(MatrixMxN, out List<MatrixMxN>)
  nameWithType: MatrixMxN.Get2x2SubMatrices(MatrixMxN, out List<MatrixMxN>)
  fullName: Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices(Engine.Core.Maths.MatrixMxN, out System.Collections.Generic.List<Engine.Core.Maths.MatrixMxN>)
  type: Method
  source:
    id: Get2x2SubMatrices
    path: ''
    startLine: 3666
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public bool Get2x2SubMatrices(MatrixMxN m, out List<MatrixMxN> subs)
    parameters:
    - id: m
      type: Engine.Core.Maths.MatrixMxN
    - id: subs
      type: System.Collections.Generic.List{Engine.Core.Maths.MatrixMxN}
    return:
      type: System.Boolean
    content.vb: Public Function Get2x2SubMatrices(m As MatrixMxN, ByRef subs As List(Of MatrixMxN)) As Boolean
  overload: Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices*
  nameWithType.vb: MatrixMxN.Get2x2SubMatrices(MatrixMxN, ByRef List(Of MatrixMxN))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices(Engine.Core.Maths.MatrixMxN, ByRef System.Collections.Generic.List(Of Engine.Core.Maths.MatrixMxN))
  name.vb: Get2x2SubMatrices(MatrixMxN, ByRef List(Of MatrixMxN))
- uid: Engine.Core.Maths.MatrixMxN.GetMinorMatrix(Engine.Core.Maths.MatrixMxN@)
  commentId: M:Engine.Core.Maths.MatrixMxN.GetMinorMatrix(Engine.Core.Maths.MatrixMxN@)
  id: GetMinorMatrix(Engine.Core.Maths.MatrixMxN@)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: GetMinorMatrix(out MatrixMxN)
  nameWithType: MatrixMxN.GetMinorMatrix(out MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.GetMinorMatrix(out Engine.Core.Maths.MatrixMxN)
  type: Method
  source:
    id: GetMinorMatrix
    path: ''
    startLine: 3698
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public bool GetMinorMatrix(out MatrixMxN minor)
    parameters:
    - id: minor
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: System.Boolean
    content.vb: Public Function GetMinorMatrix(ByRef minor As MatrixMxN) As Boolean
  overload: Engine.Core.Maths.MatrixMxN.GetMinorMatrix*
  nameWithType.vb: MatrixMxN.GetMinorMatrix(ByRef MatrixMxN)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Maths.MatrixMxN.GetMinorMatrix(ByRef Engine.Core.Maths.MatrixMxN)
  name.vb: GetMinorMatrix(ByRef MatrixMxN)
- uid: Engine.Core.Maths.MatrixMxN.GetCofactorMatrix(Engine.Core.Maths.MatrixMxN@)
  commentId: M:Engine.Core.Maths.MatrixMxN.GetCofactorMatrix(Engine.Core.Maths.MatrixMxN@)
  id: GetCofactorMatrix(Engine.Core.Maths.MatrixMxN@)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: GetCofactorMatrix(out MatrixMxN)
  nameWithType: MatrixMxN.GetCofactorMatrix(out MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.GetCofactorMatrix(out Engine.Core.Maths.MatrixMxN)
  type: Method
  source:
    id: GetCofactorMatrix
    path: ''
    startLine: 3739
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public bool GetCofactorMatrix(out MatrixMxN fac)
    parameters:
    - id: fac
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: System.Boolean
    content.vb: Public Function GetCofactorMatrix(ByRef fac As MatrixMxN) As Boolean
  overload: Engine.Core.Maths.MatrixMxN.GetCofactorMatrix*
  nameWithType.vb: MatrixMxN.GetCofactorMatrix(ByRef MatrixMxN)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Maths.MatrixMxN.GetCofactorMatrix(ByRef Engine.Core.Maths.MatrixMxN)
  name.vb: GetCofactorMatrix(ByRef MatrixMxN)
- uid: Engine.Core.Maths.MatrixMxN.GetDeterminant(System.Single@)
  commentId: M:Engine.Core.Maths.MatrixMxN.GetDeterminant(System.Single@)
  id: GetDeterminant(System.Single@)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: GetDeterminant(out Single)
  nameWithType: MatrixMxN.GetDeterminant(out Single)
  fullName: Engine.Core.Maths.MatrixMxN.GetDeterminant(out System.Single)
  type: Method
  source:
    id: GetDeterminant
    path: ''
    startLine: 3757
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public bool GetDeterminant(out float determinant)
    parameters:
    - id: determinant
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function GetDeterminant(ByRef determinant As Single) As Boolean
  overload: Engine.Core.Maths.MatrixMxN.GetDeterminant*
  nameWithType.vb: MatrixMxN.GetDeterminant(ByRef Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Maths.MatrixMxN.GetDeterminant(ByRef System.Single)
  name.vb: GetDeterminant(ByRef Single)
- uid: Engine.Core.Maths.MatrixMxN.GetAdjointMatrix(Engine.Core.Maths.MatrixMxN@)
  commentId: M:Engine.Core.Maths.MatrixMxN.GetAdjointMatrix(Engine.Core.Maths.MatrixMxN@)
  id: GetAdjointMatrix(Engine.Core.Maths.MatrixMxN@)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: GetAdjointMatrix(out MatrixMxN)
  nameWithType: MatrixMxN.GetAdjointMatrix(out MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.GetAdjointMatrix(out Engine.Core.Maths.MatrixMxN)
  type: Method
  source:
    id: GetAdjointMatrix
    path: ''
    startLine: 3800
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public bool GetAdjointMatrix(out MatrixMxN adj)
    parameters:
    - id: adj
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: System.Boolean
    content.vb: Public Function GetAdjointMatrix(ByRef adj As MatrixMxN) As Boolean
  overload: Engine.Core.Maths.MatrixMxN.GetAdjointMatrix*
  nameWithType.vb: MatrixMxN.GetAdjointMatrix(ByRef MatrixMxN)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Maths.MatrixMxN.GetAdjointMatrix(ByRef Engine.Core.Maths.MatrixMxN)
  name.vb: GetAdjointMatrix(ByRef MatrixMxN)
- uid: Engine.Core.Maths.MatrixMxN.ToVector3(Engine.Core.Maths.Vector3@)
  commentId: M:Engine.Core.Maths.MatrixMxN.ToVector3(Engine.Core.Maths.Vector3@)
  id: ToVector3(Engine.Core.Maths.Vector3@)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: ToVector3(out Vector3)
  nameWithType: MatrixMxN.ToVector3(out Vector3)
  fullName: Engine.Core.Maths.MatrixMxN.ToVector3(out Engine.Core.Maths.Vector3)
  type: Method
  source:
    id: ToVector3
    path: ''
    startLine: 3812
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public bool ToVector3(out Vector3 v)
    parameters:
    - id: v
      type: Engine.Core.Maths.Vector3
    return:
      type: System.Boolean
    content.vb: Public Function ToVector3(ByRef v As Vector3) As Boolean
  overload: Engine.Core.Maths.MatrixMxN.ToVector3*
  nameWithType.vb: MatrixMxN.ToVector3(ByRef Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Maths.MatrixMxN.ToVector3(ByRef Engine.Core.Maths.Vector3)
  name.vb: ToVector3(ByRef Vector3)
- uid: Engine.Core.Maths.MatrixMxN.ToVector(Engine.Core.Maths.Vector@)
  commentId: M:Engine.Core.Maths.MatrixMxN.ToVector(Engine.Core.Maths.Vector@)
  id: ToVector(Engine.Core.Maths.Vector@)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: ToVector(out Vector)
  nameWithType: MatrixMxN.ToVector(out Vector)
  fullName: Engine.Core.Maths.MatrixMxN.ToVector(out Engine.Core.Maths.Vector)
  type: Method
  source:
    id: ToVector
    path: ''
    startLine: 3823
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public bool ToVector(out Vector v)
    parameters:
    - id: v
      type: Engine.Core.Maths.Vector
    return:
      type: System.Boolean
    content.vb: Public Function ToVector(ByRef v As Vector) As Boolean
  overload: Engine.Core.Maths.MatrixMxN.ToVector*
  nameWithType.vb: MatrixMxN.ToVector(ByRef Vector)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Maths.MatrixMxN.ToVector(ByRef Engine.Core.Maths.Vector)
  name.vb: ToVector(ByRef Vector)
- uid: Engine.Core.Maths.MatrixMxN.ScalarMultiplication(Engine.Core.Maths.MatrixMxN,System.Single)
  commentId: M:Engine.Core.Maths.MatrixMxN.ScalarMultiplication(Engine.Core.Maths.MatrixMxN,System.Single)
  id: ScalarMultiplication(Engine.Core.Maths.MatrixMxN,System.Single)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: ScalarMultiplication(MatrixMxN, Single)
  nameWithType: MatrixMxN.ScalarMultiplication(MatrixMxN, Single)
  fullName: Engine.Core.Maths.MatrixMxN.ScalarMultiplication(Engine.Core.Maths.MatrixMxN, System.Single)
  type: Method
  source:
    id: ScalarMultiplication
    path: ''
    startLine: 3839
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static MatrixMxN ScalarMultiplication(MatrixMxN n, float f)
    parameters:
    - id: n
      type: Engine.Core.Maths.MatrixMxN
    - id: f
      type: System.Single
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Shared Function ScalarMultiplication(n As MatrixMxN, f As Single) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.ScalarMultiplication*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.ScalarDivision(Engine.Core.Maths.MatrixMxN,System.Single)
  commentId: M:Engine.Core.Maths.MatrixMxN.ScalarDivision(Engine.Core.Maths.MatrixMxN,System.Single)
  id: ScalarDivision(Engine.Core.Maths.MatrixMxN,System.Single)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: ScalarDivision(MatrixMxN, Single)
  nameWithType: MatrixMxN.ScalarDivision(MatrixMxN, Single)
  fullName: Engine.Core.Maths.MatrixMxN.ScalarDivision(Engine.Core.Maths.MatrixMxN, System.Single)
  type: Method
  source:
    id: ScalarDivision
    path: ''
    startLine: 3843
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static MatrixMxN ScalarDivision(MatrixMxN n, float f)
    parameters:
    - id: n
      type: Engine.Core.Maths.MatrixMxN
    - id: f
      type: System.Single
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Shared Function ScalarDivision(n As MatrixMxN, f As Single) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.ScalarDivision*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  commentId: M:Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  id: Multiplication(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Multiplication(MatrixMxN, MatrixMxN)
  nameWithType: MatrixMxN.Multiplication(MatrixMxN, MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
  type: Method
  source:
    id: Multiplication
    path: ''
    startLine: 3847
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static MatrixMxN Multiplication(MatrixMxN n, MatrixMxN m)
    parameters:
    - id: n
      type: Engine.Core.Maths.MatrixMxN
    - id: m
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Shared Function Multiplication(n As MatrixMxN, m As MatrixMxN) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.Multiplication*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  commentId: M:Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  id: Addition(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Addition(MatrixMxN, MatrixMxN)
  nameWithType: MatrixMxN.Addition(MatrixMxN, MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
  type: Method
  source:
    id: Addition
    path: ''
    startLine: 3851
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static MatrixMxN Addition(MatrixMxN n, MatrixMxN m)
    parameters:
    - id: n
      type: Engine.Core.Maths.MatrixMxN
    - id: m
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Shared Function Addition(n As MatrixMxN, m As MatrixMxN) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  commentId: M:Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  id: Substraction(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Substraction(MatrixMxN, MatrixMxN)
  nameWithType: MatrixMxN.Substraction(MatrixMxN, MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
  type: Method
  source:
    id: Substraction
    path: ''
    startLine: 3855
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static MatrixMxN Substraction(MatrixMxN n, MatrixMxN m)
    parameters:
    - id: n
      type: Engine.Core.Maths.MatrixMxN
    - id: m
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Shared Function Substraction(n As MatrixMxN, m As MatrixMxN) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.Substraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.RowOperation(Engine.Core.Maths.MatrixMxN,System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  commentId: M:Engine.Core.Maths.MatrixMxN.RowOperation(Engine.Core.Maths.MatrixMxN,System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  id: RowOperation(Engine.Core.Maths.MatrixMxN,System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: RowOperation(MatrixMxN, Int32, Int32, MatrixOperation, Single)
  nameWithType: MatrixMxN.RowOperation(MatrixMxN, Int32, Int32, MatrixOperation, Single)
  fullName: Engine.Core.Maths.MatrixMxN.RowOperation(Engine.Core.Maths.MatrixMxN, System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
  type: Method
  source:
    id: RowOperation
    path: ''
    startLine: 3859
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static void RowOperation(MatrixMxN n, int target, int source, MatrixOperation operation, float f = 0F)
    parameters:
    - id: n
      type: Engine.Core.Maths.MatrixMxN
    - id: target
      type: System.Int32
    - id: source
      type: System.Int32
    - id: operation
      type: Engine.Core.Maths.MatrixOperation
    - id: f
      type: System.Single
    content.vb: Public Shared Sub RowOperation(n As MatrixMxN, target As Integer, source As Integer, operation As MatrixOperation, f As Single = 0F)
  overload: Engine.Core.Maths.MatrixMxN.RowOperation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixOperation,System.Single)
  commentId: M:Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixOperation,System.Single)
  id: Operation(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixOperation,System.Single)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Operation(MatrixMxN, MatrixMxN, MatrixOperation, Single)
  nameWithType: MatrixMxN.Operation(MatrixMxN, MatrixMxN, MatrixOperation, Single)
  fullName: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixOperation, System.Single)
  type: Method
  source:
    id: Operation
    path: ''
    startLine: 3863
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static MatrixMxN Operation(MatrixMxN n, MatrixMxN m, MatrixOperation operation, float f = 0F)
    parameters:
    - id: n
      type: Engine.Core.Maths.MatrixMxN
    - id: m
      type: Engine.Core.Maths.MatrixMxN
    - id: operation
      type: Engine.Core.Maths.MatrixOperation
    - id: f
      type: System.Single
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Shared Function Operation(n As MatrixMxN, m As MatrixMxN, operation As MatrixOperation, f As Single = 0F) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.Operation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.GetIdentityMatrix(System.Int32)
  commentId: M:Engine.Core.Maths.MatrixMxN.GetIdentityMatrix(System.Int32)
  id: GetIdentityMatrix(System.Int32)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: GetIdentityMatrix(Int32)
  nameWithType: MatrixMxN.GetIdentityMatrix(Int32)
  fullName: Engine.Core.Maths.MatrixMxN.GetIdentityMatrix(System.Int32)
  type: Method
  source:
    id: GetIdentityMatrix
    path: ''
    startLine: 3872
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  summary: "\nCreates a nxn identity and returns it.\n"
  example: []
  syntax:
    content: public static MatrixMxN GetIdentityMatrix(int n)
    parameters:
    - id: n
      type: System.Int32
      description: ''
    return:
      type: Engine.Core.Maths.MatrixMxN
      description: ''
    content.vb: Public Shared Function GetIdentityMatrix(n As Integer) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.GetIdentityMatrix*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.GetInverse(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN@)
  commentId: M:Engine.Core.Maths.MatrixMxN.GetInverse(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN@)
  id: GetInverse(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN@)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: GetInverse(MatrixMxN, out MatrixMxN)
  nameWithType: MatrixMxN.GetInverse(MatrixMxN, out MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.GetInverse(Engine.Core.Maths.MatrixMxN, out Engine.Core.Maths.MatrixMxN)
  type: Method
  source:
    id: GetInverse
    path: ''
    startLine: 3887
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static bool GetInverse(MatrixMxN m, out MatrixMxN inverseMatrix)
    parameters:
    - id: m
      type: Engine.Core.Maths.MatrixMxN
    - id: inverseMatrix
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetInverse(m As MatrixMxN, ByRef inverseMatrix As MatrixMxN) As Boolean
  overload: Engine.Core.Maths.MatrixMxN.GetInverse*
  nameWithType.vb: MatrixMxN.GetInverse(MatrixMxN, ByRef MatrixMxN)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Core.Maths.MatrixMxN.GetInverse(Engine.Core.Maths.MatrixMxN, ByRef Engine.Core.Maths.MatrixMxN)
  name.vb: GetInverse(MatrixMxN, ByRef MatrixMxN)
- uid: Engine.Core.Maths.MatrixMxN.op_Multiply(System.Single,Engine.Core.Maths.MatrixMxN)
  commentId: M:Engine.Core.Maths.MatrixMxN.op_Multiply(System.Single,Engine.Core.Maths.MatrixMxN)
  id: op_Multiply(System.Single,Engine.Core.Maths.MatrixMxN)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Multiply(Single, MatrixMxN)
  nameWithType: MatrixMxN.Multiply(Single, MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.Multiply(System.Single, Engine.Core.Maths.MatrixMxN)
  type: Operator
  source:
    id: op_Multiply
    path: ''
    startLine: 3901
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static MatrixMxN operator *(float f, MatrixMxN n)
    parameters:
    - id: f
      type: System.Single
    - id: n
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Shared Operator *(f As Single, n As MatrixMxN) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.op_Multiply(Engine.Core.Maths.MatrixMxN,System.Single)
  commentId: M:Engine.Core.Maths.MatrixMxN.op_Multiply(Engine.Core.Maths.MatrixMxN,System.Single)
  id: op_Multiply(Engine.Core.Maths.MatrixMxN,System.Single)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Multiply(MatrixMxN, Single)
  nameWithType: MatrixMxN.Multiply(MatrixMxN, Single)
  fullName: Engine.Core.Maths.MatrixMxN.Multiply(Engine.Core.Maths.MatrixMxN, System.Single)
  type: Operator
  source:
    id: op_Multiply
    path: ''
    startLine: 3905
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static MatrixMxN operator *(MatrixMxN n, float f)
    parameters:
    - id: n
      type: Engine.Core.Maths.MatrixMxN
    - id: f
      type: System.Single
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Shared Operator *(n As MatrixMxN, f As Single) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.op_Multiply(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  commentId: M:Engine.Core.Maths.MatrixMxN.op_Multiply(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  id: op_Multiply(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Multiply(MatrixMxN, MatrixMxN)
  nameWithType: MatrixMxN.Multiply(MatrixMxN, MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.Multiply(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
  type: Operator
  source:
    id: op_Multiply
    path: ''
    startLine: 3909
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static MatrixMxN operator *(MatrixMxN n, MatrixMxN m)
    parameters:
    - id: n
      type: Engine.Core.Maths.MatrixMxN
    - id: m
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Shared Operator *(n As MatrixMxN, m As MatrixMxN) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.op_Addition(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  commentId: M:Engine.Core.Maths.MatrixMxN.op_Addition(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  id: op_Addition(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Addition(MatrixMxN, MatrixMxN)
  nameWithType: MatrixMxN.Addition(MatrixMxN, MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
  type: Operator
  source:
    id: op_Addition
    path: ''
    startLine: 3913
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static MatrixMxN operator +(MatrixMxN n, MatrixMxN m)
    parameters:
    - id: n
      type: Engine.Core.Maths.MatrixMxN
    - id: m
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Shared Operator +(n As MatrixMxN, m As MatrixMxN) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.op_Subtraction(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  commentId: M:Engine.Core.Maths.MatrixMxN.op_Subtraction(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  id: op_Subtraction(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Subtraction(MatrixMxN, MatrixMxN)
  nameWithType: MatrixMxN.Subtraction(MatrixMxN, MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.Subtraction(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
  type: Operator
  source:
    id: op_Subtraction
    path: ''
    startLine: 3917
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static MatrixMxN operator -(MatrixMxN n, MatrixMxN m)
    parameters:
    - id: n
      type: Engine.Core.Maths.MatrixMxN
    - id: m
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Shared Operator -(n As MatrixMxN, m As MatrixMxN) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.op_UnaryNegation(Engine.Core.Maths.MatrixMxN)
  commentId: M:Engine.Core.Maths.MatrixMxN.op_UnaryNegation(Engine.Core.Maths.MatrixMxN)
  id: op_UnaryNegation(Engine.Core.Maths.MatrixMxN)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: UnaryNegation(MatrixMxN)
  nameWithType: MatrixMxN.UnaryNegation(MatrixMxN)
  fullName: Engine.Core.Maths.MatrixMxN.UnaryNegation(Engine.Core.Maths.MatrixMxN)
  type: Operator
  source:
    id: op_UnaryNegation
    path: ''
    startLine: 3921
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static MatrixMxN operator -(MatrixMxN n)
    parameters:
    - id: n
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Shared Operator -(n As MatrixMxN) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.op_Division(Engine.Core.Maths.MatrixMxN,System.Single)
  commentId: M:Engine.Core.Maths.MatrixMxN.op_Division(Engine.Core.Maths.MatrixMxN,System.Single)
  id: op_Division(Engine.Core.Maths.MatrixMxN,System.Single)
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Division(MatrixMxN, Single)
  nameWithType: MatrixMxN.Division(MatrixMxN, Single)
  fullName: Engine.Core.Maths.MatrixMxN.Division(Engine.Core.Maths.MatrixMxN, System.Single)
  type: Operator
  source:
    id: op_Division
    path: ''
    startLine: 3925
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static MatrixMxN operator /(MatrixMxN n, float f)
    parameters:
    - id: n
      type: Engine.Core.Maths.MatrixMxN
    - id: f
      type: System.Single
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Shared Operator /(n As MatrixMxN, f As Single) As MatrixMxN
  overload: Engine.Core.Maths.MatrixMxN.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.MatrixMxN.op_Implicit(Engine.Core.Maths.MatrixMxN)~Engine.Core.Maths.Matrix3x3
  commentId: M:Engine.Core.Maths.MatrixMxN.op_Implicit(Engine.Core.Maths.MatrixMxN)~Engine.Core.Maths.Matrix3x3
  id: op_Implicit(Engine.Core.Maths.MatrixMxN)~Engine.Core.Maths.Matrix3x3
  parent: Engine.Core.Maths.MatrixMxN
  langs:
  - csharp
  - vb
  name: Implicit(MatrixMxN to Matrix3x3)
  nameWithType: MatrixMxN.Implicit(MatrixMxN to Matrix3x3)
  fullName: Engine.Core.Maths.MatrixMxN.Implicit(Engine.Core.Maths.MatrixMxN to Engine.Core.Maths.Matrix3x3)
  type: Operator
  source:
    id: op_Implicit
    path: ''
    startLine: 3929
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static implicit operator Matrix3x3(MatrixMxN m)
    parameters:
    - id: m
      type: Engine.Core.Maths.MatrixMxN
    return:
      type: Engine.Core.Maths.Matrix3x3
    content.vb: Public Shared Widening Operator CType(m As MatrixMxN) As Matrix3x3
  overload: Engine.Core.Maths.MatrixMxN.op_Implicit*
  nameWithType.vb: MatrixMxN.Widening(MatrixMxN to Matrix3x3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Core.Maths.MatrixMxN.Widening(Engine.Core.Maths.MatrixMxN to Engine.Core.Maths.Matrix3x3)
  name.vb: Widening(MatrixMxN to Matrix3x3)
references:
- uid: Engine.Core.Maths
  commentId: N:Engine.Core.Maths
  name: Engine.Core.Maths
  nameWithType: Engine.Core.Maths
  fullName: Engine.Core.Maths
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Engine.Core.Maths.Matrix
  commentId: T:Engine.Core.Maths.Matrix
  parent: Engine.Core.Maths
  name: Matrix
  nameWithType: Matrix
  fullName: Engine.Core.Maths.Matrix
- uid: Engine.Core.Maths.IMatrix
  commentId: T:Engine.Core.Maths.IMatrix
  parent: Engine.Core.Maths
  name: IMatrix
  nameWithType: IMatrix
  fullName: Engine.Core.Maths.IMatrix
- uid: Engine.Core.Maths.Matrix.I2x2
  commentId: F:Engine.Core.Maths.Matrix.I2x2
  parent: Engine.Core.Maths.Matrix
  name: I2x2
  nameWithType: Matrix.I2x2
  fullName: Engine.Core.Maths.Matrix.I2x2
- uid: Engine.Core.Maths.Matrix.I3x3
  commentId: F:Engine.Core.Maths.Matrix.I3x3
  parent: Engine.Core.Maths.Matrix
  name: I3x3
  nameWithType: Matrix.I3x3
  fullName: Engine.Core.Maths.Matrix.I3x3
- uid: Engine.Core.Maths.Matrix.I4x4
  commentId: F:Engine.Core.Maths.Matrix.I4x4
  parent: Engine.Core.Maths.Matrix
  name: I4x4
  nameWithType: Matrix.I4x4
  fullName: Engine.Core.Maths.Matrix.I4x4
- uid: Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,{T}@)
  commentId: M:Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
  parent: Engine.Core.Maths.Matrix
  definition: Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
  name: GetIdentityMatrix<T>(Int32, T)
  nameWithType: Matrix.GetIdentityMatrix<T>(Int32, T)
  fullName: Engine.Core.Maths.Matrix.GetIdentityMatrix<T>(System.Int32, T)
  nameWithType.vb: Matrix.GetIdentityMatrix(Of T)(Int32, T)
  fullName.vb: Engine.Core.Maths.Matrix.GetIdentityMatrix(Of T)(System.Int32, T)
  name.vb: GetIdentityMatrix(Of T)(Int32, T)
  spec.csharp:
  - uid: Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
    name: GetIdentityMatrix<T>
    nameWithType: Matrix.GetIdentityMatrix<T>
    fullName: Engine.Core.Maths.Matrix.GetIdentityMatrix<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
    name: GetIdentityMatrix(Of T)
    nameWithType: Matrix.GetIdentityMatrix(Of T)
    fullName: Engine.Core.Maths.Matrix.GetIdentityMatrix(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.Maths.Matrix.GetInverse``1({T},{T}@)
  commentId: M:Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
  parent: Engine.Core.Maths.Matrix
  definition: Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
  name: GetInverse<T>(T, T)
  nameWithType: Matrix.GetInverse<T>(T, T)
  fullName: Engine.Core.Maths.Matrix.GetInverse<T>(T, T)
  nameWithType.vb: Matrix.GetInverse(Of T)(T, T)
  fullName.vb: Engine.Core.Maths.Matrix.GetInverse(Of T)(T, T)
  name.vb: GetInverse(Of T)(T, T)
  spec.csharp:
  - uid: Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
    name: GetInverse<T>
    nameWithType: Matrix.GetInverse<T>
    fullName: Engine.Core.Maths.Matrix.GetInverse<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
    name: GetInverse(Of T)
    nameWithType: Matrix.GetInverse(Of T)
    fullName: Engine.Core.Maths.Matrix.GetInverse(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
  commentId: M:Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
  isExternal: true
  name: GetIdentityMatrix<T>(Int32, T)
  nameWithType: Matrix.GetIdentityMatrix<T>(Int32, T)
  fullName: Engine.Core.Maths.Matrix.GetIdentityMatrix<T>(System.Int32, T)
  nameWithType.vb: Matrix.GetIdentityMatrix(Of T)(Int32, T)
  fullName.vb: Engine.Core.Maths.Matrix.GetIdentityMatrix(Of T)(System.Int32, T)
  name.vb: GetIdentityMatrix(Of T)(Int32, T)
  spec.csharp:
  - uid: Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
    name: GetIdentityMatrix<T>
    nameWithType: Matrix.GetIdentityMatrix<T>
    fullName: Engine.Core.Maths.Matrix.GetIdentityMatrix<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
    name: GetIdentityMatrix(Of T)
    nameWithType: Matrix.GetIdentityMatrix(Of T)
    fullName: Engine.Core.Maths.Matrix.GetIdentityMatrix(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
  commentId: M:Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
  name: GetInverse<T>(T, T)
  nameWithType: Matrix.GetInverse<T>(T, T)
  fullName: Engine.Core.Maths.Matrix.GetInverse<T>(T, T)
  nameWithType.vb: Matrix.GetInverse(Of T)(T, T)
  fullName.vb: Engine.Core.Maths.Matrix.GetInverse(Of T)(T, T)
  name.vb: GetInverse(Of T)(T, T)
  spec.csharp:
  - uid: Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
    name: GetInverse<T>
    nameWithType: Matrix.GetInverse<T>
    fullName: Engine.Core.Maths.Matrix.GetInverse<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
    name: GetInverse(Of T)
    nameWithType: Matrix.GetInverse(Of T)
    fullName: Engine.Core.Maths.Matrix.GetInverse(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.Maths.Matrix.RowCount
  commentId: P:Engine.Core.Maths.Matrix.RowCount
  parent: Engine.Core.Maths.Matrix
  name: RowCount
  nameWithType: Matrix.RowCount
  fullName: Engine.Core.Maths.Matrix.RowCount
- uid: Engine.Core.Maths.MatrixMxN.RowCount*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.RowCount
  name: RowCount
  nameWithType: MatrixMxN.RowCount
  fullName: Engine.Core.Maths.MatrixMxN.RowCount
- uid: Engine.Core.Maths.IMatrix.RowCount
  commentId: P:Engine.Core.Maths.IMatrix.RowCount
  parent: Engine.Core.Maths.IMatrix
  name: RowCount
  nameWithType: IMatrix.RowCount
  fullName: Engine.Core.Maths.IMatrix.RowCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Engine.Core.Maths.Matrix.ColumnCount
  commentId: P:Engine.Core.Maths.Matrix.ColumnCount
  parent: Engine.Core.Maths.Matrix
  name: ColumnCount
  nameWithType: Matrix.ColumnCount
  fullName: Engine.Core.Maths.Matrix.ColumnCount
- uid: Engine.Core.Maths.MatrixMxN.ColumnCount*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.ColumnCount
  name: ColumnCount
  nameWithType: MatrixMxN.ColumnCount
  fullName: Engine.Core.Maths.MatrixMxN.ColumnCount
- uid: Engine.Core.Maths.IMatrix.ColumnCount
  commentId: P:Engine.Core.Maths.IMatrix.ColumnCount
  parent: Engine.Core.Maths.IMatrix
  name: ColumnCount
  nameWithType: IMatrix.ColumnCount
  fullName: Engine.Core.Maths.IMatrix.ColumnCount
- uid: Engine.Core.Maths.Matrix.Item(System.Int32,System.Int32)
  commentId: P:Engine.Core.Maths.Matrix.Item(System.Int32,System.Int32)
  parent: Engine.Core.Maths.Matrix
  isExternal: true
  name: Item[Int32, Int32]
  nameWithType: Matrix.Item[Int32, Int32]
  fullName: Engine.Core.Maths.Matrix.Item[System.Int32, System.Int32]
  nameWithType.vb: Matrix.Item(Int32, Int32)
  fullName.vb: Engine.Core.Maths.Matrix.Item(System.Int32, System.Int32)
  name.vb: Item(Int32, Int32)
  spec.csharp:
  - uid: Engine.Core.Maths.Matrix.Item(System.Int32,System.Int32)
    name: Item
    nameWithType: Matrix.Item
    fullName: Engine.Core.Maths.Matrix.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Engine.Core.Maths.Matrix.Item(System.Int32,System.Int32)
    name: Item
    nameWithType: Matrix.Item
    fullName: Engine.Core.Maths.Matrix.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.Maths.MatrixMxN.Item*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.Item
  name: Item
  nameWithType: MatrixMxN.Item
  fullName: Engine.Core.Maths.MatrixMxN.Item
- uid: Engine.Core.Maths.IMatrix.Item(System.Int32,System.Int32)
  commentId: P:Engine.Core.Maths.IMatrix.Item(System.Int32,System.Int32)
  parent: Engine.Core.Maths.IMatrix
  isExternal: true
  name: Item[Int32, Int32]
  nameWithType: IMatrix.Item[Int32, Int32]
  fullName: Engine.Core.Maths.IMatrix.Item[System.Int32, System.Int32]
  nameWithType.vb: IMatrix.Item(Int32, Int32)
  fullName.vb: Engine.Core.Maths.IMatrix.Item(System.Int32, System.Int32)
  name.vb: Item(Int32, Int32)
  spec.csharp:
  - uid: Engine.Core.Maths.IMatrix.Item(System.Int32,System.Int32)
    name: Item
    nameWithType: IMatrix.Item
    fullName: Engine.Core.Maths.IMatrix.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Engine.Core.Maths.IMatrix.Item(System.Int32,System.Int32)
    name: Item
    nameWithType: IMatrix.Item
    fullName: Engine.Core.Maths.IMatrix.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Engine.Core.Maths.MatrixMxN.#ctor*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.#ctor
  name: MatrixMxN
  nameWithType: MatrixMxN.MatrixMxN
  fullName: Engine.Core.Maths.MatrixMxN.MatrixMxN
- uid: System.Collections.Generic.List{Engine.Core.Maths.Vector}
  commentId: T:System.Collections.Generic.List{Engine.Core.Maths.Vector}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector>
  nameWithType: List<Vector>
  fullName: System.Collections.Generic.List<Engine.Core.Maths.Vector>
  nameWithType.vb: List(Of Vector)
  fullName.vb: System.Collections.Generic.List(Of Engine.Core.Maths.Vector)
  name.vb: List(Of Vector)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Engine.Core.Maths.Vector
    name: Vector
    nameWithType: Vector
    fullName: Engine.Core.Maths.Vector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Engine.Core.Maths.Vector
    name: Vector
    nameWithType: Vector
    fullName: Engine.Core.Maths.Vector
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Engine.Core.Maths.MatrixMxN.GetValue*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.GetValue
  name: GetValue
  nameWithType: MatrixMxN.GetValue
  fullName: Engine.Core.Maths.MatrixMxN.GetValue
- uid: Engine.Core.Maths.MatrixMxN.SetValue*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.SetValue
  name: SetValue
  nameWithType: MatrixMxN.SetValue
  fullName: Engine.Core.Maths.MatrixMxN.SetValue
- uid: Engine.Core.Maths.MatrixMxN.GetRow*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.GetRow
  name: GetRow
  nameWithType: MatrixMxN.GetRow
  fullName: Engine.Core.Maths.MatrixMxN.GetRow
- uid: Engine.Core.Maths.Vector
  commentId: T:Engine.Core.Maths.Vector
  parent: Engine.Core.Maths
  name: Vector
  nameWithType: Vector
  fullName: Engine.Core.Maths.Vector
- uid: Engine.Core.Maths.MatrixMxN.GetColumn*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.GetColumn
  name: GetColumn
  nameWithType: MatrixMxN.GetColumn
  fullName: Engine.Core.Maths.MatrixMxN.GetColumn
- uid: Engine.Core.Maths.MatrixMxN.AddRow*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.AddRow
  name: AddRow
  nameWithType: MatrixMxN.AddRow
  fullName: Engine.Core.Maths.MatrixMxN.AddRow
- uid: Engine.Core.Maths.MatrixMxN.InsertRow*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.InsertRow
  name: InsertRow
  nameWithType: MatrixMxN.InsertRow
  fullName: Engine.Core.Maths.MatrixMxN.InsertRow
- uid: Engine.Core.Maths.MatrixMxN.RemoveRow*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.RemoveRow
  name: RemoveRow
  nameWithType: MatrixMxN.RemoveRow
  fullName: Engine.Core.Maths.MatrixMxN.RemoveRow
- uid: Engine.Core.Maths.MatrixMxN.RemoveColumn*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.RemoveColumn
  name: RemoveColumn
  nameWithType: MatrixMxN.RemoveColumn
  fullName: Engine.Core.Maths.MatrixMxN.RemoveColumn
- uid: Engine.Core.Maths.Matrix.SwapRows(System.Int32,System.Int32)
  commentId: M:Engine.Core.Maths.Matrix.SwapRows(System.Int32,System.Int32)
  parent: Engine.Core.Maths.Matrix
  isExternal: true
  name: SwapRows(Int32, Int32)
  nameWithType: Matrix.SwapRows(Int32, Int32)
  fullName: Engine.Core.Maths.Matrix.SwapRows(System.Int32, System.Int32)
  spec.csharp:
  - uid: Engine.Core.Maths.Matrix.SwapRows(System.Int32,System.Int32)
    name: SwapRows
    nameWithType: Matrix.SwapRows
    fullName: Engine.Core.Maths.Matrix.SwapRows
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Core.Maths.Matrix.SwapRows(System.Int32,System.Int32)
    name: SwapRows
    nameWithType: Matrix.SwapRows
    fullName: Engine.Core.Maths.Matrix.SwapRows
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.Maths.MatrixMxN.SwapRows*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.SwapRows
  name: SwapRows
  nameWithType: MatrixMxN.SwapRows
  fullName: Engine.Core.Maths.MatrixMxN.SwapRows
- uid: Engine.Core.Maths.IMatrix.SwapRows(System.Int32,System.Int32)
  commentId: M:Engine.Core.Maths.IMatrix.SwapRows(System.Int32,System.Int32)
  parent: Engine.Core.Maths.IMatrix
  isExternal: true
  name: SwapRows(Int32, Int32)
  nameWithType: IMatrix.SwapRows(Int32, Int32)
  fullName: Engine.Core.Maths.IMatrix.SwapRows(System.Int32, System.Int32)
  spec.csharp:
  - uid: Engine.Core.Maths.IMatrix.SwapRows(System.Int32,System.Int32)
    name: SwapRows
    nameWithType: IMatrix.SwapRows
    fullName: Engine.Core.Maths.IMatrix.SwapRows
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Core.Maths.IMatrix.SwapRows(System.Int32,System.Int32)
    name: SwapRows
    nameWithType: IMatrix.SwapRows
    fullName: Engine.Core.Maths.IMatrix.SwapRows
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.Maths.MatrixMxN.ScalarMultiplication*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.ScalarMultiplication
  name: ScalarMultiplication
  nameWithType: MatrixMxN.ScalarMultiplication
  fullName: Engine.Core.Maths.MatrixMxN.ScalarMultiplication
- uid: Engine.Core.Maths.MatrixMxN
  commentId: T:Engine.Core.Maths.MatrixMxN
  parent: Engine.Core.Maths
  name: MatrixMxN
  nameWithType: MatrixMxN
  fullName: Engine.Core.Maths.MatrixMxN
- uid: Engine.Core.Maths.MatrixMxN.ScalarDivision*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.ScalarDivision
  name: ScalarDivision
  nameWithType: MatrixMxN.ScalarDivision
  fullName: Engine.Core.Maths.MatrixMxN.ScalarDivision
- uid: Engine.Core.Maths.MatrixMxN.Multiplication*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.Multiplication
  name: Multiplication
  nameWithType: MatrixMxN.Multiplication
  fullName: Engine.Core.Maths.MatrixMxN.Multiplication
- uid: Engine.Core.Maths.MatrixMxN.Addition*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.Addition
  name: Addition
  nameWithType: MatrixMxN.Addition
  fullName: Engine.Core.Maths.MatrixMxN.Addition
- uid: Engine.Core.Maths.MatrixMxN.Substraction*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.Substraction
  name: Substraction
  nameWithType: MatrixMxN.Substraction
  fullName: Engine.Core.Maths.MatrixMxN.Substraction
- uid: Engine.Core.Maths.MatrixMxN.RowAddition*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.RowAddition
  name: RowAddition
  nameWithType: MatrixMxN.RowAddition
  fullName: Engine.Core.Maths.MatrixMxN.RowAddition
- uid: Engine.Core.Maths.MatrixMxN.RowSubstraction*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.RowSubstraction
  name: RowSubstraction
  nameWithType: MatrixMxN.RowSubstraction
  fullName: Engine.Core.Maths.MatrixMxN.RowSubstraction
- uid: Engine.Core.Maths.Matrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  commentId: M:Engine.Core.Maths.Matrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  parent: Engine.Core.Maths.Matrix
  isExternal: true
  name: RowOperation(Int32, Int32, MatrixOperation, Single)
  nameWithType: Matrix.RowOperation(Int32, Int32, MatrixOperation, Single)
  fullName: Engine.Core.Maths.Matrix.RowOperation(System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
  spec.csharp:
  - uid: Engine.Core.Maths.Matrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
    name: RowOperation
    nameWithType: Matrix.RowOperation
    fullName: Engine.Core.Maths.Matrix.RowOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Engine.Core.Maths.MatrixOperation
    name: MatrixOperation
    nameWithType: MatrixOperation
    fullName: Engine.Core.Maths.MatrixOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Core.Maths.Matrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
    name: RowOperation
    nameWithType: Matrix.RowOperation
    fullName: Engine.Core.Maths.Matrix.RowOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Engine.Core.Maths.MatrixOperation
    name: MatrixOperation
    nameWithType: MatrixOperation
    fullName: Engine.Core.Maths.MatrixOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.Maths.MatrixMxN.RowOperation*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.RowOperation
  name: RowOperation
  nameWithType: MatrixMxN.RowOperation
  fullName: Engine.Core.Maths.MatrixMxN.RowOperation
- uid: Engine.Core.Maths.IMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  commentId: M:Engine.Core.Maths.IMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  parent: Engine.Core.Maths.IMatrix
  isExternal: true
  name: RowOperation(Int32, Int32, MatrixOperation, Single)
  nameWithType: IMatrix.RowOperation(Int32, Int32, MatrixOperation, Single)
  fullName: Engine.Core.Maths.IMatrix.RowOperation(System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
  spec.csharp:
  - uid: Engine.Core.Maths.IMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
    name: RowOperation
    nameWithType: IMatrix.RowOperation
    fullName: Engine.Core.Maths.IMatrix.RowOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Engine.Core.Maths.MatrixOperation
    name: MatrixOperation
    nameWithType: MatrixOperation
    fullName: Engine.Core.Maths.MatrixOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Core.Maths.IMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
    name: RowOperation
    nameWithType: IMatrix.RowOperation
    fullName: Engine.Core.Maths.IMatrix.RowOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Engine.Core.Maths.MatrixOperation
    name: MatrixOperation
    nameWithType: MatrixOperation
    fullName: Engine.Core.Maths.MatrixOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.Maths.MatrixOperation
  commentId: T:Engine.Core.Maths.MatrixOperation
  parent: Engine.Core.Maths
  name: MatrixOperation
  nameWithType: MatrixOperation
  fullName: Engine.Core.Maths.MatrixOperation
- uid: Engine.Core.Maths.MatrixMxN.Operation*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.Operation
  name: Operation
  nameWithType: MatrixMxN.Operation
  fullName: Engine.Core.Maths.MatrixMxN.Operation
- uid: Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
  commentId: M:Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
  parent: Engine.Core.Maths.Matrix
  isExternal: true
  name: Operation(IMatrix, MatrixOperation, Single)
  nameWithType: Matrix.Operation(IMatrix, MatrixOperation, Single)
  fullName: Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix, Engine.Core.Maths.MatrixOperation, System.Single)
  spec.csharp:
  - uid: Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
    name: Operation
    nameWithType: Matrix.Operation
    fullName: Engine.Core.Maths.Matrix.Operation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Engine.Core.Maths.IMatrix
    name: IMatrix
    nameWithType: IMatrix
    fullName: Engine.Core.Maths.IMatrix
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Engine.Core.Maths.MatrixOperation
    name: MatrixOperation
    nameWithType: MatrixOperation
    fullName: Engine.Core.Maths.MatrixOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
    name: Operation
    nameWithType: Matrix.Operation
    fullName: Engine.Core.Maths.Matrix.Operation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Engine.Core.Maths.IMatrix
    name: IMatrix
    nameWithType: IMatrix
    fullName: Engine.Core.Maths.IMatrix
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Engine.Core.Maths.MatrixOperation
    name: MatrixOperation
    nameWithType: MatrixOperation
    fullName: Engine.Core.Maths.MatrixOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
  commentId: M:Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
  parent: Engine.Core.Maths.IMatrix
  isExternal: true
  name: Operation(IMatrix, MatrixOperation, Single)
  nameWithType: IMatrix.Operation(IMatrix, MatrixOperation, Single)
  fullName: Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix, Engine.Core.Maths.MatrixOperation, System.Single)
  spec.csharp:
  - uid: Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
    name: Operation
    nameWithType: IMatrix.Operation
    fullName: Engine.Core.Maths.IMatrix.Operation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Engine.Core.Maths.IMatrix
    name: IMatrix
    nameWithType: IMatrix
    fullName: Engine.Core.Maths.IMatrix
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Engine.Core.Maths.MatrixOperation
    name: MatrixOperation
    nameWithType: MatrixOperation
    fullName: Engine.Core.Maths.MatrixOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
    name: Operation
    nameWithType: IMatrix.Operation
    fullName: Engine.Core.Maths.IMatrix.Operation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Engine.Core.Maths.IMatrix
    name: IMatrix
    nameWithType: IMatrix
    fullName: Engine.Core.Maths.IMatrix
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Engine.Core.Maths.MatrixOperation
    name: MatrixOperation
    nameWithType: MatrixOperation
    fullName: Engine.Core.Maths.MatrixOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.Maths.MatrixMxN.Transpose*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.Transpose
  name: Transpose
  nameWithType: MatrixMxN.Transpose
  fullName: Engine.Core.Maths.MatrixMxN.Transpose
- uid: Engine.Core.Maths.MatrixMxN.GetSubMatrix*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.GetSubMatrix
  name: GetSubMatrix
  nameWithType: MatrixMxN.GetSubMatrix
  fullName: Engine.Core.Maths.MatrixMxN.GetSubMatrix
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices
  name: Get2x2SubMatrices
  nameWithType: MatrixMxN.Get2x2SubMatrices
  fullName: Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices
- uid: System.Collections.Generic.List{Engine.Core.Maths.MatrixMxN}
  commentId: T:System.Collections.Generic.List{Engine.Core.Maths.MatrixMxN}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MatrixMxN>
  nameWithType: List<MatrixMxN>
  fullName: System.Collections.Generic.List<Engine.Core.Maths.MatrixMxN>
  nameWithType.vb: List(Of MatrixMxN)
  fullName.vb: System.Collections.Generic.List(Of Engine.Core.Maths.MatrixMxN)
  name.vb: List(Of MatrixMxN)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Engine.Core.Maths.MatrixMxN
    name: MatrixMxN
    nameWithType: MatrixMxN
    fullName: Engine.Core.Maths.MatrixMxN
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Engine.Core.Maths.MatrixMxN
    name: MatrixMxN
    nameWithType: MatrixMxN
    fullName: Engine.Core.Maths.MatrixMxN
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.Maths.MatrixMxN.GetMinorMatrix*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.GetMinorMatrix
  name: GetMinorMatrix
  nameWithType: MatrixMxN.GetMinorMatrix
  fullName: Engine.Core.Maths.MatrixMxN.GetMinorMatrix
- uid: Engine.Core.Maths.MatrixMxN.GetCofactorMatrix*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.GetCofactorMatrix
  name: GetCofactorMatrix
  nameWithType: MatrixMxN.GetCofactorMatrix
  fullName: Engine.Core.Maths.MatrixMxN.GetCofactorMatrix
- uid: Engine.Core.Maths.MatrixMxN.GetDeterminant*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.GetDeterminant
  name: GetDeterminant
  nameWithType: MatrixMxN.GetDeterminant
  fullName: Engine.Core.Maths.MatrixMxN.GetDeterminant
- uid: Engine.Core.Maths.MatrixMxN.GetAdjointMatrix*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.GetAdjointMatrix
  name: GetAdjointMatrix
  nameWithType: MatrixMxN.GetAdjointMatrix
  fullName: Engine.Core.Maths.MatrixMxN.GetAdjointMatrix
- uid: Engine.Core.Maths.MatrixMxN.ToVector3*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.ToVector3
  name: ToVector3
  nameWithType: MatrixMxN.ToVector3
  fullName: Engine.Core.Maths.MatrixMxN.ToVector3
- uid: Engine.Core.Maths.Vector3
  commentId: T:Engine.Core.Maths.Vector3
  parent: Engine.Core.Maths
  name: Vector3
  nameWithType: Vector3
  fullName: Engine.Core.Maths.Vector3
- uid: Engine.Core.Maths.MatrixMxN.ToVector*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.ToVector
  name: ToVector
  nameWithType: MatrixMxN.ToVector
  fullName: Engine.Core.Maths.MatrixMxN.ToVector
- uid: Engine.Core.Maths.MatrixMxN.GetIdentityMatrix*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.GetIdentityMatrix
  name: GetIdentityMatrix
  nameWithType: MatrixMxN.GetIdentityMatrix
  fullName: Engine.Core.Maths.MatrixMxN.GetIdentityMatrix
- uid: Engine.Core.Maths.MatrixMxN.GetInverse*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.GetInverse
  name: GetInverse
  nameWithType: MatrixMxN.GetInverse
  fullName: Engine.Core.Maths.MatrixMxN.GetInverse
- uid: Engine.Core.Maths.MatrixMxN.op_Multiply*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.op_Multiply
  name: Multiply
  nameWithType: MatrixMxN.Multiply
  fullName: Engine.Core.Maths.MatrixMxN.Multiply
- uid: Engine.Core.Maths.MatrixMxN.op_Addition*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.op_Addition
  name: Addition
  nameWithType: MatrixMxN.Addition
  fullName: Engine.Core.Maths.MatrixMxN.Addition
- uid: Engine.Core.Maths.MatrixMxN.op_Subtraction*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.op_Subtraction
  name: Subtraction
  nameWithType: MatrixMxN.Subtraction
  fullName: Engine.Core.Maths.MatrixMxN.Subtraction
- uid: Engine.Core.Maths.MatrixMxN.op_UnaryNegation*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.op_UnaryNegation
  name: UnaryNegation
  nameWithType: MatrixMxN.UnaryNegation
  fullName: Engine.Core.Maths.MatrixMxN.UnaryNegation
- uid: Engine.Core.Maths.MatrixMxN.op_Division*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.op_Division
  name: Division
  nameWithType: MatrixMxN.Division
  fullName: Engine.Core.Maths.MatrixMxN.Division
- uid: Engine.Core.Maths.MatrixMxN.op_Implicit*
  commentId: Overload:Engine.Core.Maths.MatrixMxN.op_Implicit
  name: Implicit
  nameWithType: MatrixMxN.Implicit
  fullName: Engine.Core.Maths.MatrixMxN.Implicit
  nameWithType.vb: MatrixMxN.Widening
  fullName.vb: Engine.Core.Maths.MatrixMxN.Widening
  name.vb: Widening
- uid: Engine.Core.Maths.Matrix3x3
  commentId: T:Engine.Core.Maths.Matrix3x3
  parent: Engine.Core.Maths
  name: Matrix3x3
  nameWithType: Matrix3x3
  fullName: Engine.Core.Maths.Matrix3x3
