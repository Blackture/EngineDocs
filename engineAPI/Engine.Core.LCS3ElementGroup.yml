### YamlMime:ManagedReference
items:
- uid: Engine.Core.LCS3ElementGroup
  commentId: T:Engine.Core.LCS3ElementGroup
  id: LCS3ElementGroup
  parent: Engine.Core
  children:
  - Engine.Core.LCS3ElementGroup.#ctor(System.Guid,GCS3)
  - Engine.Core.LCS3ElementGroup.#ctor(System.Guid,System.Collections.Generic.List{Engine.Core.LCS3Element},GCS3)
  - Engine.Core.LCS3ElementGroup.Add(Engine.Core.LCS3Element)
  - Engine.Core.LCS3ElementGroup.Bounding
  - Engine.Core.LCS3ElementGroup.Contains(Engine.Core.LCS3Element)
  - Engine.Core.LCS3ElementGroup.ContainsMesh(System.Int32,System.Collections.Generic.List{Mesh3D}@)
  - Engine.Core.LCS3ElementGroup.GetAllByDepth(System.Int32)
  - Engine.Core.LCS3ElementGroup.GetAllLCS3sByDepth(System.Int32)
  - Engine.Core.LCS3ElementGroup.GetBounding(System.Int32)
  - Engine.Core.LCS3ElementGroup.GroupID
  - Engine.Core.LCS3ElementGroup.InBoundingsMesh(System.Int32,Vector3,Mesh3D[]@)
  - Engine.Core.LCS3ElementGroup.MaxDepth
  - Engine.Core.LCS3ElementGroup.Remove(Engine.Core.LCS3Element)
  langs:
  - csharp
  - vb
  name: LCS3ElementGroup
  nameWithType: LCS3ElementGroup
  fullName: Engine.Core.LCS3ElementGroup
  type: Class
  source:
    id: LCS3ElementGroup
    path: ''
    startLine: 355
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public class LCS3ElementGroup
    content.vb: Public Class LCS3ElementGroup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.LCS3ElementGroup.GroupID
  commentId: P:Engine.Core.LCS3ElementGroup.GroupID
  id: GroupID
  parent: Engine.Core.LCS3ElementGroup
  langs:
  - csharp
  - vb
  name: GroupID
  nameWithType: LCS3ElementGroup.GroupID
  fullName: Engine.Core.LCS3ElementGroup.GroupID
  type: Property
  source:
    id: GroupID
    path: ''
    startLine: 365
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public Guid GroupID { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property GroupID As Guid
  overload: Engine.Core.LCS3ElementGroup.GroupID*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.LCS3ElementGroup.MaxDepth
  commentId: P:Engine.Core.LCS3ElementGroup.MaxDepth
  id: MaxDepth
  parent: Engine.Core.LCS3ElementGroup
  langs:
  - csharp
  - vb
  name: MaxDepth
  nameWithType: LCS3ElementGroup.MaxDepth
  fullName: Engine.Core.LCS3ElementGroup.MaxDepth
  type: Property
  source:
    id: MaxDepth
    path: ''
    startLine: 369
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  summary: "\nAmount of layers the parent tree diagram has.\n"
  example: []
  syntax:
    content: public int MaxDepth { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxDepth As Integer
  overload: Engine.Core.LCS3ElementGroup.MaxDepth*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.LCS3ElementGroup.Bounding
  commentId: P:Engine.Core.LCS3ElementGroup.Bounding
  id: Bounding
  parent: Engine.Core.LCS3ElementGroup
  langs:
  - csharp
  - vb
  name: Bounding
  nameWithType: LCS3ElementGroup.Bounding
  fullName: Engine.Core.LCS3ElementGroup.Bounding
  type: Property
  source:
    id: Bounding
    path: ''
    startLine: 374
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public BoundingBox3D Bounding { get; }
    parameters: []
    return:
      type: BoundingBox3D
    content.vb: Public ReadOnly Property Bounding As BoundingBox3D
  overload: Engine.Core.LCS3ElementGroup.Bounding*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.LCS3ElementGroup.#ctor(System.Guid,GCS3)
  commentId: M:Engine.Core.LCS3ElementGroup.#ctor(System.Guid,GCS3)
  id: '#ctor(System.Guid,GCS3)'
  parent: Engine.Core.LCS3ElementGroup
  langs:
  - csharp
  - vb
  name: LCS3ElementGroup(Guid, GCS3)
  nameWithType: LCS3ElementGroup.LCS3ElementGroup(Guid, GCS3)
  fullName: Engine.Core.LCS3ElementGroup.LCS3ElementGroup(System.Guid, GCS3)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 376
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public LCS3ElementGroup(Guid groupID, GCS3 dependency)
    parameters:
    - id: groupID
      type: System.Guid
    - id: dependency
      type: GCS3
    content.vb: Public Sub New(groupID As Guid, dependency As GCS3)
  overload: Engine.Core.LCS3ElementGroup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.LCS3ElementGroup.#ctor(System.Guid,System.Collections.Generic.List{Engine.Core.LCS3Element},GCS3)
  commentId: M:Engine.Core.LCS3ElementGroup.#ctor(System.Guid,System.Collections.Generic.List{Engine.Core.LCS3Element},GCS3)
  id: '#ctor(System.Guid,System.Collections.Generic.List{Engine.Core.LCS3Element},GCS3)'
  parent: Engine.Core.LCS3ElementGroup
  langs:
  - csharp
  - vb
  name: LCS3ElementGroup(Guid, List<LCS3Element>, GCS3)
  nameWithType: LCS3ElementGroup.LCS3ElementGroup(Guid, List<LCS3Element>, GCS3)
  fullName: Engine.Core.LCS3ElementGroup.LCS3ElementGroup(System.Guid, System.Collections.Generic.List<Engine.Core.LCS3Element>, GCS3)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 384
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public LCS3ElementGroup(Guid groupID, List<LCS3Element> elements, GCS3 dependency)
    parameters:
    - id: groupID
      type: System.Guid
    - id: elements
      type: System.Collections.Generic.List{Engine.Core.LCS3Element}
    - id: dependency
      type: GCS3
    content.vb: Public Sub New(groupID As Guid, elements As List(Of LCS3Element), dependency As GCS3)
  overload: Engine.Core.LCS3ElementGroup.#ctor*
  nameWithType.vb: LCS3ElementGroup.LCS3ElementGroup(Guid, List(Of LCS3Element), GCS3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.LCS3ElementGroup.LCS3ElementGroup(System.Guid, System.Collections.Generic.List(Of Engine.Core.LCS3Element), GCS3)
  name.vb: LCS3ElementGroup(Guid, List(Of LCS3Element), GCS3)
- uid: Engine.Core.LCS3ElementGroup.Contains(Engine.Core.LCS3Element)
  commentId: M:Engine.Core.LCS3ElementGroup.Contains(Engine.Core.LCS3Element)
  id: Contains(Engine.Core.LCS3Element)
  parent: Engine.Core.LCS3ElementGroup
  langs:
  - csharp
  - vb
  name: Contains(LCS3Element)
  nameWithType: LCS3ElementGroup.Contains(LCS3Element)
  fullName: Engine.Core.LCS3ElementGroup.Contains(Engine.Core.LCS3Element)
  type: Method
  source:
    id: Contains
    path: ''
    startLine: 466
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public bool Contains(LCS3Element element)
    parameters:
    - id: element
      type: Engine.Core.LCS3Element
    return:
      type: System.Boolean
    content.vb: Public Function Contains(element As LCS3Element) As Boolean
  overload: Engine.Core.LCS3ElementGroup.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.LCS3ElementGroup.Add(Engine.Core.LCS3Element)
  commentId: M:Engine.Core.LCS3ElementGroup.Add(Engine.Core.LCS3Element)
  id: Add(Engine.Core.LCS3Element)
  parent: Engine.Core.LCS3ElementGroup
  langs:
  - csharp
  - vb
  name: Add(LCS3Element)
  nameWithType: LCS3ElementGroup.Add(LCS3Element)
  fullName: Engine.Core.LCS3ElementGroup.Add(Engine.Core.LCS3Element)
  type: Method
  source:
    id: Add
    path: ''
    startLine: 467
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public void Add(LCS3Element element)
    parameters:
    - id: element
      type: Engine.Core.LCS3Element
    content.vb: Public Sub Add(element As LCS3Element)
  overload: Engine.Core.LCS3ElementGroup.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.LCS3ElementGroup.Remove(Engine.Core.LCS3Element)
  commentId: M:Engine.Core.LCS3ElementGroup.Remove(Engine.Core.LCS3Element)
  id: Remove(Engine.Core.LCS3Element)
  parent: Engine.Core.LCS3ElementGroup
  langs:
  - csharp
  - vb
  name: Remove(LCS3Element)
  nameWithType: LCS3ElementGroup.Remove(LCS3Element)
  fullName: Engine.Core.LCS3ElementGroup.Remove(Engine.Core.LCS3Element)
  type: Method
  source:
    id: Remove
    path: ''
    startLine: 476
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public void Remove(LCS3Element element)
    parameters:
    - id: element
      type: Engine.Core.LCS3Element
    content.vb: Public Sub Remove(element As LCS3Element)
  overload: Engine.Core.LCS3ElementGroup.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.LCS3ElementGroup.GetAllByDepth(System.Int32)
  commentId: M:Engine.Core.LCS3ElementGroup.GetAllByDepth(System.Int32)
  id: GetAllByDepth(System.Int32)
  parent: Engine.Core.LCS3ElementGroup
  langs:
  - csharp
  - vb
  name: GetAllByDepth(Int32)
  nameWithType: LCS3ElementGroup.GetAllByDepth(Int32)
  fullName: Engine.Core.LCS3ElementGroup.GetAllByDepth(System.Int32)
  type: Method
  source:
    id: GetAllByDepth
    path: ''
    startLine: 486
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public List<LCS3Element> GetAllByDepth(int depth)
    parameters:
    - id: depth
      type: System.Int32
    return:
      type: System.Collections.Generic.List{Engine.Core.LCS3Element}
    content.vb: Public Function GetAllByDepth(depth As Integer) As List(Of LCS3Element)
  overload: Engine.Core.LCS3ElementGroup.GetAllByDepth*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.LCS3ElementGroup.GetAllLCS3sByDepth(System.Int32)
  commentId: M:Engine.Core.LCS3ElementGroup.GetAllLCS3sByDepth(System.Int32)
  id: GetAllLCS3sByDepth(System.Int32)
  parent: Engine.Core.LCS3ElementGroup
  langs:
  - csharp
  - vb
  name: GetAllLCS3sByDepth(Int32)
  nameWithType: LCS3ElementGroup.GetAllLCS3sByDepth(Int32)
  fullName: Engine.Core.LCS3ElementGroup.GetAllLCS3sByDepth(System.Int32)
  type: Method
  source:
    id: GetAllLCS3sByDepth
    path: ''
    startLine: 487
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public List<LCS3> GetAllLCS3sByDepth(int depth)
    parameters:
    - id: depth
      type: System.Int32
    return:
      type: System.Collections.Generic.List{LCS3}
    content.vb: Public Function GetAllLCS3sByDepth(depth As Integer) As List(Of LCS3)
  overload: Engine.Core.LCS3ElementGroup.GetAllLCS3sByDepth*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.LCS3ElementGroup.GetBounding(System.Int32)
  commentId: M:Engine.Core.LCS3ElementGroup.GetBounding(System.Int32)
  id: GetBounding(System.Int32)
  parent: Engine.Core.LCS3ElementGroup
  langs:
  - csharp
  - vb
  name: GetBounding(Int32)
  nameWithType: LCS3ElementGroup.GetBounding(Int32)
  fullName: Engine.Core.LCS3ElementGroup.GetBounding(System.Int32)
  type: Method
  source:
    id: GetBounding
    path: ''
    startLine: 497
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public BoundingBox3D GetBounding(int depth)
    parameters:
    - id: depth
      type: System.Int32
    return:
      type: BoundingBox3D
    content.vb: Public Function GetBounding(depth As Integer) As BoundingBox3D
  overload: Engine.Core.LCS3ElementGroup.GetBounding*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.LCS3ElementGroup.InBoundingsMesh(System.Int32,Vector3,Mesh3D[]@)
  commentId: M:Engine.Core.LCS3ElementGroup.InBoundingsMesh(System.Int32,Vector3,Mesh3D[]@)
  id: InBoundingsMesh(System.Int32,Vector3,Mesh3D[]@)
  parent: Engine.Core.LCS3ElementGroup
  langs:
  - csharp
  - vb
  name: InBoundingsMesh(Int32, Vector3, out Mesh3D[])
  nameWithType: LCS3ElementGroup.InBoundingsMesh(Int32, Vector3, out Mesh3D[])
  fullName: Engine.Core.LCS3ElementGroup.InBoundingsMesh(System.Int32, Vector3, out Mesh3D[])
  type: Method
  source:
    id: InBoundingsMesh
    path: ''
    startLine: 516
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  summary: "\nThe InBoundingsMesh method checks if a given global position is within a hierarchy of bounding volumes at different depths, and returns an array of all of those bounding volumes through its out parameter, containing only bounding volumes that contain a mesh\n"
  example: []
  syntax:
    content: public bool InBoundingsMesh(int depth, Vector3 globalPosition, out Mesh3D[] hits)
    parameters:
    - id: depth
      type: System.Int32
      description: ''
    - id: globalPosition
      type: Vector3
      description: ''
    - id: hits
      type: Mesh3D[]
      description: ''
    return:
      type: System.Boolean
      description: A bool indicating whether or not any bounding volumes were found.
    content.vb: Public Function InBoundingsMesh(depth As Integer, globalPosition As Vector3, ByRef hits As Mesh3D()) As Boolean
  overload: Engine.Core.LCS3ElementGroup.InBoundingsMesh*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  nameWithType.vb: LCS3ElementGroup.InBoundingsMesh(Int32, Vector3, ByRef Mesh3D())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.LCS3ElementGroup.InBoundingsMesh(System.Int32, Vector3, ByRef Mesh3D())
  name.vb: InBoundingsMesh(Int32, Vector3, ByRef Mesh3D())
- uid: Engine.Core.LCS3ElementGroup.ContainsMesh(System.Int32,System.Collections.Generic.List{Mesh3D}@)
  commentId: M:Engine.Core.LCS3ElementGroup.ContainsMesh(System.Int32,System.Collections.Generic.List{Mesh3D}@)
  id: ContainsMesh(System.Int32,System.Collections.Generic.List{Mesh3D}@)
  parent: Engine.Core.LCS3ElementGroup
  langs:
  - csharp
  - vb
  name: ContainsMesh(Int32, out List<Mesh3D>)
  nameWithType: LCS3ElementGroup.ContainsMesh(Int32, out List<Mesh3D>)
  fullName: Engine.Core.LCS3ElementGroup.ContainsMesh(System.Int32, out System.Collections.Generic.List<Mesh3D>)
  type: Method
  source:
    id: ContainsMesh
    path: ''
    startLine: 541
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public bool ContainsMesh(int depth, out List<Mesh3D> meshes)
    parameters:
    - id: depth
      type: System.Int32
    - id: meshes
      type: System.Collections.Generic.List{Mesh3D}
    return:
      type: System.Boolean
    content.vb: Public Function ContainsMesh(depth As Integer, ByRef meshes As List(Of Mesh3D)) As Boolean
  overload: Engine.Core.LCS3ElementGroup.ContainsMesh*
  nameWithType.vb: LCS3ElementGroup.ContainsMesh(Int32, ByRef List(Of Mesh3D))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.LCS3ElementGroup.ContainsMesh(System.Int32, ByRef System.Collections.Generic.List(Of Mesh3D))
  name.vb: ContainsMesh(Int32, ByRef List(Of Mesh3D))
references:
- uid: Engine.Core
  commentId: N:Engine.Core
  name: Engine.Core
  nameWithType: Engine.Core
  fullName: Engine.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Core.LCS3ElementGroup.GroupID*
  commentId: Overload:Engine.Core.LCS3ElementGroup.GroupID
  name: GroupID
  nameWithType: LCS3ElementGroup.GroupID
  fullName: Engine.Core.LCS3ElementGroup.GroupID
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Engine.Core.LCS3ElementGroup.MaxDepth*
  commentId: Overload:Engine.Core.LCS3ElementGroup.MaxDepth
  name: MaxDepth
  nameWithType: LCS3ElementGroup.MaxDepth
  fullName: Engine.Core.LCS3ElementGroup.MaxDepth
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Engine.Core.LCS3ElementGroup.Bounding*
  commentId: Overload:Engine.Core.LCS3ElementGroup.Bounding
  name: Bounding
  nameWithType: LCS3ElementGroup.Bounding
  fullName: Engine.Core.LCS3ElementGroup.Bounding
- uid: BoundingBox3D
  isExternal: true
  name: BoundingBox3D
  nameWithType: BoundingBox3D
  fullName: BoundingBox3D
- uid: Engine.Core.LCS3ElementGroup.#ctor*
  commentId: Overload:Engine.Core.LCS3ElementGroup.#ctor
  name: LCS3ElementGroup
  nameWithType: LCS3ElementGroup.LCS3ElementGroup
  fullName: Engine.Core.LCS3ElementGroup.LCS3ElementGroup
- uid: GCS3
  isExternal: true
  name: GCS3
  nameWithType: GCS3
  fullName: GCS3
- uid: System.Collections.Generic.List{Engine.Core.LCS3Element}
  commentId: T:System.Collections.Generic.List{Engine.Core.LCS3Element}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<LCS3Element>
  nameWithType: List<LCS3Element>
  fullName: System.Collections.Generic.List<Engine.Core.LCS3Element>
  nameWithType.vb: List(Of LCS3Element)
  fullName.vb: System.Collections.Generic.List(Of Engine.Core.LCS3Element)
  name.vb: List(Of LCS3Element)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Engine.Core.LCS3Element
    name: LCS3Element
    nameWithType: LCS3Element
    fullName: Engine.Core.LCS3Element
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Engine.Core.LCS3Element
    name: LCS3Element
    nameWithType: LCS3Element
    fullName: Engine.Core.LCS3Element
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Engine.Core.LCS3ElementGroup.Contains*
  commentId: Overload:Engine.Core.LCS3ElementGroup.Contains
  name: Contains
  nameWithType: LCS3ElementGroup.Contains
  fullName: Engine.Core.LCS3ElementGroup.Contains
- uid: Engine.Core.LCS3Element
  commentId: T:Engine.Core.LCS3Element
  parent: Engine.Core
  name: LCS3Element
  nameWithType: LCS3Element
  fullName: Engine.Core.LCS3Element
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Engine.Core.LCS3ElementGroup.Add*
  commentId: Overload:Engine.Core.LCS3ElementGroup.Add
  name: Add
  nameWithType: LCS3ElementGroup.Add
  fullName: Engine.Core.LCS3ElementGroup.Add
- uid: Engine.Core.LCS3ElementGroup.Remove*
  commentId: Overload:Engine.Core.LCS3ElementGroup.Remove
  name: Remove
  nameWithType: LCS3ElementGroup.Remove
  fullName: Engine.Core.LCS3ElementGroup.Remove
- uid: Engine.Core.LCS3ElementGroup.GetAllByDepth*
  commentId: Overload:Engine.Core.LCS3ElementGroup.GetAllByDepth
  name: GetAllByDepth
  nameWithType: LCS3ElementGroup.GetAllByDepth
  fullName: Engine.Core.LCS3ElementGroup.GetAllByDepth
- uid: Engine.Core.LCS3ElementGroup.GetAllLCS3sByDepth*
  commentId: Overload:Engine.Core.LCS3ElementGroup.GetAllLCS3sByDepth
  name: GetAllLCS3sByDepth
  nameWithType: LCS3ElementGroup.GetAllLCS3sByDepth
  fullName: Engine.Core.LCS3ElementGroup.GetAllLCS3sByDepth
- uid: System.Collections.Generic.List{LCS3}
  commentId: T:System.Collections.Generic.List{LCS3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<LCS3>
  nameWithType: List<LCS3>
  fullName: System.Collections.Generic.List<LCS3>
  nameWithType.vb: List(Of LCS3)
  fullName.vb: System.Collections.Generic.List(Of LCS3)
  name.vb: List(Of LCS3)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LCS3
    name: LCS3
    nameWithType: LCS3
    fullName: LCS3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LCS3
    name: LCS3
    nameWithType: LCS3
    fullName: LCS3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.LCS3ElementGroup.GetBounding*
  commentId: Overload:Engine.Core.LCS3ElementGroup.GetBounding
  name: GetBounding
  nameWithType: LCS3ElementGroup.GetBounding
  fullName: Engine.Core.LCS3ElementGroup.GetBounding
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: Engine.Core.LCS3ElementGroup.InBoundingsMesh*
  commentId: Overload:Engine.Core.LCS3ElementGroup.InBoundingsMesh
  name: InBoundingsMesh
  nameWithType: LCS3ElementGroup.InBoundingsMesh
  fullName: Engine.Core.LCS3ElementGroup.InBoundingsMesh
- uid: Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: Mesh3D[]
  isExternal: true
  name: Mesh3D[]
  nameWithType: Mesh3D[]
  fullName: Mesh3D[]
  nameWithType.vb: Mesh3D()
  fullName.vb: Mesh3D()
  name.vb: Mesh3D()
  spec.csharp:
  - uid: Mesh3D
    name: Mesh3D
    nameWithType: Mesh3D
    fullName: Mesh3D
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Mesh3D
    name: Mesh3D
    nameWithType: Mesh3D
    fullName: Mesh3D
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Engine.Core.LCS3ElementGroup.ContainsMesh*
  commentId: Overload:Engine.Core.LCS3ElementGroup.ContainsMesh
  name: ContainsMesh
  nameWithType: LCS3ElementGroup.ContainsMesh
  fullName: Engine.Core.LCS3ElementGroup.ContainsMesh
- uid: System.Collections.Generic.List{Mesh3D}
  commentId: T:System.Collections.Generic.List{Mesh3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Mesh3D>
  nameWithType: List<Mesh3D>
  fullName: System.Collections.Generic.List<Mesh3D>
  nameWithType.vb: List(Of Mesh3D)
  fullName.vb: System.Collections.Generic.List(Of Mesh3D)
  name.vb: List(Of Mesh3D)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mesh3D
    name: Mesh3D
    nameWithType: Mesh3D
    fullName: Mesh3D
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mesh3D
    name: Mesh3D
    nameWithType: Mesh3D
    fullName: Mesh3D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
