### YamlMime:ManagedReference
items:
- uid: Engine.Core.Components.Camera
  commentId: T:Engine.Core.Components.Camera
  id: Camera
  parent: Engine.Core.Components
  children:
  - Engine.Core.Components.Camera.#ctor(Engine.Core.Object3D,System.Single,System.Single)
  - Engine.Core.Components.Camera.AnyLightSource(System.Collections.Generic.List{LightSource}@)
  - Engine.Core.Components.Camera.FarPlane
  - Engine.Core.Components.Camera.FarPlaneDistance
  - Engine.Core.Components.Camera.ImagePlane
  - Engine.Core.Components.Camera.NearPlane
  - Engine.Core.Components.Camera.NearPlaneDistance
  - Engine.Core.Components.Camera.RenderPoint(System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: Camera
  nameWithType: Camera
  fullName: Engine.Core.Components.Camera
  type: Class
  source:
    id: Camera
    path: ''
    startLine: 998
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: 'public class Camera : Component'
    content.vb: >-
      Public Class Camera
          Inherits Component
  inheritance:
  - System.Object
  - Engine.Core.Component
  inheritedMembers:
  - Engine.Core.Component.Dependency
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.Components.Camera.NearPlaneDistance
  commentId: P:Engine.Core.Components.Camera.NearPlaneDistance
  id: NearPlaneDistance
  parent: Engine.Core.Components.Camera
  langs:
  - csharp
  - vb
  name: NearPlaneDistance
  nameWithType: Camera.NearPlaneDistance
  fullName: Engine.Core.Components.Camera.NearPlaneDistance
  type: Property
  source:
    id: NearPlaneDistance
    path: ''
    startLine: 1009
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: public float NearPlaneDistance { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property NearPlaneDistance As Single
  overload: Engine.Core.Components.Camera.NearPlaneDistance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Engine.Core.Components.Camera.FarPlaneDistance
  commentId: P:Engine.Core.Components.Camera.FarPlaneDistance
  id: FarPlaneDistance
  parent: Engine.Core.Components.Camera
  langs:
  - csharp
  - vb
  name: FarPlaneDistance
  nameWithType: Camera.FarPlaneDistance
  fullName: Engine.Core.Components.Camera.FarPlaneDistance
  type: Property
  source:
    id: FarPlaneDistance
    path: ''
    startLine: 1014
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: public float FarPlaneDistance { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property FarPlaneDistance As Single
  overload: Engine.Core.Components.Camera.FarPlaneDistance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Engine.Core.Components.Camera.NearPlane
  commentId: P:Engine.Core.Components.Camera.NearPlane
  id: NearPlane
  parent: Engine.Core.Components.Camera
  langs:
  - csharp
  - vb
  name: NearPlane
  nameWithType: Camera.NearPlane
  fullName: Engine.Core.Components.Camera.NearPlane
  type: Property
  source:
    id: NearPlane
    path: ''
    startLine: 1019
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: public Camera.CameraPlane NearPlane { get; }
    parameters: []
    return:
      type: Engine.Core.Components.Camera.CameraPlane
    content.vb: Public ReadOnly Property NearPlane As Camera.CameraPlane
  overload: Engine.Core.Components.Camera.NearPlane*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Components.Camera.FarPlane
  commentId: P:Engine.Core.Components.Camera.FarPlane
  id: FarPlane
  parent: Engine.Core.Components.Camera
  langs:
  - csharp
  - vb
  name: FarPlane
  nameWithType: Camera.FarPlane
  fullName: Engine.Core.Components.Camera.FarPlane
  type: Property
  source:
    id: FarPlane
    path: ''
    startLine: 1020
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: public Camera.CameraPlane FarPlane { get; }
    parameters: []
    return:
      type: Engine.Core.Components.Camera.CameraPlane
    content.vb: Public ReadOnly Property FarPlane As Camera.CameraPlane
  overload: Engine.Core.Components.Camera.FarPlane*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Components.Camera.ImagePlane
  commentId: P:Engine.Core.Components.Camera.ImagePlane
  id: ImagePlane
  parent: Engine.Core.Components.Camera
  langs:
  - csharp
  - vb
  name: ImagePlane
  nameWithType: Camera.ImagePlane
  fullName: Engine.Core.Components.Camera.ImagePlane
  type: Property
  source:
    id: ImagePlane
    path: ''
    startLine: 1021
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: public Camera.CameraPlane ImagePlane { get; }
    parameters: []
    return:
      type: Engine.Core.Components.Camera.CameraPlane
    content.vb: Public ReadOnly Property ImagePlane As Camera.CameraPlane
  overload: Engine.Core.Components.Camera.ImagePlane*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Components.Camera.#ctor(Engine.Core.Object3D,System.Single,System.Single)
  commentId: M:Engine.Core.Components.Camera.#ctor(Engine.Core.Object3D,System.Single,System.Single)
  id: '#ctor(Engine.Core.Object3D,System.Single,System.Single)'
  parent: Engine.Core.Components.Camera
  langs:
  - csharp
  - vb
  name: Camera(Object3D, Single, Single)
  nameWithType: Camera.Camera(Object3D, Single, Single)
  fullName: Engine.Core.Components.Camera.Camera(Engine.Core.Object3D, System.Single, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1023
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: public Camera(Object3D dependency, float distanceToNearPlane = 0.25F, float distanceToFarPlane = 1000F)
    parameters:
    - id: dependency
      type: Engine.Core.Object3D
    - id: distanceToNearPlane
      type: System.Single
    - id: distanceToFarPlane
      type: System.Single
    content.vb: Public Sub New(dependency As Object3D, distanceToNearPlane As Single = 0.25F, distanceToFarPlane As Single = 1000F)
  overload: Engine.Core.Components.Camera.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Components.Camera.RenderPoint(System.Single,System.Single)
  commentId: M:Engine.Core.Components.Camera.RenderPoint(System.Single,System.Single)
  id: RenderPoint(System.Single,System.Single)
  parent: Engine.Core.Components.Camera
  langs:
  - csharp
  - vb
  name: RenderPoint(Single, Single)
  nameWithType: Camera.RenderPoint(Single, Single)
  fullName: Engine.Core.Components.Camera.RenderPoint(System.Single, System.Single)
  type: Method
  source:
    id: RenderPoint
    path: ''
    startLine: 1034
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: public Pixel RenderPoint(float ds, float dt)
    parameters:
    - id: ds
      type: System.Single
    - id: dt
      type: System.Single
    return:
      type: Pixel
    content.vb: Public Function RenderPoint(ds As Single, dt As Single) As Pixel
  overload: Engine.Core.Components.Camera.RenderPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Components.Camera.AnyLightSource(System.Collections.Generic.List{LightSource}@)
  commentId: M:Engine.Core.Components.Camera.AnyLightSource(System.Collections.Generic.List{LightSource}@)
  id: AnyLightSource(System.Collections.Generic.List{LightSource}@)
  parent: Engine.Core.Components.Camera
  langs:
  - csharp
  - vb
  name: AnyLightSource(out List<LightSource>)
  nameWithType: Camera.AnyLightSource(out List<LightSource>)
  fullName: Engine.Core.Components.Camera.AnyLightSource(out System.Collections.Generic.List<LightSource>)
  type: Method
  source:
    id: AnyLightSource
    path: ''
    startLine: 1211
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  summary: "\nTrue if any light source affects the scene part that is rendered.\nOutputs all light sources that affect the scene.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Not implemented")]

      public bool AnyLightSource(out List<LightSource> lightSources)
    parameters:
    - id: lightSources
      type: System.Collections.Generic.List{LightSource}
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <Obsolete("Not implemented")>

      Public Function AnyLightSource(ByRef lightSources As List(Of LightSource)) As Boolean
  overload: Engine.Core.Components.Camera.AnyLightSource*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Not implemented
  nameWithType.vb: Camera.AnyLightSource(ByRef List(Of LightSource))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Components.Camera.AnyLightSource(ByRef System.Collections.Generic.List(Of LightSource))
  name.vb: AnyLightSource(ByRef List(Of LightSource))
references:
- uid: Engine.Core.Components
  commentId: N:Engine.Core.Components
  name: Engine.Core.Components
  nameWithType: Engine.Core.Components
  fullName: Engine.Core.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Engine.Core.Component
  commentId: T:Engine.Core.Component
  parent: Engine.Core
  name: Component
  nameWithType: Component
  fullName: Engine.Core.Component
- uid: Engine.Core.Component.Dependency
  commentId: P:Engine.Core.Component.Dependency
  parent: Engine.Core.Component
  name: Dependency
  nameWithType: Component.Dependency
  fullName: Engine.Core.Component.Dependency
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Core
  commentId: N:Engine.Core
  name: Engine.Core
  nameWithType: Engine.Core
  fullName: Engine.Core
- uid: Engine.Core.Components.Camera.NearPlaneDistance*
  commentId: Overload:Engine.Core.Components.Camera.NearPlaneDistance
  name: NearPlaneDistance
  nameWithType: Camera.NearPlaneDistance
  fullName: Engine.Core.Components.Camera.NearPlaneDistance
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Engine.Core.Components.Camera.FarPlaneDistance*
  commentId: Overload:Engine.Core.Components.Camera.FarPlaneDistance
  name: FarPlaneDistance
  nameWithType: Camera.FarPlaneDistance
  fullName: Engine.Core.Components.Camera.FarPlaneDistance
- uid: Engine.Core.Components.Camera.NearPlane*
  commentId: Overload:Engine.Core.Components.Camera.NearPlane
  name: NearPlane
  nameWithType: Camera.NearPlane
  fullName: Engine.Core.Components.Camera.NearPlane
- uid: Engine.Core.Components.Camera.CameraPlane
  commentId: T:Engine.Core.Components.Camera.CameraPlane
  parent: Engine.Core.Components
  name: Camera.CameraPlane
  nameWithType: Camera.CameraPlane
  fullName: Engine.Core.Components.Camera.CameraPlane
- uid: Engine.Core.Components.Camera.FarPlane*
  commentId: Overload:Engine.Core.Components.Camera.FarPlane
  name: FarPlane
  nameWithType: Camera.FarPlane
  fullName: Engine.Core.Components.Camera.FarPlane
- uid: Engine.Core.Components.Camera.ImagePlane*
  commentId: Overload:Engine.Core.Components.Camera.ImagePlane
  name: ImagePlane
  nameWithType: Camera.ImagePlane
  fullName: Engine.Core.Components.Camera.ImagePlane
- uid: Engine.Core.Components.Camera.#ctor*
  commentId: Overload:Engine.Core.Components.Camera.#ctor
  name: Camera
  nameWithType: Camera.Camera
  fullName: Engine.Core.Components.Camera.Camera
- uid: Engine.Core.Object3D
  commentId: T:Engine.Core.Object3D
  parent: Engine.Core
  name: Object3D
  nameWithType: Object3D
  fullName: Engine.Core.Object3D
- uid: Engine.Core.Components.Camera.RenderPoint*
  commentId: Overload:Engine.Core.Components.Camera.RenderPoint
  name: RenderPoint
  nameWithType: Camera.RenderPoint
  fullName: Engine.Core.Components.Camera.RenderPoint
- uid: Pixel
  isExternal: true
  name: Pixel
  nameWithType: Pixel
  fullName: Pixel
- uid: Engine.Core.Components.Camera.AnyLightSource*
  commentId: Overload:Engine.Core.Components.Camera.AnyLightSource
  name: AnyLightSource
  nameWithType: Camera.AnyLightSource
  fullName: Engine.Core.Components.Camera.AnyLightSource
- uid: System.Collections.Generic.List{LightSource}
  commentId: T:System.Collections.Generic.List{LightSource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<LightSource>
  nameWithType: List<LightSource>
  fullName: System.Collections.Generic.List<LightSource>
  nameWithType.vb: List(Of LightSource)
  fullName.vb: System.Collections.Generic.List(Of LightSource)
  name.vb: List(Of LightSource)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LightSource
    name: LightSource
    nameWithType: LightSource
    fullName: LightSource
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LightSource
    name: LightSource
    nameWithType: LightSource
    fullName: LightSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
