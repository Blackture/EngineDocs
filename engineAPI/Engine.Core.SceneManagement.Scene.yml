### YamlMime:ManagedReference
items:
- uid: Engine.Core.SceneManagement.Scene
  commentId: T:Engine.Core.SceneManagement.Scene
  id: Scene
  parent: Engine.Core.SceneManagement
  children:
  - Engine.Core.SceneManagement.Scene.#ctor(System.Int32,Engine.Core.SceneManagement.SceneType)
  - Engine.Core.SceneManagement.Scene.GetGlobalCoordinateSystem(GCS3@)
  - Engine.Core.SceneManagement.Scene.Name
  - Engine.Core.SceneManagement.Scene.SceneId
  - Engine.Core.SceneManagement.Scene.Type
  langs:
  - csharp
  - vb
  name: Scene
  nameWithType: Scene
  fullName: Engine.Core.SceneManagement.Scene
  type: Class
  source:
    id: Scene
    path: ''
    startLine: 6731
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.SceneManagement
  syntax:
    content: public class Scene
    content.vb: Public Class Scene
  inheritance:
  - System.Object
  derivedClasses:
  - Engine.Core.SceneManagement.Scene3D
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.SceneManagement.Scene.Name
  commentId: F:Engine.Core.SceneManagement.Scene.Name
  id: Name
  parent: Engine.Core.SceneManagement.Scene
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Scene.Name
  fullName: Engine.Core.SceneManagement.Scene.Name
  type: Field
  source:
    id: Name
    path: ''
    startLine: 6733
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.SceneManagement
  syntax:
    content: public string Name
    return:
      type: System.String
    content.vb: Public Name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.SceneManagement.Scene.SceneId
  commentId: P:Engine.Core.SceneManagement.Scene.SceneId
  id: SceneId
  parent: Engine.Core.SceneManagement.Scene
  langs:
  - csharp
  - vb
  name: SceneId
  nameWithType: Scene.SceneId
  fullName: Engine.Core.SceneManagement.Scene.SceneId
  type: Property
  source:
    id: SceneId
    path: ''
    startLine: 6739
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.SceneManagement
  syntax:
    content: public int SceneId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SceneId As Integer
  overload: Engine.Core.SceneManagement.Scene.SceneId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.SceneManagement.Scene.Type
  commentId: P:Engine.Core.SceneManagement.Scene.Type
  id: Type
  parent: Engine.Core.SceneManagement.Scene
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Scene.Type
  fullName: Engine.Core.SceneManagement.Scene.Type
  type: Property
  source:
    id: Type
    path: ''
    startLine: 6740
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.SceneManagement
  syntax:
    content: public SceneType Type { get; }
    parameters: []
    return:
      type: Engine.Core.SceneManagement.SceneType
    content.vb: Public ReadOnly Property Type As SceneType
  overload: Engine.Core.SceneManagement.Scene.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.SceneManagement.Scene.#ctor(System.Int32,Engine.Core.SceneManagement.SceneType)
  commentId: M:Engine.Core.SceneManagement.Scene.#ctor(System.Int32,Engine.Core.SceneManagement.SceneType)
  id: '#ctor(System.Int32,Engine.Core.SceneManagement.SceneType)'
  parent: Engine.Core.SceneManagement.Scene
  langs:
  - csharp
  - vb
  name: Scene(Int32, SceneType)
  nameWithType: Scene.Scene(Int32, SceneType)
  fullName: Engine.Core.SceneManagement.Scene.Scene(System.Int32, Engine.Core.SceneManagement.SceneType)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 6742
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.SceneManagement
  syntax:
    content: public Scene(int sceneId, SceneType type)
    parameters:
    - id: sceneId
      type: System.Int32
    - id: type
      type: Engine.Core.SceneManagement.SceneType
    content.vb: Public Sub New(sceneId As Integer, type As SceneType)
  overload: Engine.Core.SceneManagement.Scene.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.SceneManagement.Scene.GetGlobalCoordinateSystem(GCS3@)
  commentId: M:Engine.Core.SceneManagement.Scene.GetGlobalCoordinateSystem(GCS3@)
  id: GetGlobalCoordinateSystem(GCS3@)
  parent: Engine.Core.SceneManagement.Scene
  langs:
  - csharp
  - vb
  name: GetGlobalCoordinateSystem(out GCS3)
  nameWithType: Scene.GetGlobalCoordinateSystem(out GCS3)
  fullName: Engine.Core.SceneManagement.Scene.GetGlobalCoordinateSystem(out GCS3)
  type: Method
  source:
    id: GetGlobalCoordinateSystem
    path: ''
    startLine: 6754
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.SceneManagement
  summary: "\nGets the scene&apos;s global coordinate system.\nTODO: Overload method for GCS2\n"
  example: []
  syntax:
    content: public bool GetGlobalCoordinateSystem(out GCS3 gcs)
    parameters:
    - id: gcs
      type: GCS3
    return:
      type: System.Boolean
      description: Returns wether there is GCS3 or not
    content.vb: Public Function GetGlobalCoordinateSystem(ByRef gcs As GCS3) As Boolean
  overload: Engine.Core.SceneManagement.Scene.GetGlobalCoordinateSystem*
  nameWithType.vb: Scene.GetGlobalCoordinateSystem(ByRef GCS3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.SceneManagement.Scene.GetGlobalCoordinateSystem(ByRef GCS3)
  name.vb: GetGlobalCoordinateSystem(ByRef GCS3)
references:
- uid: Engine.Core.SceneManagement
  commentId: N:Engine.Core.SceneManagement
  name: Engine.Core.SceneManagement
  nameWithType: Engine.Core.SceneManagement
  fullName: Engine.Core.SceneManagement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Engine.Core.SceneManagement.Scene.SceneId*
  commentId: Overload:Engine.Core.SceneManagement.Scene.SceneId
  name: SceneId
  nameWithType: Scene.SceneId
  fullName: Engine.Core.SceneManagement.Scene.SceneId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Engine.Core.SceneManagement.Scene.Type*
  commentId: Overload:Engine.Core.SceneManagement.Scene.Type
  name: Type
  nameWithType: Scene.Type
  fullName: Engine.Core.SceneManagement.Scene.Type
- uid: Engine.Core.SceneManagement.SceneType
  commentId: T:Engine.Core.SceneManagement.SceneType
  parent: Engine.Core.SceneManagement
  name: SceneType
  nameWithType: SceneType
  fullName: Engine.Core.SceneManagement.SceneType
- uid: Engine.Core.SceneManagement.Scene.#ctor*
  commentId: Overload:Engine.Core.SceneManagement.Scene.#ctor
  name: Scene
  nameWithType: Scene.Scene
  fullName: Engine.Core.SceneManagement.Scene.Scene
- uid: Engine.Core.SceneManagement.Scene.GetGlobalCoordinateSystem*
  commentId: Overload:Engine.Core.SceneManagement.Scene.GetGlobalCoordinateSystem
  name: GetGlobalCoordinateSystem
  nameWithType: Scene.GetGlobalCoordinateSystem
  fullName: Engine.Core.SceneManagement.Scene.GetGlobalCoordinateSystem
- uid: GCS3
  isExternal: true
  name: GCS3
  nameWithType: GCS3
  fullName: GCS3
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
