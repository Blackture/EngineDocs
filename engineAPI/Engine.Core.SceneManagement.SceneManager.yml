### YamlMime:ManagedReference
items:
- uid: Engine.Core.SceneManagement.SceneManager
  commentId: T:Engine.Core.SceneManagement.SceneManager
  id: SceneManager
  parent: Engine.Core.SceneManagement
  children:
  - Engine.Core.SceneManagement.SceneManager.#ctor
  - Engine.Core.SceneManagement.SceneManager.ActiveScene
  - Engine.Core.SceneManagement.SceneManager.AddScene(Engine.Core.SceneManagement.Scene)
  - Engine.Core.SceneManagement.SceneManager.Instance
  langs:
  - csharp
  - vb
  name: SceneManager
  nameWithType: SceneManager
  fullName: Engine.Core.SceneManagement.SceneManager
  type: Class
  source:
    id: SceneManager
    path: ''
    startLine: 5506
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.SceneManagement
  syntax:
    content: public class SceneManager
    content.vb: Public Class SceneManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.SceneManagement.SceneManager.Instance
  commentId: F:Engine.Core.SceneManagement.SceneManager.Instance
  id: Instance
  parent: Engine.Core.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: SceneManager.Instance
  fullName: Engine.Core.SceneManagement.SceneManager.Instance
  type: Field
  source:
    id: Instance
    path: ''
    startLine: 5508
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.SceneManagement
  syntax:
    content: public static SceneManager Instance
    return:
      type: Engine.Core.SceneManagement.SceneManager
    content.vb: Public Shared Instance As SceneManager
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.SceneManagement.SceneManager.ActiveScene
  commentId: F:Engine.Core.SceneManagement.SceneManager.ActiveScene
  id: ActiveScene
  parent: Engine.Core.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: ActiveScene
  nameWithType: SceneManager.ActiveScene
  fullName: Engine.Core.SceneManagement.SceneManager.ActiveScene
  type: Field
  source:
    id: ActiveScene
    path: ''
    startLine: 5510
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.SceneManagement
  syntax:
    content: public Scene ActiveScene
    return:
      type: Engine.Core.SceneManagement.Scene
    content.vb: Public ActiveScene As Scene
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.SceneManagement.SceneManager.#ctor
  commentId: M:Engine.Core.SceneManagement.SceneManager.#ctor
  id: '#ctor'
  parent: Engine.Core.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: SceneManager()
  nameWithType: SceneManager.SceneManager()
  fullName: Engine.Core.SceneManagement.SceneManager.SceneManager()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 5512
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.SceneManagement
  syntax:
    content: public SceneManager()
    content.vb: Public Sub New
  overload: Engine.Core.SceneManagement.SceneManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.SceneManagement.SceneManager.AddScene(Engine.Core.SceneManagement.Scene)
  commentId: M:Engine.Core.SceneManagement.SceneManager.AddScene(Engine.Core.SceneManagement.Scene)
  id: AddScene(Engine.Core.SceneManagement.Scene)
  parent: Engine.Core.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: AddScene(Scene)
  nameWithType: SceneManager.AddScene(Scene)
  fullName: Engine.Core.SceneManagement.SceneManager.AddScene(Engine.Core.SceneManagement.Scene)
  type: Method
  source:
    id: AddScene
    path: ''
    startLine: 5518
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.SceneManagement
  syntax:
    content: public void AddScene(Scene scene)
    parameters:
    - id: scene
      type: Engine.Core.SceneManagement.Scene
    content.vb: Public Sub AddScene(scene As Scene)
  overload: Engine.Core.SceneManagement.SceneManager.AddScene*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Engine.Core.SceneManagement
  commentId: N:Engine.Core.SceneManagement
  name: Engine.Core.SceneManagement
  nameWithType: Engine.Core.SceneManagement
  fullName: Engine.Core.SceneManagement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Core.SceneManagement.SceneManager
  commentId: T:Engine.Core.SceneManagement.SceneManager
  parent: Engine.Core.SceneManagement
  name: SceneManager
  nameWithType: SceneManager
  fullName: Engine.Core.SceneManagement.SceneManager
- uid: Engine.Core.SceneManagement.Scene
  commentId: T:Engine.Core.SceneManagement.Scene
  parent: Engine.Core.SceneManagement
  name: Scene
  nameWithType: Scene
  fullName: Engine.Core.SceneManagement.Scene
- uid: Engine.Core.SceneManagement.SceneManager.#ctor*
  commentId: Overload:Engine.Core.SceneManagement.SceneManager.#ctor
  name: SceneManager
  nameWithType: SceneManager.SceneManager
  fullName: Engine.Core.SceneManagement.SceneManager.SceneManager
- uid: Engine.Core.SceneManagement.SceneManager.AddScene*
  commentId: Overload:Engine.Core.SceneManagement.SceneManager.AddScene
  name: AddScene
  nameWithType: SceneManager.AddScene
  fullName: Engine.Core.SceneManagement.SceneManager.AddScene
