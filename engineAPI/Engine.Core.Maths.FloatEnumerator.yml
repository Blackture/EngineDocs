### YamlMime:ManagedReference
items:
- uid: Engine.Core.Maths.FloatEnumerator
  commentId: T:Engine.Core.Maths.FloatEnumerator
  id: FloatEnumerator
  parent: Engine.Core.Maths
  children:
  - Engine.Core.Maths.FloatEnumerator.#ctor(System.Single[])
  - Engine.Core.Maths.FloatEnumerator.Current
  - Engine.Core.Maths.FloatEnumerator.Dispose
  - Engine.Core.Maths.FloatEnumerator.Dispose(System.Boolean)
  - Engine.Core.Maths.FloatEnumerator.Finalize
  - Engine.Core.Maths.FloatEnumerator.MoveNext
  - Engine.Core.Maths.FloatEnumerator.Reset
  langs:
  - csharp
  - vb
  name: FloatEnumerator
  nameWithType: FloatEnumerator
  fullName: Engine.Core.Maths.FloatEnumerator
  type: Class
  source:
    id: FloatEnumerator
    path: ''
    startLine: 1446
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: 'public class FloatEnumerator : IEnumerator<float>, IEnumerator, IDisposable'
    content.vb: >-
      Public Class FloatEnumerator
          Implements IEnumerator(Of Single), IEnumerator, IDisposable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerator{System.Single}
  - System.Collections.IEnumerator
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.Maths.FloatEnumerator.Current
  commentId: P:Engine.Core.Maths.FloatEnumerator.Current
  id: Current
  parent: Engine.Core.Maths.FloatEnumerator
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: FloatEnumerator.Current
  fullName: Engine.Core.Maths.FloatEnumerator.Current
  type: Property
  source:
    id: Current
    path: ''
    startLine: 1452
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public float Current { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Current As Single
  overload: Engine.Core.Maths.FloatEnumerator.Current*
  implements:
  - System.Collections.Generic.IEnumerator{System.Single}.Current
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Maths.FloatEnumerator.#ctor(System.Single[])
  commentId: M:Engine.Core.Maths.FloatEnumerator.#ctor(System.Single[])
  id: '#ctor(System.Single[])'
  parent: Engine.Core.Maths.FloatEnumerator
  langs:
  - csharp
  - vb
  name: FloatEnumerator(Single[])
  nameWithType: FloatEnumerator.FloatEnumerator(Single[])
  fullName: Engine.Core.Maths.FloatEnumerator.FloatEnumerator(System.Single[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1469
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public FloatEnumerator(float[] data)
    parameters:
    - id: data
      type: System.Single[]
    content.vb: Public Sub New(data As Single())
  overload: Engine.Core.Maths.FloatEnumerator.#ctor*
  nameWithType.vb: FloatEnumerator.FloatEnumerator(Single())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Maths.FloatEnumerator.FloatEnumerator(System.Single())
  name.vb: FloatEnumerator(Single())
- uid: Engine.Core.Maths.FloatEnumerator.MoveNext
  commentId: M:Engine.Core.Maths.FloatEnumerator.MoveNext
  id: MoveNext
  parent: Engine.Core.Maths.FloatEnumerator
  langs:
  - csharp
  - vb
  name: MoveNext()
  nameWithType: FloatEnumerator.MoveNext()
  fullName: Engine.Core.Maths.FloatEnumerator.MoveNext()
  type: Method
  source:
    id: MoveNext
    path: ''
    startLine: 1474
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public bool MoveNext()
    return:
      type: System.Boolean
    content.vb: Public Function MoveNext As Boolean
  overload: Engine.Core.Maths.FloatEnumerator.MoveNext*
  implements:
  - System.Collections.IEnumerator.MoveNext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.FloatEnumerator.Reset
  commentId: M:Engine.Core.Maths.FloatEnumerator.Reset
  id: Reset
  parent: Engine.Core.Maths.FloatEnumerator
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: FloatEnumerator.Reset()
  fullName: Engine.Core.Maths.FloatEnumerator.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 1480
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: Engine.Core.Maths.FloatEnumerator.Reset*
  implements:
  - System.Collections.IEnumerator.Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.FloatEnumerator.Dispose(System.Boolean)
  commentId: M:Engine.Core.Maths.FloatEnumerator.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Engine.Core.Maths.FloatEnumerator
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: FloatEnumerator.Dispose(Boolean)
  fullName: Engine.Core.Maths.FloatEnumerator.Dispose(System.Boolean)
  type: Method
  source:
    id: Dispose
    path: ''
    startLine: 1486
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Engine.Core.Maths.FloatEnumerator.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Engine.Core.Maths.FloatEnumerator.Dispose
  commentId: M:Engine.Core.Maths.FloatEnumerator.Dispose
  id: Dispose
  parent: Engine.Core.Maths.FloatEnumerator
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: FloatEnumerator.Dispose()
  fullName: Engine.Core.Maths.FloatEnumerator.Dispose()
  type: Method
  source:
    id: Dispose
    path: ''
    startLine: 1502
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Engine.Core.Maths.FloatEnumerator.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.FloatEnumerator.Finalize
  commentId: M:Engine.Core.Maths.FloatEnumerator.Finalize
  id: Finalize
  parent: Engine.Core.Maths.FloatEnumerator
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: FloatEnumerator.Finalize()
  fullName: Engine.Core.Maths.FloatEnumerator.Finalize()
  type: Method
  source:
    id: Finalize
    path: ''
    startLine: 1509
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Engine.Core.Maths.FloatEnumerator.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Engine.Core.Maths
  commentId: N:Engine.Core.Maths
  name: Engine.Core.Maths
  nameWithType: Engine.Core.Maths
  fullName: Engine.Core.Maths
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerator{System.Single}
  commentId: T:System.Collections.Generic.IEnumerator{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<Single>
  nameWithType: IEnumerator<Single>
  fullName: System.Collections.Generic.IEnumerator<System.Single>
  nameWithType.vb: IEnumerator(Of Single)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Single)
  name.vb: IEnumerator(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Engine.Core.Maths.FloatEnumerator.Current*
  commentId: Overload:Engine.Core.Maths.FloatEnumerator.Current
  name: Current
  nameWithType: FloatEnumerator.Current
  fullName: Engine.Core.Maths.FloatEnumerator.Current
- uid: System.Collections.Generic.IEnumerator{System.Single}.Current
  commentId: P:System.Collections.Generic.IEnumerator{System.Single}.Current
  parent: System.Collections.Generic.IEnumerator{System.Single}
  definition: System.Collections.Generic.IEnumerator`1.Current
  name: Current
  nameWithType: IEnumerator<Single>.Current
  fullName: System.Collections.Generic.IEnumerator<System.Single>.Current
  nameWithType.vb: IEnumerator(Of Single).Current
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Single).Current
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Collections.Generic.IEnumerator`1.Current
  commentId: P:System.Collections.Generic.IEnumerator`1.Current
  isExternal: true
  name: Current
  nameWithType: IEnumerator<T>.Current
  fullName: System.Collections.Generic.IEnumerator<T>.Current
  nameWithType.vb: IEnumerator(Of T).Current
  fullName.vb: System.Collections.Generic.IEnumerator(Of T).Current
- uid: Engine.Core.Maths.FloatEnumerator.#ctor*
  commentId: Overload:Engine.Core.Maths.FloatEnumerator.#ctor
  name: FloatEnumerator
  nameWithType: FloatEnumerator.FloatEnumerator
  fullName: Engine.Core.Maths.FloatEnumerator.FloatEnumerator
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Engine.Core.Maths.FloatEnumerator.MoveNext*
  commentId: Overload:Engine.Core.Maths.FloatEnumerator.MoveNext
  name: MoveNext
  nameWithType: FloatEnumerator.MoveNext
  fullName: Engine.Core.Maths.FloatEnumerator.MoveNext
- uid: System.Collections.IEnumerator.MoveNext
  commentId: M:System.Collections.IEnumerator.MoveNext
  parent: System.Collections.IEnumerator
  isExternal: true
  name: MoveNext()
  nameWithType: IEnumerator.MoveNext()
  fullName: System.Collections.IEnumerator.MoveNext()
  spec.csharp:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Engine.Core.Maths.FloatEnumerator.Reset*
  commentId: Overload:Engine.Core.Maths.FloatEnumerator.Reset
  name: Reset
  nameWithType: FloatEnumerator.Reset
  fullName: Engine.Core.Maths.FloatEnumerator.Reset
- uid: System.Collections.IEnumerator.Reset
  commentId: M:System.Collections.IEnumerator.Reset
  parent: System.Collections.IEnumerator
  isExternal: true
  name: Reset()
  nameWithType: IEnumerator.Reset()
  fullName: System.Collections.IEnumerator.Reset()
  spec.csharp:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.Maths.FloatEnumerator.Dispose*
  commentId: Overload:Engine.Core.Maths.FloatEnumerator.Dispose
  name: Dispose
  nameWithType: FloatEnumerator.Dispose
  fullName: Engine.Core.Maths.FloatEnumerator.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.Maths.FloatEnumerator.Finalize*
  commentId: Overload:Engine.Core.Maths.FloatEnumerator.Finalize
  name: Finalize
  nameWithType: FloatEnumerator.Finalize
  fullName: Engine.Core.Maths.FloatEnumerator.Finalize
