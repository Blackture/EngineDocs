### YamlMime:ManagedReference
items:
- uid: Engine.Core.Physics.Optics.Lens
  commentId: T:Engine.Core.Physics.Optics.Lens
  id: Lens
  parent: Engine.Core.Physics.Optics
  children:
  - Engine.Core.Physics.Optics.Lens.#ctor
  - Engine.Core.Physics.Optics.Lens.CreateRay(System.Single,System.Single,Camera,System.Single@)
  - Engine.Core.Physics.Optics.Lens.FovX
  - Engine.Core.Physics.Optics.Lens.FovXRad
  - Engine.Core.Physics.Optics.Lens.FovY
  - Engine.Core.Physics.Optics.Lens.FovYRad
  - Engine.Core.Physics.Optics.Lens.Type
  langs:
  - csharp
  - vb
  name: Lens
  nameWithType: Lens
  fullName: Engine.Core.Physics.Optics.Lens
  type: Class
  source:
    id: Lens
    path: ''
    startLine: 5349
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Physics.Optics
  syntax:
    content: public class Lens
    content.vb: Public Class Lens
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.Physics.Optics.Lens.Type
  commentId: P:Engine.Core.Physics.Optics.Lens.Type
  id: Type
  parent: Engine.Core.Physics.Optics.Lens
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Lens.Type
  fullName: Engine.Core.Physics.Optics.Lens.Type
  type: Property
  source:
    id: Type
    path: ''
    startLine: 5361
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Physics.Optics
  syntax:
    content: public LensType Type { get; }
    parameters: []
    return:
      type: Engine.Core.Physics.Optics.LensType
    content.vb: Public ReadOnly Property Type As LensType
  overload: Engine.Core.Physics.Optics.Lens.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Physics.Optics.Lens.FovX
  commentId: P:Engine.Core.Physics.Optics.Lens.FovX
  id: FovX
  parent: Engine.Core.Physics.Optics.Lens
  langs:
  - csharp
  - vb
  name: FovX
  nameWithType: Lens.FovX
  fullName: Engine.Core.Physics.Optics.Lens.FovX
  type: Property
  source:
    id: FovX
    path: ''
    startLine: 5362
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Physics.Optics
  syntax:
    content: public float FovX { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property FovX As Single
  overload: Engine.Core.Physics.Optics.Lens.FovX*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Physics.Optics.Lens.FovY
  commentId: P:Engine.Core.Physics.Optics.Lens.FovY
  id: FovY
  parent: Engine.Core.Physics.Optics.Lens
  langs:
  - csharp
  - vb
  name: FovY
  nameWithType: Lens.FovY
  fullName: Engine.Core.Physics.Optics.Lens.FovY
  type: Property
  source:
    id: FovY
    path: ''
    startLine: 5363
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Physics.Optics
  syntax:
    content: public float FovY { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property FovY As Single
  overload: Engine.Core.Physics.Optics.Lens.FovY*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Physics.Optics.Lens.FovXRad
  commentId: P:Engine.Core.Physics.Optics.Lens.FovXRad
  id: FovXRad
  parent: Engine.Core.Physics.Optics.Lens
  langs:
  - csharp
  - vb
  name: FovXRad
  nameWithType: Lens.FovXRad
  fullName: Engine.Core.Physics.Optics.Lens.FovXRad
  type: Property
  source:
    id: FovXRad
    path: ''
    startLine: 5364
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Physics.Optics
  syntax:
    content: public float FovXRad { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property FovXRad As Single
  overload: Engine.Core.Physics.Optics.Lens.FovXRad*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Physics.Optics.Lens.FovYRad
  commentId: P:Engine.Core.Physics.Optics.Lens.FovYRad
  id: FovYRad
  parent: Engine.Core.Physics.Optics.Lens
  langs:
  - csharp
  - vb
  name: FovYRad
  nameWithType: Lens.FovYRad
  fullName: Engine.Core.Physics.Optics.Lens.FovYRad
  type: Property
  source:
    id: FovYRad
    path: ''
    startLine: 5365
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Physics.Optics
  syntax:
    content: public float FovYRad { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property FovYRad As Single
  overload: Engine.Core.Physics.Optics.Lens.FovYRad*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Physics.Optics.Lens.#ctor
  commentId: M:Engine.Core.Physics.Optics.Lens.#ctor
  id: '#ctor'
  parent: Engine.Core.Physics.Optics.Lens
  langs:
  - csharp
  - vb
  name: Lens()
  nameWithType: Lens.Lens()
  fullName: Engine.Core.Physics.Optics.Lens.Lens()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 5367
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Physics.Optics
  syntax:
    content: public Lens()
    content.vb: Public Sub New
  overload: Engine.Core.Physics.Optics.Lens.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Physics.Optics.Lens.CreateRay(System.Single,System.Single,Camera,System.Single@)
  commentId: M:Engine.Core.Physics.Optics.Lens.CreateRay(System.Single,System.Single,Camera,System.Single@)
  id: CreateRay(System.Single,System.Single,Camera,System.Single@)
  parent: Engine.Core.Physics.Optics.Lens
  langs:
  - csharp
  - vb
  name: CreateRay(Single, Single, Camera, out Single)
  nameWithType: Lens.CreateRay(Single, Single, Camera, out Single)
  fullName: Engine.Core.Physics.Optics.Lens.CreateRay(System.Single, System.Single, Camera, out System.Single)
  type: Method
  source:
    id: CreateRay
    path: ''
    startLine: 5384
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Physics.Optics
  summary: "\nCreates the ray from the image plane to the near plane, and outputs a float &quot;r&quot; defined for when the ray hits the nearplane.\n"
  example: []
  syntax:
    content: public Straight CreateRay(float s, float t, Camera cam, out float r)
    parameters:
    - id: s
      type: System.Single
      description: ''
    - id: t
      type: System.Single
      description: ''
    - id: cam
      type: Camera
      description: ''
    - id: r
      type: System.Single
      description: ''
    return:
      type: Straight
      description: ''
    content.vb: Public Function CreateRay(s As Single, t As Single, cam As Camera, ByRef r As Single) As Straight
  overload: Engine.Core.Physics.Optics.Lens.CreateRay*
  nameWithType.vb: Lens.CreateRay(Single, Single, Camera, ByRef Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Physics.Optics.Lens.CreateRay(System.Single, System.Single, Camera, ByRef System.Single)
  name.vb: CreateRay(Single, Single, Camera, ByRef Single)
references:
- uid: Engine.Core.Physics.Optics
  commentId: N:Engine.Core.Physics.Optics
  name: Engine.Core.Physics.Optics
  nameWithType: Engine.Core.Physics.Optics
  fullName: Engine.Core.Physics.Optics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Core.Physics.Optics.Lens.Type*
  commentId: Overload:Engine.Core.Physics.Optics.Lens.Type
  name: Type
  nameWithType: Lens.Type
  fullName: Engine.Core.Physics.Optics.Lens.Type
- uid: Engine.Core.Physics.Optics.LensType
  commentId: T:Engine.Core.Physics.Optics.LensType
  parent: Engine.Core.Physics.Optics
  name: LensType
  nameWithType: LensType
  fullName: Engine.Core.Physics.Optics.LensType
- uid: Engine.Core.Physics.Optics.Lens.FovX*
  commentId: Overload:Engine.Core.Physics.Optics.Lens.FovX
  name: FovX
  nameWithType: Lens.FovX
  fullName: Engine.Core.Physics.Optics.Lens.FovX
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Engine.Core.Physics.Optics.Lens.FovY*
  commentId: Overload:Engine.Core.Physics.Optics.Lens.FovY
  name: FovY
  nameWithType: Lens.FovY
  fullName: Engine.Core.Physics.Optics.Lens.FovY
- uid: Engine.Core.Physics.Optics.Lens.FovXRad*
  commentId: Overload:Engine.Core.Physics.Optics.Lens.FovXRad
  name: FovXRad
  nameWithType: Lens.FovXRad
  fullName: Engine.Core.Physics.Optics.Lens.FovXRad
- uid: Engine.Core.Physics.Optics.Lens.FovYRad*
  commentId: Overload:Engine.Core.Physics.Optics.Lens.FovYRad
  name: FovYRad
  nameWithType: Lens.FovYRad
  fullName: Engine.Core.Physics.Optics.Lens.FovYRad
- uid: Engine.Core.Physics.Optics.Lens.#ctor*
  commentId: Overload:Engine.Core.Physics.Optics.Lens.#ctor
  name: Lens
  nameWithType: Lens.Lens
  fullName: Engine.Core.Physics.Optics.Lens.Lens
- uid: Engine.Core.Physics.Optics.Lens.CreateRay*
  commentId: Overload:Engine.Core.Physics.Optics.Lens.CreateRay
  name: CreateRay
  nameWithType: Lens.CreateRay
  fullName: Engine.Core.Physics.Optics.Lens.CreateRay
- uid: Camera
  isExternal: true
  name: Camera
  nameWithType: Camera
  fullName: Camera
- uid: Straight
  isExternal: true
  name: Straight
  nameWithType: Straight
  fullName: Straight
