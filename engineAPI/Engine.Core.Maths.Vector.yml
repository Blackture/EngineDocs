### YamlMime:ManagedReference
items:
- uid: Engine.Core.Maths.Vector
  commentId: T:Engine.Core.Maths.Vector
  id: Vector
  parent: Engine.Core.Maths
  children:
  - Engine.Core.Maths.Vector.#ctor(Engine.Core.Maths.Vector)
  - Engine.Core.Maths.Vector.#ctor(System.Collections.Generic.List{System.Single})
  - Engine.Core.Maths.Vector.#ctor(System.Single[])
  - Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector)
  - Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  - Engine.Core.Maths.Vector.AddValue(System.Single)
  - Engine.Core.Maths.Vector.Cross(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  - Engine.Core.Maths.Vector.CrossProduct(Engine.Core.Maths.Vector)
  - Engine.Core.Maths.Vector.Dimension
  - Engine.Core.Maths.Vector.Division(Engine.Core.Maths.Vector,System.Single)
  - Engine.Core.Maths.Vector.Division(System.Single)
  - Engine.Core.Maths.Vector.Dot(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  - Engine.Core.Maths.Vector.DotProduct(Engine.Core.Maths.Vector)
  - Engine.Core.Maths.Vector.GetEnumerator
  - Engine.Core.Maths.Vector.GetLength
  - Engine.Core.Maths.Vector.GetValue(System.Int32)
  - Engine.Core.Maths.Vector.IsDimensionEqual(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  - Engine.Core.Maths.Vector.Item(System.Int32)
  - Engine.Core.Maths.Vector.Length
  - Engine.Core.Maths.Vector.LengthSquared
  - Engine.Core.Maths.Vector.Normalize
  - Engine.Core.Maths.Vector.Normalized
  - Engine.Core.Maths.Vector.op_Addition(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  - Engine.Core.Maths.Vector.op_Division(Engine.Core.Maths.Vector,System.Single)
  - Engine.Core.Maths.Vector.op_Multiply(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  - Engine.Core.Maths.Vector.op_Multiply(Engine.Core.Maths.Vector,System.Single)
  - Engine.Core.Maths.Vector.op_Multiply(System.Single,Engine.Core.Maths.Vector)
  - Engine.Core.Maths.Vector.op_Subtraction(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  - Engine.Core.Maths.Vector.Scalar(Engine.Core.Maths.Vector,System.Single)
  - Engine.Core.Maths.Vector.ScalarProduct(System.Single)
  - Engine.Core.Maths.Vector.SetValue(System.Single,System.Int32)
  - Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector)
  - Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  - Engine.Core.Maths.Vector.ToMatrix(Engine.Core.Maths.Vector,System.Boolean)
  langs:
  - csharp
  - vb
  name: Vector
  nameWithType: Vector
  fullName: Engine.Core.Maths.Vector
  type: Class
  source:
    id: Vector
    path: ''
    startLine: 4191
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  summary: "\nA vector with n dimensions\n"
  example: []
  syntax:
    content: 'public class Vector : IEnumerable<float>, IEnumerable'
    content.vb: >-
      Public Class Vector
          Implements IEnumerable(Of Single), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{System.Single}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.Maths.Vector.Item(System.Int32)
  commentId: P:Engine.Core.Maths.Vector.Item(System.Int32)
  id: Item(System.Int32)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Vector.Item[Int32]
  fullName: Engine.Core.Maths.Vector.Item[System.Int32]
  type: Property
  source:
    id: this[]
    path: ''
    startLine: 4201
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public float this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Property Item(index As Integer) As Single
  overload: Engine.Core.Maths.Vector.Item*
  nameWithType.vb: Vector.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Maths.Vector.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Engine.Core.Maths.Vector.Length
  commentId: P:Engine.Core.Maths.Vector.Length
  id: Length
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Vector.Length
  fullName: Engine.Core.Maths.Vector.Length
  type: Property
  source:
    id: Length
    path: ''
    startLine: 4206
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public float Length { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Length As Single
  overload: Engine.Core.Maths.Vector.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Maths.Vector.Dimension
  commentId: P:Engine.Core.Maths.Vector.Dimension
  id: Dimension
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Dimension
  nameWithType: Vector.Dimension
  fullName: Engine.Core.Maths.Vector.Dimension
  type: Property
  source:
    id: Dimension
    path: ''
    startLine: 4207
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public int Dimension { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Dimension As Integer
  overload: Engine.Core.Maths.Vector.Dimension*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Maths.Vector.LengthSquared
  commentId: P:Engine.Core.Maths.Vector.LengthSquared
  id: LengthSquared
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: Vector.LengthSquared
  fullName: Engine.Core.Maths.Vector.LengthSquared
  type: Property
  source:
    id: LengthSquared
    path: ''
    startLine: 4208
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public float LengthSquared { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property LengthSquared As Single
  overload: Engine.Core.Maths.Vector.LengthSquared*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Maths.Vector.Normalized
  commentId: P:Engine.Core.Maths.Vector.Normalized
  id: Normalized
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Normalized
  nameWithType: Vector.Normalized
  fullName: Engine.Core.Maths.Vector.Normalized
  type: Property
  source:
    id: Normalized
    path: ''
    startLine: 4209
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Vector Normalized { get; }
    parameters: []
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public ReadOnly Property Normalized As Vector
  overload: Engine.Core.Maths.Vector.Normalized*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Maths.Vector.#ctor(System.Collections.Generic.List{System.Single})
  commentId: M:Engine.Core.Maths.Vector.#ctor(System.Collections.Generic.List{System.Single})
  id: '#ctor(System.Collections.Generic.List{System.Single})'
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Vector(List<Single>)
  nameWithType: Vector.Vector(List<Single>)
  fullName: Engine.Core.Maths.Vector.Vector(System.Collections.Generic.List<System.Single>)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 4211
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Vector(List<float> values)
    parameters:
    - id: values
      type: System.Collections.Generic.List{System.Single}
    content.vb: Public Sub New(values As List(Of Single))
  overload: Engine.Core.Maths.Vector.#ctor*
  nameWithType.vb: Vector.Vector(List(Of Single))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Maths.Vector.Vector(System.Collections.Generic.List(Of System.Single))
  name.vb: Vector(List(Of Single))
- uid: Engine.Core.Maths.Vector.#ctor(System.Single[])
  commentId: M:Engine.Core.Maths.Vector.#ctor(System.Single[])
  id: '#ctor(System.Single[])'
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Vector(Single[])
  nameWithType: Vector.Vector(Single[])
  fullName: Engine.Core.Maths.Vector.Vector(System.Single[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 4215
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Vector(params float[] values)
    parameters:
    - id: values
      type: System.Single[]
    content.vb: Public Sub New(ParamArray values As Single())
  overload: Engine.Core.Maths.Vector.#ctor*
  nameWithType.vb: Vector.Vector(Single())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Maths.Vector.Vector(System.Single())
  name.vb: Vector(Single())
- uid: Engine.Core.Maths.Vector.#ctor(Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.Vector.#ctor(Engine.Core.Maths.Vector)
  id: '#ctor(Engine.Core.Maths.Vector)'
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Vector(Vector)
  nameWithType: Vector.Vector(Vector)
  fullName: Engine.Core.Maths.Vector.Vector(Engine.Core.Maths.Vector)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 4220
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Vector(Vector v)
    parameters:
    - id: v
      type: Engine.Core.Maths.Vector
    content.vb: Public Sub New(v As Vector)
  overload: Engine.Core.Maths.Vector.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Vector.Normalize
  commentId: M:Engine.Core.Maths.Vector.Normalize
  id: Normalize
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Vector.Normalize()
  fullName: Engine.Core.Maths.Vector.Normalize()
  type: Method
  source:
    id: Normalize
    path: ''
    startLine: 4241
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Vector Normalize()
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Function Normalize As Vector
  overload: Engine.Core.Maths.Vector.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Vector.GetLength
  commentId: M:Engine.Core.Maths.Vector.GetLength
  id: GetLength
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: GetLength()
  nameWithType: Vector.GetLength()
  fullName: Engine.Core.Maths.Vector.GetLength()
  type: Method
  source:
    id: GetLength
    path: ''
    startLine: 4263
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public float GetLength()
    return:
      type: System.Single
    content.vb: Public Function GetLength As Single
  overload: Engine.Core.Maths.Vector.GetLength*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Vector.IsDimensionEqual(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.Vector.IsDimensionEqual(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  id: IsDimensionEqual(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: IsDimensionEqual(Vector, Vector)
  nameWithType: Vector.IsDimensionEqual(Vector, Vector)
  fullName: Engine.Core.Maths.Vector.IsDimensionEqual(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
  type: Method
  source:
    id: IsDimensionEqual
    path: ''
    startLine: 4284
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public bool IsDimensionEqual(Vector a, Vector b)
    parameters:
    - id: a
      type: Engine.Core.Maths.Vector
    - id: b
      type: Engine.Core.Maths.Vector
    return:
      type: System.Boolean
    content.vb: Public Function IsDimensionEqual(a As Vector, b As Vector) As Boolean
  overload: Engine.Core.Maths.Vector.IsDimensionEqual*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Vector.SetValue(System.Single,System.Int32)
  commentId: M:Engine.Core.Maths.Vector.SetValue(System.Single,System.Int32)
  id: SetValue(System.Single,System.Int32)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: SetValue(Single, Int32)
  nameWithType: Vector.SetValue(Single, Int32)
  fullName: Engine.Core.Maths.Vector.SetValue(System.Single, System.Int32)
  type: Method
  source:
    id: SetValue
    path: ''
    startLine: 4287
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public void SetValue(float value, int index)
    parameters:
    - id: value
      type: System.Single
    - id: index
      type: System.Int32
    content.vb: Public Sub SetValue(value As Single, index As Integer)
  overload: Engine.Core.Maths.Vector.SetValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Vector.GetValue(System.Int32)
  commentId: M:Engine.Core.Maths.Vector.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: GetValue(Int32)
  nameWithType: Vector.GetValue(Int32)
  fullName: Engine.Core.Maths.Vector.GetValue(System.Int32)
  type: Method
  source:
    id: GetValue
    path: ''
    startLine: 4295
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public float GetValue(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Function GetValue(index As Integer) As Single
  overload: Engine.Core.Maths.Vector.GetValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Vector.AddValue(System.Single)
  commentId: M:Engine.Core.Maths.Vector.AddValue(System.Single)
  id: AddValue(System.Single)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: AddValue(Single)
  nameWithType: Vector.AddValue(Single)
  fullName: Engine.Core.Maths.Vector.AddValue(System.Single)
  type: Method
  source:
    id: AddValue
    path: ''
    startLine: 4307
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  summary: "\nAdds a dimension to the vector and adds the given value.\n"
  example: []
  syntax:
    content: public void AddValue(float value)
    parameters:
    - id: value
      type: System.Single
      description: ''
    content.vb: Public Sub AddValue(value As Single)
  overload: Engine.Core.Maths.Vector.AddValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Vector.DotProduct(Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.Vector.DotProduct(Engine.Core.Maths.Vector)
  id: DotProduct(Engine.Core.Maths.Vector)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: DotProduct(Vector)
  nameWithType: Vector.DotProduct(Vector)
  fullName: Engine.Core.Maths.Vector.DotProduct(Engine.Core.Maths.Vector)
  type: Method
  source:
    id: DotProduct
    path: ''
    startLine: 4314
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public float DotProduct(Vector vector)
    parameters:
    - id: vector
      type: Engine.Core.Maths.Vector
    return:
      type: System.Single
    content.vb: Public Function DotProduct(vector As Vector) As Single
  overload: Engine.Core.Maths.Vector.DotProduct*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Vector.ScalarProduct(System.Single)
  commentId: M:Engine.Core.Maths.Vector.ScalarProduct(System.Single)
  id: ScalarProduct(System.Single)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: ScalarProduct(Single)
  nameWithType: Vector.ScalarProduct(Single)
  fullName: Engine.Core.Maths.Vector.ScalarProduct(System.Single)
  type: Method
  source:
    id: ScalarProduct
    path: ''
    startLine: 4327
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Vector ScalarProduct(float scalar)
    parameters:
    - id: scalar
      type: System.Single
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Function ScalarProduct(scalar As Single) As Vector
  overload: Engine.Core.Maths.Vector.ScalarProduct*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Vector.CrossProduct(Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.Vector.CrossProduct(Engine.Core.Maths.Vector)
  id: CrossProduct(Engine.Core.Maths.Vector)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: CrossProduct(Vector)
  nameWithType: Vector.CrossProduct(Vector)
  fullName: Engine.Core.Maths.Vector.CrossProduct(Engine.Core.Maths.Vector)
  type: Method
  source:
    id: CrossProduct
    path: ''
    startLine: 4336
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Vector CrossProduct(Vector b)
    parameters:
    - id: b
      type: Engine.Core.Maths.Vector
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Function CrossProduct(b As Vector) As Vector
  overload: Engine.Core.Maths.Vector.CrossProduct*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector)
  id: Addition(Engine.Core.Maths.Vector)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Addition(Vector)
  nameWithType: Vector.Addition(Vector)
  fullName: Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector)
  type: Method
  source:
    id: Addition
    path: ''
    startLine: 4364
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Vector Addition(Vector vector)
    parameters:
    - id: vector
      type: Engine.Core.Maths.Vector
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Function Addition(vector As Vector) As Vector
  overload: Engine.Core.Maths.Vector.Addition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector)
  id: Substraction(Engine.Core.Maths.Vector)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Substraction(Vector)
  nameWithType: Vector.Substraction(Vector)
  fullName: Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector)
  type: Method
  source:
    id: Substraction
    path: ''
    startLine: 4377
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Vector Substraction(Vector vector)
    parameters:
    - id: vector
      type: Engine.Core.Maths.Vector
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Function Substraction(vector As Vector) As Vector
  overload: Engine.Core.Maths.Vector.Substraction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Vector.Division(System.Single)
  commentId: M:Engine.Core.Maths.Vector.Division(System.Single)
  id: Division(System.Single)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Division(Single)
  nameWithType: Vector.Division(Single)
  fullName: Engine.Core.Maths.Vector.Division(System.Single)
  type: Method
  source:
    id: Division
    path: ''
    startLine: 4390
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Vector Division(float scalar)
    parameters:
    - id: scalar
      type: System.Single
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Function Division(scalar As Single) As Vector
  overload: Engine.Core.Maths.Vector.Division*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Vector.Dot(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.Vector.Dot(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  id: Dot(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Dot(Vector, Vector)
  nameWithType: Vector.Dot(Vector, Vector)
  fullName: Engine.Core.Maths.Vector.Dot(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
  type: Method
  source:
    id: Dot
    path: ''
    startLine: 4400
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static float Dot(Vector a, Vector b)
    parameters:
    - id: a
      type: Engine.Core.Maths.Vector
    - id: b
      type: Engine.Core.Maths.Vector
    return:
      type: System.Single
    content.vb: Public Shared Function Dot(a As Vector, b As Vector) As Single
  overload: Engine.Core.Maths.Vector.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.Vector.Cross(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.Vector.Cross(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  id: Cross(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Cross(Vector, Vector)
  nameWithType: Vector.Cross(Vector, Vector)
  fullName: Engine.Core.Maths.Vector.Cross(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
  type: Method
  source:
    id: Cross
    path: ''
    startLine: 4404
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static Vector Cross(Vector a, Vector b)
    parameters:
    - id: a
      type: Engine.Core.Maths.Vector
    - id: b
      type: Engine.Core.Maths.Vector
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Shared Function Cross(a As Vector, b As Vector) As Vector
  overload: Engine.Core.Maths.Vector.Cross*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.Vector.Scalar(Engine.Core.Maths.Vector,System.Single)
  commentId: M:Engine.Core.Maths.Vector.Scalar(Engine.Core.Maths.Vector,System.Single)
  id: Scalar(Engine.Core.Maths.Vector,System.Single)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Scalar(Vector, Single)
  nameWithType: Vector.Scalar(Vector, Single)
  fullName: Engine.Core.Maths.Vector.Scalar(Engine.Core.Maths.Vector, System.Single)
  type: Method
  source:
    id: Scalar
    path: ''
    startLine: 4408
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static Vector Scalar(Vector a, float f)
    parameters:
    - id: a
      type: Engine.Core.Maths.Vector
    - id: f
      type: System.Single
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Shared Function Scalar(a As Vector, f As Single) As Vector
  overload: Engine.Core.Maths.Vector.Scalar*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  id: Addition(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Addition(Vector, Vector)
  nameWithType: Vector.Addition(Vector, Vector)
  fullName: Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
  type: Method
  source:
    id: Addition
    path: ''
    startLine: 4412
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static Vector Addition(Vector a, Vector b)
    parameters:
    - id: a
      type: Engine.Core.Maths.Vector
    - id: b
      type: Engine.Core.Maths.Vector
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Shared Function Addition(a As Vector, b As Vector) As Vector
  overload: Engine.Core.Maths.Vector.Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  id: Substraction(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Substraction(Vector, Vector)
  nameWithType: Vector.Substraction(Vector, Vector)
  fullName: Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
  type: Method
  source:
    id: Substraction
    path: ''
    startLine: 4416
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static Vector Substraction(Vector a, Vector b)
    parameters:
    - id: a
      type: Engine.Core.Maths.Vector
    - id: b
      type: Engine.Core.Maths.Vector
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Shared Function Substraction(a As Vector, b As Vector) As Vector
  overload: Engine.Core.Maths.Vector.Substraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.Vector.Division(Engine.Core.Maths.Vector,System.Single)
  commentId: M:Engine.Core.Maths.Vector.Division(Engine.Core.Maths.Vector,System.Single)
  id: Division(Engine.Core.Maths.Vector,System.Single)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Division(Vector, Single)
  nameWithType: Vector.Division(Vector, Single)
  fullName: Engine.Core.Maths.Vector.Division(Engine.Core.Maths.Vector, System.Single)
  type: Method
  source:
    id: Division
    path: ''
    startLine: 4420
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static Vector Division(Vector a, float f)
    parameters:
    - id: a
      type: Engine.Core.Maths.Vector
    - id: f
      type: System.Single
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Shared Function Division(a As Vector, f As Single) As Vector
  overload: Engine.Core.Maths.Vector.Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.Vector.op_Addition(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.Vector.op_Addition(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  id: op_Addition(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Addition(Vector, Vector)
  nameWithType: Vector.Addition(Vector, Vector)
  fullName: Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
  type: Operator
  source:
    id: op_Addition
    path: ''
    startLine: 4425
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static Vector operator +(Vector v1, Vector v2)
    parameters:
    - id: v1
      type: Engine.Core.Maths.Vector
    - id: v2
      type: Engine.Core.Maths.Vector
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Shared Operator +(v1 As Vector, v2 As Vector) As Vector
  overload: Engine.Core.Maths.Vector.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.Vector.op_Subtraction(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.Vector.op_Subtraction(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  id: op_Subtraction(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Subtraction(Vector, Vector)
  nameWithType: Vector.Subtraction(Vector, Vector)
  fullName: Engine.Core.Maths.Vector.Subtraction(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
  type: Operator
  source:
    id: op_Subtraction
    path: ''
    startLine: 4429
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static Vector operator -(Vector v1, Vector v2)
    parameters:
    - id: v1
      type: Engine.Core.Maths.Vector
    - id: v2
      type: Engine.Core.Maths.Vector
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Shared Operator -(v1 As Vector, v2 As Vector) As Vector
  overload: Engine.Core.Maths.Vector.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.Vector.op_Multiply(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.Vector.op_Multiply(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  id: op_Multiply(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Multiply(Vector, Vector)
  nameWithType: Vector.Multiply(Vector, Vector)
  fullName: Engine.Core.Maths.Vector.Multiply(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
  type: Operator
  source:
    id: op_Multiply
    path: ''
    startLine: 4433
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static float operator *(Vector v1, Vector v2)
    parameters:
    - id: v1
      type: Engine.Core.Maths.Vector
    - id: v2
      type: Engine.Core.Maths.Vector
    return:
      type: System.Single
    content.vb: Public Shared Operator *(v1 As Vector, v2 As Vector) As Single
  overload: Engine.Core.Maths.Vector.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.Vector.op_Multiply(Engine.Core.Maths.Vector,System.Single)
  commentId: M:Engine.Core.Maths.Vector.op_Multiply(Engine.Core.Maths.Vector,System.Single)
  id: op_Multiply(Engine.Core.Maths.Vector,System.Single)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Multiply(Vector, Single)
  nameWithType: Vector.Multiply(Vector, Single)
  fullName: Engine.Core.Maths.Vector.Multiply(Engine.Core.Maths.Vector, System.Single)
  type: Operator
  source:
    id: op_Multiply
    path: ''
    startLine: 4437
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static Vector operator *(Vector v1, float f)
    parameters:
    - id: v1
      type: Engine.Core.Maths.Vector
    - id: f
      type: System.Single
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Shared Operator *(v1 As Vector, f As Single) As Vector
  overload: Engine.Core.Maths.Vector.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.Vector.op_Multiply(System.Single,Engine.Core.Maths.Vector)
  commentId: M:Engine.Core.Maths.Vector.op_Multiply(System.Single,Engine.Core.Maths.Vector)
  id: op_Multiply(System.Single,Engine.Core.Maths.Vector)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Multiply(Single, Vector)
  nameWithType: Vector.Multiply(Single, Vector)
  fullName: Engine.Core.Maths.Vector.Multiply(System.Single, Engine.Core.Maths.Vector)
  type: Operator
  source:
    id: op_Multiply
    path: ''
    startLine: 4441
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static Vector operator *(float f, Vector v1)
    parameters:
    - id: f
      type: System.Single
    - id: v1
      type: Engine.Core.Maths.Vector
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Shared Operator *(f As Single, v1 As Vector) As Vector
  overload: Engine.Core.Maths.Vector.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.Vector.op_Division(Engine.Core.Maths.Vector,System.Single)
  commentId: M:Engine.Core.Maths.Vector.op_Division(Engine.Core.Maths.Vector,System.Single)
  id: op_Division(Engine.Core.Maths.Vector,System.Single)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: Division(Vector, Single)
  nameWithType: Vector.Division(Vector, Single)
  fullName: Engine.Core.Maths.Vector.Division(Engine.Core.Maths.Vector, System.Single)
  type: Operator
  source:
    id: op_Division
    path: ''
    startLine: 4445
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public static Vector operator /(Vector v1, float f)
    parameters:
    - id: v1
      type: Engine.Core.Maths.Vector
    - id: f
      type: System.Single
    return:
      type: Engine.Core.Maths.Vector
    content.vb: Public Shared Operator /(v1 As Vector, f As Single) As Vector
  overload: Engine.Core.Maths.Vector.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.Vector.ToMatrix(Engine.Core.Maths.Vector,System.Boolean)
  commentId: M:Engine.Core.Maths.Vector.ToMatrix(Engine.Core.Maths.Vector,System.Boolean)
  id: ToMatrix(Engine.Core.Maths.Vector,System.Boolean)
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: ToMatrix(Vector, Boolean)
  nameWithType: Vector.ToMatrix(Vector, Boolean)
  fullName: Engine.Core.Maths.Vector.ToMatrix(Engine.Core.Maths.Vector, System.Boolean)
  type: Method
  source:
    id: ToMatrix
    path: ''
    startLine: 4454
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  summary: "\nTurns the vector into single-row matrix, as long as <code data-dev-comment-type=\"paramref\" class=\"paramref\">isColumn</code> is false.\nOtherwise it turns the vector into a single-column matrix\n"
  example: []
  syntax:
    content: public static MatrixMxN ToMatrix(Vector v, bool isColumn = false)
    parameters:
    - id: v
      type: Engine.Core.Maths.Vector
      description: ''
    - id: isColumn
      type: System.Boolean
    return:
      type: Engine.Core.Maths.MatrixMxN
    content.vb: Public Shared Function ToMatrix(v As Vector, isColumn As Boolean = False) As MatrixMxN
  overload: Engine.Core.Maths.Vector.ToMatrix*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Maths.Vector.GetEnumerator
  commentId: M:Engine.Core.Maths.Vector.GetEnumerator
  id: GetEnumerator
  parent: Engine.Core.Maths.Vector
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: Vector.GetEnumerator()
  fullName: Engine.Core.Maths.Vector.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: ''
    startLine: 4474
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public IEnumerator<float> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Single}
    content.vb: Public Function GetEnumerator As IEnumerator(Of Single)
  overload: Engine.Core.Maths.Vector.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Single}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Engine.Core.Maths
  commentId: N:Engine.Core.Maths
  name: Engine.Core.Maths
  nameWithType: Engine.Core.Maths
  fullName: Engine.Core.Maths
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{System.Single}
  commentId: T:System.Collections.Generic.IEnumerable{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Single>
  nameWithType: IEnumerable<Single>
  fullName: System.Collections.Generic.IEnumerable<System.Single>
  nameWithType.vb: IEnumerable(Of Single)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Single)
  name.vb: IEnumerable(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Engine.Core.Maths.Vector.Item*
  commentId: Overload:Engine.Core.Maths.Vector.Item
  name: Item
  nameWithType: Vector.Item
  fullName: Engine.Core.Maths.Vector.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Engine.Core.Maths.Vector.Length*
  commentId: Overload:Engine.Core.Maths.Vector.Length
  name: Length
  nameWithType: Vector.Length
  fullName: Engine.Core.Maths.Vector.Length
- uid: Engine.Core.Maths.Vector.Dimension*
  commentId: Overload:Engine.Core.Maths.Vector.Dimension
  name: Dimension
  nameWithType: Vector.Dimension
  fullName: Engine.Core.Maths.Vector.Dimension
- uid: Engine.Core.Maths.Vector.LengthSquared*
  commentId: Overload:Engine.Core.Maths.Vector.LengthSquared
  name: LengthSquared
  nameWithType: Vector.LengthSquared
  fullName: Engine.Core.Maths.Vector.LengthSquared
- uid: Engine.Core.Maths.Vector.Normalized*
  commentId: Overload:Engine.Core.Maths.Vector.Normalized
  name: Normalized
  nameWithType: Vector.Normalized
  fullName: Engine.Core.Maths.Vector.Normalized
- uid: Engine.Core.Maths.Vector
  commentId: T:Engine.Core.Maths.Vector
  parent: Engine.Core.Maths
  name: Vector
  nameWithType: Vector
  fullName: Engine.Core.Maths.Vector
- uid: Engine.Core.Maths.Vector.#ctor*
  commentId: Overload:Engine.Core.Maths.Vector.#ctor
  name: Vector
  nameWithType: Vector.Vector
  fullName: Engine.Core.Maths.Vector.Vector
- uid: System.Collections.Generic.List{System.Single}
  commentId: T:System.Collections.Generic.List{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Single>
  nameWithType: List<Single>
  fullName: System.Collections.Generic.List<System.Single>
  nameWithType.vb: List(Of Single)
  fullName.vb: System.Collections.Generic.List(Of System.Single)
  name.vb: List(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Engine.Core.Maths.Vector.Normalize*
  commentId: Overload:Engine.Core.Maths.Vector.Normalize
  name: Normalize
  nameWithType: Vector.Normalize
  fullName: Engine.Core.Maths.Vector.Normalize
- uid: Engine.Core.Maths.Vector.GetLength*
  commentId: Overload:Engine.Core.Maths.Vector.GetLength
  name: GetLength
  nameWithType: Vector.GetLength
  fullName: Engine.Core.Maths.Vector.GetLength
- uid: Engine.Core.Maths.Vector.IsDimensionEqual*
  commentId: Overload:Engine.Core.Maths.Vector.IsDimensionEqual
  name: IsDimensionEqual
  nameWithType: Vector.IsDimensionEqual
  fullName: Engine.Core.Maths.Vector.IsDimensionEqual
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Engine.Core.Maths.Vector.SetValue*
  commentId: Overload:Engine.Core.Maths.Vector.SetValue
  name: SetValue
  nameWithType: Vector.SetValue
  fullName: Engine.Core.Maths.Vector.SetValue
- uid: Engine.Core.Maths.Vector.GetValue*
  commentId: Overload:Engine.Core.Maths.Vector.GetValue
  name: GetValue
  nameWithType: Vector.GetValue
  fullName: Engine.Core.Maths.Vector.GetValue
- uid: Engine.Core.Maths.Vector.AddValue*
  commentId: Overload:Engine.Core.Maths.Vector.AddValue
  name: AddValue
  nameWithType: Vector.AddValue
  fullName: Engine.Core.Maths.Vector.AddValue
- uid: Engine.Core.Maths.Vector.DotProduct*
  commentId: Overload:Engine.Core.Maths.Vector.DotProduct
  name: DotProduct
  nameWithType: Vector.DotProduct
  fullName: Engine.Core.Maths.Vector.DotProduct
- uid: Engine.Core.Maths.Vector.ScalarProduct*
  commentId: Overload:Engine.Core.Maths.Vector.ScalarProduct
  name: ScalarProduct
  nameWithType: Vector.ScalarProduct
  fullName: Engine.Core.Maths.Vector.ScalarProduct
- uid: Engine.Core.Maths.Vector.CrossProduct*
  commentId: Overload:Engine.Core.Maths.Vector.CrossProduct
  name: CrossProduct
  nameWithType: Vector.CrossProduct
  fullName: Engine.Core.Maths.Vector.CrossProduct
- uid: Engine.Core.Maths.Vector.Addition*
  commentId: Overload:Engine.Core.Maths.Vector.Addition
  name: Addition
  nameWithType: Vector.Addition
  fullName: Engine.Core.Maths.Vector.Addition
- uid: Engine.Core.Maths.Vector.Substraction*
  commentId: Overload:Engine.Core.Maths.Vector.Substraction
  name: Substraction
  nameWithType: Vector.Substraction
  fullName: Engine.Core.Maths.Vector.Substraction
- uid: Engine.Core.Maths.Vector.Division*
  commentId: Overload:Engine.Core.Maths.Vector.Division
  name: Division
  nameWithType: Vector.Division
  fullName: Engine.Core.Maths.Vector.Division
- uid: Engine.Core.Maths.Vector.Dot*
  commentId: Overload:Engine.Core.Maths.Vector.Dot
  name: Dot
  nameWithType: Vector.Dot
  fullName: Engine.Core.Maths.Vector.Dot
- uid: Engine.Core.Maths.Vector.Cross*
  commentId: Overload:Engine.Core.Maths.Vector.Cross
  name: Cross
  nameWithType: Vector.Cross
  fullName: Engine.Core.Maths.Vector.Cross
- uid: Engine.Core.Maths.Vector.Scalar*
  commentId: Overload:Engine.Core.Maths.Vector.Scalar
  name: Scalar
  nameWithType: Vector.Scalar
  fullName: Engine.Core.Maths.Vector.Scalar
- uid: Engine.Core.Maths.Vector.op_Addition*
  commentId: Overload:Engine.Core.Maths.Vector.op_Addition
  name: Addition
  nameWithType: Vector.Addition
  fullName: Engine.Core.Maths.Vector.Addition
- uid: Engine.Core.Maths.Vector.op_Subtraction*
  commentId: Overload:Engine.Core.Maths.Vector.op_Subtraction
  name: Subtraction
  nameWithType: Vector.Subtraction
  fullName: Engine.Core.Maths.Vector.Subtraction
- uid: Engine.Core.Maths.Vector.op_Multiply*
  commentId: Overload:Engine.Core.Maths.Vector.op_Multiply
  name: Multiply
  nameWithType: Vector.Multiply
  fullName: Engine.Core.Maths.Vector.Multiply
- uid: Engine.Core.Maths.Vector.op_Division*
  commentId: Overload:Engine.Core.Maths.Vector.op_Division
  name: Division
  nameWithType: Vector.Division
  fullName: Engine.Core.Maths.Vector.Division
- uid: Engine.Core.Maths.Vector.ToMatrix*
  commentId: Overload:Engine.Core.Maths.Vector.ToMatrix
  name: ToMatrix
  nameWithType: Vector.ToMatrix
  fullName: Engine.Core.Maths.Vector.ToMatrix
- uid: Engine.Core.Maths.MatrixMxN
  commentId: T:Engine.Core.Maths.MatrixMxN
  parent: Engine.Core.Maths
  name: MatrixMxN
  nameWithType: MatrixMxN
  fullName: Engine.Core.Maths.MatrixMxN
- uid: Engine.Core.Maths.Vector.GetEnumerator*
  commentId: Overload:Engine.Core.Maths.Vector.GetEnumerator
  name: GetEnumerator
  nameWithType: Vector.GetEnumerator
  fullName: Engine.Core.Maths.Vector.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Single}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Single}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Single}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<Single>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of Single).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Single).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<Single>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of Single).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Single).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Single}
  commentId: T:System.Collections.Generic.IEnumerator{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<Single>
  nameWithType: IEnumerator<Single>
  fullName: System.Collections.Generic.IEnumerator<System.Single>
  nameWithType.vb: IEnumerator(Of Single)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Single)
  name.vb: IEnumerator(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
