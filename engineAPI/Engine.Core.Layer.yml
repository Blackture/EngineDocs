### YamlMime:ManagedReference
items:
- uid: Engine.Core.Layer
  commentId: T:Engine.Core.Layer
  id: Layer
  parent: Engine.Core
  children:
  - Engine.Core.Layer.#ctor(System.String,System.Int32)
  - Engine.Core.Layer.#ctor(System.String,System.Int32,System.Int32)
  - Engine.Core.Layer.All
  - Engine.Core.Layer.ChangeLayer(System.Int32,System.String,System.Nullable{System.Int32})
  - Engine.Core.Layer.ID
  - Engine.Core.Layer.Index
  - Engine.Core.Layer.Item(System.Int32)
  - Engine.Core.Layer.Name
  langs:
  - csharp
  - vb
  name: Layer
  nameWithType: Layer
  fullName: Engine.Core.Layer
  type: Class
  source:
    id: Layer
    path: ''
    startLine: 203
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public class Layer
    content.vb: Public Class Layer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.Layer.All
  commentId: F:Engine.Core.Layer.All
  id: All
  parent: Engine.Core.Layer
  langs:
  - csharp
  - vb
  name: All
  nameWithType: Layer.All
  fullName: Engine.Core.Layer.All
  type: Field
  source:
    id: All
    path: ''
    startLine: 205
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public static readonly List<Layer> All
    return:
      type: System.Collections.Generic.List{Engine.Core.Layer}
    content.vb: Public Shared ReadOnly All As List(Of Layer)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Engine.Core.Layer.Item(System.Int32)
  commentId: P:Engine.Core.Layer.Item(System.Int32)
  id: Item(System.Int32)
  parent: Engine.Core.Layer
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Layer.Item[Int32]
  fullName: Engine.Core.Layer.Item[System.Int32]
  type: Property
  source:
    id: this[]
    path: ''
    startLine: 210
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public Layer this[int id] { get; set; }
    parameters:
    - id: id
      type: System.Int32
    return:
      type: Engine.Core.Layer
    content.vb: Public Property Item(id As Integer) As Layer
  overload: Engine.Core.Layer.Item*
  nameWithType.vb: Layer.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Layer.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Engine.Core.Layer.Name
  commentId: P:Engine.Core.Layer.Name
  id: Name
  parent: Engine.Core.Layer
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Layer.Name
  fullName: Engine.Core.Layer.Name
  type: Property
  source:
    id: Name
    path: ''
    startLine: 226
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  summary: "\nThe layer&apos;s unique name\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Engine.Core.Layer.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Layer.ID
  commentId: P:Engine.Core.Layer.ID
  id: ID
  parent: Engine.Core.Layer
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: Layer.ID
  fullName: Engine.Core.Layer.ID
  type: Property
  source:
    id: ID
    path: ''
    startLine: 230
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  summary: "\nThe layer&apos;s unique id for the layer listing\n"
  example: []
  syntax:
    content: public int ID { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ID As Integer
  overload: Engine.Core.Layer.ID*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Layer.Index
  commentId: P:Engine.Core.Layer.Index
  id: Index
  parent: Engine.Core.Layer
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: Layer.Index
  fullName: Engine.Core.Layer.Index
  type: Property
  source:
    id: Index
    path: ''
    startLine: 234
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  summary: "\nThe layer&apos;s unique index indicating its position (that&apos;s neither its identification nor its position in the list).\n"
  example: []
  syntax:
    content: public int Index { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Index As Integer
  overload: Engine.Core.Layer.Index*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Layer.#ctor(System.String,System.Int32)
  commentId: M:Engine.Core.Layer.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: Engine.Core.Layer
  langs:
  - csharp
  - vb
  name: Layer(String, Int32)
  nameWithType: Layer.Layer(String, Int32)
  fullName: Engine.Core.Layer.Layer(System.String, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 236
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public Layer(string name, int index)
    parameters:
    - id: name
      type: System.String
    - id: index
      type: System.Int32
    content.vb: Public Sub New(name As String, index As Integer)
  overload: Engine.Core.Layer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Layer.#ctor(System.String,System.Int32,System.Int32)
  commentId: M:Engine.Core.Layer.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: Engine.Core.Layer
  langs:
  - csharp
  - vb
  name: Layer(String, Int32, Int32)
  nameWithType: Layer.Layer(String, Int32, Int32)
  fullName: Engine.Core.Layer.Layer(System.String, System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 241
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public Layer(string name, int id, int index)
    parameters:
    - id: name
      type: System.String
    - id: id
      type: System.Int32
    - id: index
      type: System.Int32
    content.vb: Public Sub New(name As String, id As Integer, index As Integer)
  overload: Engine.Core.Layer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Layer.ChangeLayer(System.Int32,System.String,System.Nullable{System.Int32})
  commentId: M:Engine.Core.Layer.ChangeLayer(System.Int32,System.String,System.Nullable{System.Int32})
  id: ChangeLayer(System.Int32,System.String,System.Nullable{System.Int32})
  parent: Engine.Core.Layer
  langs:
  - csharp
  - vb
  name: ChangeLayer(Int32, String, Nullable<Int32>)
  nameWithType: Layer.ChangeLayer(Int32, String, Nullable<Int32>)
  fullName: Engine.Core.Layer.ChangeLayer(System.Int32, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    id: ChangeLayer
    path: ''
    startLine: 282
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public static void ChangeLayer(int Id, string name, int? index)
    parameters:
    - id: Id
      type: System.Int32
    - id: name
      type: System.String
    - id: index
      type: System.Nullable{System.Int32}
    content.vb: Public Shared Sub ChangeLayer(Id As Integer, name As String, index As Integer?)
  overload: Engine.Core.Layer.ChangeLayer*
  nameWithType.vb: Layer.ChangeLayer(Int32, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Core.Layer.ChangeLayer(System.Int32, System.String, System.Nullable(Of System.Int32))
  name.vb: ChangeLayer(Int32, String, Nullable(Of Int32))
references:
- uid: Engine.Core
  commentId: N:Engine.Core
  name: Engine.Core
  nameWithType: Engine.Core
  fullName: Engine.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Engine.Core.Layer}
  commentId: T:System.Collections.Generic.List{Engine.Core.Layer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Layer>
  nameWithType: List<Layer>
  fullName: System.Collections.Generic.List<Engine.Core.Layer>
  nameWithType.vb: List(Of Layer)
  fullName.vb: System.Collections.Generic.List(Of Engine.Core.Layer)
  name.vb: List(Of Layer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Engine.Core.Layer
    name: Layer
    nameWithType: Layer
    fullName: Engine.Core.Layer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Engine.Core.Layer
    name: Layer
    nameWithType: Layer
    fullName: Engine.Core.Layer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Engine.Core.Layer.Item*
  commentId: Overload:Engine.Core.Layer.Item
  name: Item
  nameWithType: Layer.Item
  fullName: Engine.Core.Layer.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Engine.Core.Layer
  commentId: T:Engine.Core.Layer
  parent: Engine.Core
  name: Layer
  nameWithType: Layer
  fullName: Engine.Core.Layer
- uid: Engine.Core.Layer.Name*
  commentId: Overload:Engine.Core.Layer.Name
  name: Name
  nameWithType: Layer.Name
  fullName: Engine.Core.Layer.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Engine.Core.Layer.ID*
  commentId: Overload:Engine.Core.Layer.ID
  name: ID
  nameWithType: Layer.ID
  fullName: Engine.Core.Layer.ID
- uid: Engine.Core.Layer.Index*
  commentId: Overload:Engine.Core.Layer.Index
  name: Index
  nameWithType: Layer.Index
  fullName: Engine.Core.Layer.Index
- uid: Engine.Core.Layer.#ctor*
  commentId: Overload:Engine.Core.Layer.#ctor
  name: Layer
  nameWithType: Layer.Layer
  fullName: Engine.Core.Layer.Layer
- uid: Engine.Core.Layer.ChangeLayer*
  commentId: Overload:Engine.Core.Layer.ChangeLayer
  name: ChangeLayer
  nameWithType: Layer.ChangeLayer
  fullName: Engine.Core.Layer.ChangeLayer
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
