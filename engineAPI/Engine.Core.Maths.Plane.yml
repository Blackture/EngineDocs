### YamlMime:ManagedReference
items:
- uid: Engine.Core.Maths.Plane
  commentId: T:Engine.Core.Maths.Plane
  id: Plane
  parent: Engine.Core.Maths
  children:
  - Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
  - Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3,Engine.Core.Maths.Plane.PlaneSetupType)
  - Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,System.Single)
  - Engine.Core.Maths.Plane.B
  - Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Straight)
  - Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Vector3)
  - Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Plane)
  - Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight)
  - Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight,Engine.Core.Maths.Vector3@)
  - Engine.Core.Maths.Plane.GetPoint_00X
  - Engine.Core.Maths.Plane.GetPositionVectorAt(System.Single,System.Single)
  - Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane,Engine.Core.Maths.Plane,Engine.Core.Maths.Straight@,Engine.Core.Maths.Plane@,Engine.Core.Maths.Vector3@)
  - Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane,Engine.Core.Maths.Straight,Engine.Core.Maths.Straight@,Engine.Core.Maths.Vector3@)
  - Engine.Core.Maths.Plane.Intersects(Engine.Core.Maths.Plane,Engine.Core.Maths.Straight)
  - Engine.Core.Maths.Plane.N
  - Engine.Core.Maths.Plane.P
  - Engine.Core.Maths.Plane.S1
  - Engine.Core.Maths.Plane.S2
  langs:
  - csharp
  - vb
  name: Plane
  nameWithType: Plane
  fullName: Engine.Core.Maths.Plane
  type: Class
  source:
    id: Plane
    path: ''
    startLine: 3245
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public class Plane
    content.vb: Public Class Plane
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.Maths.Plane.N
  commentId: P:Engine.Core.Maths.Plane.N
  id: N
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: N
  nameWithType: Plane.N
  fullName: Engine.Core.Maths.Plane.N
  type: Property
  source:
    id: N
    path: ''
    startLine: 3262
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  summary: "\nThe normal vector of the plane\n"
  example: []
  syntax:
    content: public Vector3 N { get; set; }
    parameters: []
    return:
      type: Engine.Core.Maths.Vector3
    content.vb: Public Property N As Vector3
  overload: Engine.Core.Maths.Plane.N*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Plane.P
  commentId: P:Engine.Core.Maths.Plane.P
  id: P
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: P
  nameWithType: Plane.P
  fullName: Engine.Core.Maths.Plane.P
  type: Property
  source:
    id: P
    path: ''
    startLine: 3266
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  summary: "\nA position vector on the plane\n"
  example: []
  syntax:
    content: public Vector3 P { get; }
    parameters: []
    return:
      type: Engine.Core.Maths.Vector3
    content.vb: Public ReadOnly Property P As Vector3
  overload: Engine.Core.Maths.Plane.P*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Maths.Plane.B
  commentId: P:Engine.Core.Maths.Plane.B
  id: B
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: B
  nameWithType: Plane.B
  fullName: Engine.Core.Maths.Plane.B
  type: Property
  source:
    id: B
    path: ''
    startLine: 3270
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  summary: "\nThe &quot;b&quot; value of the coordinate-form &quot;n1x1+n2x2+n3a3-b&quot;\n"
  example: []
  syntax:
    content: public float B { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property B As Single
  overload: Engine.Core.Maths.Plane.B*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Maths.Plane.S1
  commentId: P:Engine.Core.Maths.Plane.S1
  id: S1
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: S1
  nameWithType: Plane.S1
  fullName: Engine.Core.Maths.Plane.S1
  type: Property
  source:
    id: S1
    path: ''
    startLine: 3274
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  summary: "\nSpan Vector3 1\n"
  example: []
  syntax:
    content: public Vector3 S1 { get; }
    parameters: []
    return:
      type: Engine.Core.Maths.Vector3
    content.vb: Public ReadOnly Property S1 As Vector3
  overload: Engine.Core.Maths.Plane.S1*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Maths.Plane.S2
  commentId: P:Engine.Core.Maths.Plane.S2
  id: S2
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: S2
  nameWithType: Plane.S2
  fullName: Engine.Core.Maths.Plane.S2
  type: Property
  source:
    id: S2
    path: ''
    startLine: 3278
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  summary: "\nSpan Vector3 2\n"
  example: []
  syntax:
    content: public Vector3 S2 { get; }
    parameters: []
    return:
      type: Engine.Core.Maths.Vector3
    content.vb: Public ReadOnly Property S2 As Vector3
  overload: Engine.Core.Maths.Plane.S2*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,System.Single)
  commentId: M:Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,System.Single)
  id: '#ctor(Engine.Core.Maths.Vector3,System.Single)'
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: Plane(Vector3, Single)
  nameWithType: Plane.Plane(Vector3, Single)
  fullName: Engine.Core.Maths.Plane.Plane(Engine.Core.Maths.Vector3, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3280
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Plane(Vector3 n, float b)
    parameters:
    - id: n
      type: Engine.Core.Maths.Vector3
    - id: b
      type: System.Single
    content.vb: Public Sub New(n As Vector3, b As Single)
  overload: Engine.Core.Maths.Plane.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3,Engine.Core.Maths.Plane.PlaneSetupType)
  commentId: M:Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3,Engine.Core.Maths.Plane.PlaneSetupType)
  id: '#ctor(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3,Engine.Core.Maths.Plane.PlaneSetupType)'
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: Plane(Vector3, Vector3, Vector3, Plane.PlaneSetupType)
  nameWithType: Plane.Plane(Vector3, Vector3, Vector3, Plane.PlaneSetupType)
  fullName: Engine.Core.Maths.Plane.Plane(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3, Engine.Core.Maths.Plane.PlaneSetupType)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3287
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Plane(Vector3 p1, Vector3 s1, Vector3 s2, Plane.PlaneSetupType setupType)
    parameters:
    - id: p1
      type: Engine.Core.Maths.Vector3
    - id: s1
      type: Engine.Core.Maths.Vector3
    - id: s2
      type: Engine.Core.Maths.Vector3
    - id: setupType
      type: Engine.Core.Maths.Plane.PlaneSetupType
    content.vb: Public Sub New(p1 As Vector3, s1 As Vector3, s2 As Vector3, setupType As Plane.PlaneSetupType)
  overload: Engine.Core.Maths.Plane.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
  commentId: M:Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
  id: '#ctor(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)'
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: Plane(Vector3, Vector3)
  nameWithType: Plane.Plane(Vector3, Vector3)
  fullName: Engine.Core.Maths.Plane.Plane(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3308
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Plane(Vector3 p, Vector3 n)
    parameters:
    - id: p
      type: Engine.Core.Maths.Vector3
    - id: n
      type: Engine.Core.Maths.Vector3
    content.vb: Public Sub New(p As Vector3, n As Vector3)
  overload: Engine.Core.Maths.Plane.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Plane.GetPoint_00X
  commentId: M:Engine.Core.Maths.Plane.GetPoint_00X
  id: GetPoint_00X
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: GetPoint_00X()
  nameWithType: Plane.GetPoint_00X()
  fullName: Engine.Core.Maths.Plane.GetPoint_00X()
  type: Method
  source:
    id: GetPoint_00X
    path: ''
    startLine: 3321
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  summary: "\nGets a point on the plane\n"
  example: []
  syntax:
    content: public Vector3 GetPoint_00X()
    return:
      type: Engine.Core.Maths.Vector3
      description: Returns the point for X1 = 0, X2 = 0 and X3 = b/n3
    content.vb: Public Function GetPoint_00X As Vector3
  overload: Engine.Core.Maths.Plane.GetPoint_00X*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Vector3)
  commentId: M:Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Vector3)
  id: Contains(Engine.Core.Maths.Vector3)
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: Contains(Vector3)
  nameWithType: Plane.Contains(Vector3)
  fullName: Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Vector3)
  type: Method
  source:
    id: Contains
    path: ''
    startLine: 3326
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public bool Contains(Vector3 v)
    parameters:
    - id: v
      type: Engine.Core.Maths.Vector3
    return:
      type: System.Boolean
    content.vb: Public Function Contains(v As Vector3) As Boolean
  overload: Engine.Core.Maths.Plane.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Straight)
  commentId: M:Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Straight)
  id: Contains(Engine.Core.Maths.Straight)
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: Contains(Straight)
  nameWithType: Plane.Contains(Straight)
  fullName: Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Straight)
  type: Method
  source:
    id: Contains
    path: ''
    startLine: 3331
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public bool Contains(Straight s)
    parameters:
    - id: s
      type: Engine.Core.Maths.Straight
    return:
      type: System.Boolean
    content.vb: Public Function Contains(s As Straight) As Boolean
  overload: Engine.Core.Maths.Plane.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Plane.GetPositionVectorAt(System.Single,System.Single)
  commentId: M:Engine.Core.Maths.Plane.GetPositionVectorAt(System.Single,System.Single)
  id: GetPositionVectorAt(System.Single,System.Single)
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: GetPositionVectorAt(Single, Single)
  nameWithType: Plane.GetPositionVectorAt(Single, Single)
  fullName: Engine.Core.Maths.Plane.GetPositionVectorAt(System.Single, System.Single)
  type: Method
  source:
    id: GetPositionVectorAt
    path: ''
    startLine: 3341
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public Vector3 GetPositionVectorAt(float s1, float s2)
    parameters:
    - id: s1
      type: System.Single
    - id: s2
      type: System.Single
    return:
      type: Engine.Core.Maths.Vector3
    content.vb: Public Function GetPositionVectorAt(s1 As Single, s2 As Single) As Vector3
  overload: Engine.Core.Maths.Plane.GetPositionVectorAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Plane.Intersects(Engine.Core.Maths.Plane,Engine.Core.Maths.Straight)
  commentId: M:Engine.Core.Maths.Plane.Intersects(Engine.Core.Maths.Plane,Engine.Core.Maths.Straight)
  id: Intersects(Engine.Core.Maths.Plane,Engine.Core.Maths.Straight)
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: Intersects(Plane, Straight)
  nameWithType: Plane.Intersects(Plane, Straight)
  fullName: Engine.Core.Maths.Plane.Intersects(Engine.Core.Maths.Plane, Engine.Core.Maths.Straight)
  type: Method
  source:
    id: Intersects
    path: ''
    startLine: 3349
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public bool Intersects(Plane plane, Straight line)
    parameters:
    - id: plane
      type: Engine.Core.Maths.Plane
    - id: line
      type: Engine.Core.Maths.Straight
    return:
      type: System.Boolean
    content.vb: Public Function Intersects(plane As Plane, line As Straight) As Boolean
  overload: Engine.Core.Maths.Plane.Intersects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane,Engine.Core.Maths.Plane,Engine.Core.Maths.Straight@,Engine.Core.Maths.Plane@,Engine.Core.Maths.Vector3@)
  commentId: M:Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane,Engine.Core.Maths.Plane,Engine.Core.Maths.Straight@,Engine.Core.Maths.Plane@,Engine.Core.Maths.Vector3@)
  id: Intersection(Engine.Core.Maths.Plane,Engine.Core.Maths.Plane,Engine.Core.Maths.Straight@,Engine.Core.Maths.Plane@,Engine.Core.Maths.Vector3@)
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: Intersection(Plane, Plane, out Straight, out Plane, out Vector3)
  nameWithType: Plane.Intersection(Plane, Plane, out Straight, out Plane, out Vector3)
  fullName: Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane, Engine.Core.Maths.Plane, out Engine.Core.Maths.Straight, out Engine.Core.Maths.Plane, out Engine.Core.Maths.Vector3)
  type: Method
  source:
    id: Intersection
    path: ''
    startLine: 3376
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  summary: "\nGet plane ∩ plane and outputs its results\n"
  example: []
  syntax:
    content: public static bool Intersection(Plane p1, Plane p2, out Straight s, out Plane p, out Vector3 v)
    parameters:
    - id: p1
      type: Engine.Core.Maths.Plane
    - id: p2
      type: Engine.Core.Maths.Plane
    - id: s
      type: Engine.Core.Maths.Straight
    - id: p
      type: Engine.Core.Maths.Plane
    - id: v
      type: Engine.Core.Maths.Vector3
    return:
      type: System.Boolean
      description: True if plane ∩ plane ≠ ∅
    content.vb: Public Shared Function Intersection(p1 As Plane, p2 As Plane, ByRef s As Straight, ByRef p As Plane, ByRef v As Vector3) As Boolean
  overload: Engine.Core.Maths.Plane.Intersection*
  nameWithType.vb: Plane.Intersection(Plane, Plane, ByRef Straight, ByRef Plane, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane, Engine.Core.Maths.Plane, ByRef Engine.Core.Maths.Straight, ByRef Engine.Core.Maths.Plane, ByRef Engine.Core.Maths.Vector3)
  name.vb: Intersection(Plane, Plane, ByRef Straight, ByRef Plane, ByRef Vector3)
- uid: Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane,Engine.Core.Maths.Straight,Engine.Core.Maths.Straight@,Engine.Core.Maths.Vector3@)
  commentId: M:Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane,Engine.Core.Maths.Straight,Engine.Core.Maths.Straight@,Engine.Core.Maths.Vector3@)
  id: Intersection(Engine.Core.Maths.Plane,Engine.Core.Maths.Straight,Engine.Core.Maths.Straight@,Engine.Core.Maths.Vector3@)
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: Intersection(Plane, Straight, out Straight, out Vector3)
  nameWithType: Plane.Intersection(Plane, Straight, out Straight, out Vector3)
  fullName: Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane, Engine.Core.Maths.Straight, out Engine.Core.Maths.Straight, out Engine.Core.Maths.Vector3)
  type: Method
  source:
    id: Intersection
    path: ''
    startLine: 3413
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  summary: "\nGet plane ∩ line and outputs its results\n"
  example: []
  syntax:
    content: public static bool Intersection(Plane plane, Straight line, out Straight intersectionLine, out Vector3 intersectionPoint)
    parameters:
    - id: plane
      type: Engine.Core.Maths.Plane
      description: ''
    - id: line
      type: Engine.Core.Maths.Straight
      description: ''
    - id: intersectionLine
      type: Engine.Core.Maths.Straight
      description: ''
    - id: intersectionPoint
      type: Engine.Core.Maths.Vector3
      description: ''
    return:
      type: System.Boolean
      description: True if plane ∩ line ≠ ∅
    content.vb: Public Shared Function Intersection(plane As Plane, line As Straight, ByRef intersectionLine As Straight, ByRef intersectionPoint As Vector3) As Boolean
  overload: Engine.Core.Maths.Plane.Intersection*
  nameWithType.vb: Plane.Intersection(Plane, Straight, ByRef Straight, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane, Engine.Core.Maths.Straight, ByRef Engine.Core.Maths.Straight, ByRef Engine.Core.Maths.Vector3)
  name.vb: Intersection(Plane, Straight, ByRef Straight, ByRef Vector3)
- uid: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Plane)
  commentId: M:Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Plane)
  id: Distance(Engine.Core.Maths.Plane)
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: Distance(Plane)
  nameWithType: Plane.Distance(Plane)
  fullName: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Plane)
  type: Method
  source:
    id: Distance
    path: ''
    startLine: 3452
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public float Distance(Plane p)
    parameters:
    - id: p
      type: Engine.Core.Maths.Plane
    return:
      type: System.Single
    content.vb: Public Function Distance(p As Plane) As Single
  overload: Engine.Core.Maths.Plane.Distance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight)
  commentId: M:Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight)
  id: Distance(Engine.Core.Maths.Straight)
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: Distance(Straight)
  nameWithType: Plane.Distance(Straight)
  fullName: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight)
  type: Method
  source:
    id: Distance
    path: ''
    startLine: 3469
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public float Distance(Straight s)
    parameters:
    - id: s
      type: Engine.Core.Maths.Straight
    return:
      type: System.Single
    content.vb: Public Function Distance(s As Straight) As Single
  overload: Engine.Core.Maths.Plane.Distance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight,Engine.Core.Maths.Vector3@)
  commentId: M:Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight,Engine.Core.Maths.Vector3@)
  id: Distance(Engine.Core.Maths.Straight,Engine.Core.Maths.Vector3@)
  parent: Engine.Core.Maths.Plane
  langs:
  - csharp
  - vb
  name: Distance(Straight, out Vector3)
  nameWithType: Plane.Distance(Straight, out Vector3)
  fullName: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight, out Engine.Core.Maths.Vector3)
  type: Method
  source:
    id: Distance
    path: ''
    startLine: 3474
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Maths
  syntax:
    content: public float Distance(Straight s, out Vector3 l)
    parameters:
    - id: s
      type: Engine.Core.Maths.Straight
    - id: l
      type: Engine.Core.Maths.Vector3
    return:
      type: System.Single
    content.vb: Public Function Distance(s As Straight, ByRef l As Vector3) As Single
  overload: Engine.Core.Maths.Plane.Distance*
  nameWithType.vb: Plane.Distance(Straight, ByRef Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight, ByRef Engine.Core.Maths.Vector3)
  name.vb: Distance(Straight, ByRef Vector3)
references:
- uid: Engine.Core.Maths
  commentId: N:Engine.Core.Maths
  name: Engine.Core.Maths
  nameWithType: Engine.Core.Maths
  fullName: Engine.Core.Maths
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Core.Maths.Plane.N*
  commentId: Overload:Engine.Core.Maths.Plane.N
  name: N
  nameWithType: Plane.N
  fullName: Engine.Core.Maths.Plane.N
- uid: Engine.Core.Maths.Vector3
  commentId: T:Engine.Core.Maths.Vector3
  parent: Engine.Core.Maths
  name: Vector3
  nameWithType: Vector3
  fullName: Engine.Core.Maths.Vector3
- uid: Engine.Core.Maths.Plane.P*
  commentId: Overload:Engine.Core.Maths.Plane.P
  name: P
  nameWithType: Plane.P
  fullName: Engine.Core.Maths.Plane.P
- uid: Engine.Core.Maths.Plane.B*
  commentId: Overload:Engine.Core.Maths.Plane.B
  name: B
  nameWithType: Plane.B
  fullName: Engine.Core.Maths.Plane.B
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Engine.Core.Maths.Plane.S1*
  commentId: Overload:Engine.Core.Maths.Plane.S1
  name: S1
  nameWithType: Plane.S1
  fullName: Engine.Core.Maths.Plane.S1
- uid: Engine.Core.Maths.Plane.S2*
  commentId: Overload:Engine.Core.Maths.Plane.S2
  name: S2
  nameWithType: Plane.S2
  fullName: Engine.Core.Maths.Plane.S2
- uid: Engine.Core.Maths.Plane.#ctor*
  commentId: Overload:Engine.Core.Maths.Plane.#ctor
  name: Plane
  nameWithType: Plane.Plane
  fullName: Engine.Core.Maths.Plane.Plane
- uid: Engine.Core.Maths.Plane.PlaneSetupType
  commentId: T:Engine.Core.Maths.Plane.PlaneSetupType
  parent: Engine.Core.Maths
  name: Plane.PlaneSetupType
  nameWithType: Plane.PlaneSetupType
  fullName: Engine.Core.Maths.Plane.PlaneSetupType
- uid: Engine.Core.Maths.Plane.GetPoint_00X*
  commentId: Overload:Engine.Core.Maths.Plane.GetPoint_00X
  name: GetPoint_00X
  nameWithType: Plane.GetPoint_00X
  fullName: Engine.Core.Maths.Plane.GetPoint_00X
- uid: Engine.Core.Maths.Plane.Contains*
  commentId: Overload:Engine.Core.Maths.Plane.Contains
  name: Contains
  nameWithType: Plane.Contains
  fullName: Engine.Core.Maths.Plane.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Engine.Core.Maths.Straight
  commentId: T:Engine.Core.Maths.Straight
  parent: Engine.Core.Maths
  name: Straight
  nameWithType: Straight
  fullName: Engine.Core.Maths.Straight
- uid: Engine.Core.Maths.Plane.GetPositionVectorAt*
  commentId: Overload:Engine.Core.Maths.Plane.GetPositionVectorAt
  name: GetPositionVectorAt
  nameWithType: Plane.GetPositionVectorAt
  fullName: Engine.Core.Maths.Plane.GetPositionVectorAt
- uid: Engine.Core.Maths.Plane.Intersects*
  commentId: Overload:Engine.Core.Maths.Plane.Intersects
  name: Intersects
  nameWithType: Plane.Intersects
  fullName: Engine.Core.Maths.Plane.Intersects
- uid: Engine.Core.Maths.Plane
  commentId: T:Engine.Core.Maths.Plane
  parent: Engine.Core.Maths
  name: Plane
  nameWithType: Plane
  fullName: Engine.Core.Maths.Plane
- uid: Engine.Core.Maths.Plane.Intersection*
  commentId: Overload:Engine.Core.Maths.Plane.Intersection
  name: Intersection
  nameWithType: Plane.Intersection
  fullName: Engine.Core.Maths.Plane.Intersection
- uid: Engine.Core.Maths.Plane.Distance*
  commentId: Overload:Engine.Core.Maths.Plane.Distance
  name: Distance
  nameWithType: Plane.Distance
  fullName: Engine.Core.Maths.Plane.Distance
