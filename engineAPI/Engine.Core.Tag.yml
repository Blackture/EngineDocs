### YamlMime:ManagedReference
items:
- uid: Engine.Core.Tag
  commentId: T:Engine.Core.Tag
  id: Tag
  parent: Engine.Core
  children:
  - Engine.Core.Tag.#ctor(System.String)
  - Engine.Core.Tag.Name
  - Engine.Core.Tag.op_Implicit(Engine.Core.Tag)~System.Int32
  - Engine.Core.Tag.op_Implicit(Engine.Core.Tag)~System.String
  - Engine.Core.Tag.op_Implicit(System.Int32)~Engine.Core.Tag
  - Engine.Core.Tag.op_Implicit(System.String)~Engine.Core.Tag
  - Engine.Core.Tag.RemoveTag(Engine.Core.Tag)
  - Engine.Core.Tag.SetName(System.String)
  - Engine.Core.Tag.SetName(System.String,System.Int32)
  - Engine.Core.Tag.Tags
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: Tag
  fullName: Engine.Core.Tag
  type: Class
  source:
    id: Tag
    path: ''
    startLine: 907
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public class Tag
    content.vb: Public Class Tag
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.Tag.Tags
  commentId: F:Engine.Core.Tag.Tags
  id: Tags
  parent: Engine.Core.Tag
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: Tag.Tags
  fullName: Engine.Core.Tag.Tags
  type: Field
  source:
    id: Tags
    path: ''
    startLine: 909
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public static List<Tag> Tags
    return:
      type: System.Collections.Generic.List{Engine.Core.Tag}
    content.vb: Public Shared Tags As List(Of Tag)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Tag.Name
  commentId: P:Engine.Core.Tag.Name
  id: Name
  parent: Engine.Core.Tag
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Tag.Name
  fullName: Engine.Core.Tag.Name
  type: Property
  source:
    id: Name
    path: ''
    startLine: 915
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Engine.Core.Tag.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Engine.Core.Tag.#ctor(System.String)
  commentId: M:Engine.Core.Tag.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Engine.Core.Tag
  langs:
  - csharp
  - vb
  name: Tag(String)
  nameWithType: Tag.Tag(String)
  fullName: Engine.Core.Tag.Tag(System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 928
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public Tag(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub New(name As String)
  overload: Engine.Core.Tag.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Tag.SetName(System.String)
  commentId: M:Engine.Core.Tag.SetName(System.String)
  id: SetName(System.String)
  parent: Engine.Core.Tag
  langs:
  - csharp
  - vb
  name: SetName(String)
  nameWithType: Tag.SetName(String)
  fullName: Engine.Core.Tag.SetName(System.String)
  type: Method
  source:
    id: SetName
    path: ''
    startLine: 944
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public void SetName(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub SetName(name As String)
  overload: Engine.Core.Tag.SetName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Tag.SetName(System.String,System.Int32)
  commentId: M:Engine.Core.Tag.SetName(System.String,System.Int32)
  id: SetName(System.String,System.Int32)
  parent: Engine.Core.Tag
  langs:
  - csharp
  - vb
  name: SetName(String, Int32)
  nameWithType: Tag.SetName(String, Int32)
  fullName: Engine.Core.Tag.SetName(System.String, System.Int32)
  type: Method
  source:
    id: SetName
    path: ''
    startLine: 949
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public static void SetName(string name, int index)
    parameters:
    - id: name
      type: System.String
    - id: index
      type: System.Int32
    content.vb: Public Shared Sub SetName(name As String, index As Integer)
  overload: Engine.Core.Tag.SetName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Tag.RemoveTag(Engine.Core.Tag)
  commentId: M:Engine.Core.Tag.RemoveTag(Engine.Core.Tag)
  id: RemoveTag(Engine.Core.Tag)
  parent: Engine.Core.Tag
  langs:
  - csharp
  - vb
  name: RemoveTag(Tag)
  nameWithType: Tag.RemoveTag(Tag)
  fullName: Engine.Core.Tag.RemoveTag(Engine.Core.Tag)
  type: Method
  source:
    id: RemoveTag
    path: ''
    startLine: 956
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public static void RemoveTag(Tag tag)
    parameters:
    - id: tag
      type: Engine.Core.Tag
    content.vb: Public Shared Sub RemoveTag(tag As Tag)
  overload: Engine.Core.Tag.RemoveTag*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Engine.Core.Tag.op_Implicit(Engine.Core.Tag)~System.Int32
  commentId: M:Engine.Core.Tag.op_Implicit(Engine.Core.Tag)~System.Int32
  id: op_Implicit(Engine.Core.Tag)~System.Int32
  parent: Engine.Core.Tag
  langs:
  - csharp
  - vb
  name: Implicit(Tag to Int32)
  nameWithType: Tag.Implicit(Tag to Int32)
  fullName: Engine.Core.Tag.Implicit(Engine.Core.Tag to System.Int32)
  type: Operator
  source:
    id: op_Implicit
    path: ''
    startLine: 964
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public static implicit operator int (Tag t)
    parameters:
    - id: t
      type: Engine.Core.Tag
    return:
      type: System.Int32
    content.vb: Public Shared Widening Operator CType(t As Tag) As Integer
  overload: Engine.Core.Tag.op_Implicit*
  nameWithType.vb: Tag.Widening(Tag to Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Core.Tag.Widening(Engine.Core.Tag to System.Int32)
  name.vb: Widening(Tag to Int32)
- uid: Engine.Core.Tag.op_Implicit(Engine.Core.Tag)~System.String
  commentId: M:Engine.Core.Tag.op_Implicit(Engine.Core.Tag)~System.String
  id: op_Implicit(Engine.Core.Tag)~System.String
  parent: Engine.Core.Tag
  langs:
  - csharp
  - vb
  name: Implicit(Tag to String)
  nameWithType: Tag.Implicit(Tag to String)
  fullName: Engine.Core.Tag.Implicit(Engine.Core.Tag to System.String)
  type: Operator
  source:
    id: op_Implicit
    path: ''
    startLine: 968
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public static implicit operator string (Tag t)
    parameters:
    - id: t
      type: Engine.Core.Tag
    return:
      type: System.String
    content.vb: Public Shared Widening Operator CType(t As Tag) As String
  overload: Engine.Core.Tag.op_Implicit*
  nameWithType.vb: Tag.Widening(Tag to String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Core.Tag.Widening(Engine.Core.Tag to System.String)
  name.vb: Widening(Tag to String)
- uid: Engine.Core.Tag.op_Implicit(System.String)~Engine.Core.Tag
  commentId: M:Engine.Core.Tag.op_Implicit(System.String)~Engine.Core.Tag
  id: op_Implicit(System.String)~Engine.Core.Tag
  parent: Engine.Core.Tag
  langs:
  - csharp
  - vb
  name: Implicit(String to Tag)
  nameWithType: Tag.Implicit(String to Tag)
  fullName: Engine.Core.Tag.Implicit(System.String to Engine.Core.Tag)
  type: Operator
  source:
    id: op_Implicit
    path: ''
    startLine: 972
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public static implicit operator Tag(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: Engine.Core.Tag
    content.vb: Public Shared Widening Operator CType(s As String) As Tag
  overload: Engine.Core.Tag.op_Implicit*
  nameWithType.vb: Tag.Widening(String to Tag)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Core.Tag.Widening(System.String to Engine.Core.Tag)
  name.vb: Widening(String to Tag)
- uid: Engine.Core.Tag.op_Implicit(System.Int32)~Engine.Core.Tag
  commentId: M:Engine.Core.Tag.op_Implicit(System.Int32)~Engine.Core.Tag
  id: op_Implicit(System.Int32)~Engine.Core.Tag
  parent: Engine.Core.Tag
  langs:
  - csharp
  - vb
  name: Implicit(Int32 to Tag)
  nameWithType: Tag.Implicit(Int32 to Tag)
  fullName: Engine.Core.Tag.Implicit(System.Int32 to Engine.Core.Tag)
  type: Operator
  source:
    id: op_Implicit
    path: ''
    startLine: 976
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public static implicit operator Tag(int i)
    parameters:
    - id: i
      type: System.Int32
    return:
      type: Engine.Core.Tag
    content.vb: Public Shared Widening Operator CType(i As Integer) As Tag
  overload: Engine.Core.Tag.op_Implicit*
  nameWithType.vb: Tag.Widening(Int32 to Tag)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Core.Tag.Widening(System.Int32 to Engine.Core.Tag)
  name.vb: Widening(Int32 to Tag)
references:
- uid: Engine.Core
  commentId: N:Engine.Core
  name: Engine.Core
  nameWithType: Engine.Core
  fullName: Engine.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Engine.Core.Tag}
  commentId: T:System.Collections.Generic.List{Engine.Core.Tag}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Tag>
  nameWithType: List<Tag>
  fullName: System.Collections.Generic.List<Engine.Core.Tag>
  nameWithType.vb: List(Of Tag)
  fullName.vb: System.Collections.Generic.List(Of Engine.Core.Tag)
  name.vb: List(Of Tag)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Engine.Core.Tag
    name: Tag
    nameWithType: Tag
    fullName: Engine.Core.Tag
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Engine.Core.Tag
    name: Tag
    nameWithType: Tag
    fullName: Engine.Core.Tag
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Engine.Core.Tag.Name*
  commentId: Overload:Engine.Core.Tag.Name
  name: Name
  nameWithType: Tag.Name
  fullName: Engine.Core.Tag.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Engine.Core.Tag.#ctor*
  commentId: Overload:Engine.Core.Tag.#ctor
  name: Tag
  nameWithType: Tag.Tag
  fullName: Engine.Core.Tag.Tag
- uid: Engine.Core.Tag.SetName*
  commentId: Overload:Engine.Core.Tag.SetName
  name: SetName
  nameWithType: Tag.SetName
  fullName: Engine.Core.Tag.SetName
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Engine.Core.Tag.RemoveTag*
  commentId: Overload:Engine.Core.Tag.RemoveTag
  name: RemoveTag
  nameWithType: Tag.RemoveTag
  fullName: Engine.Core.Tag.RemoveTag
- uid: Engine.Core.Tag
  commentId: T:Engine.Core.Tag
  parent: Engine.Core
  name: Tag
  nameWithType: Tag
  fullName: Engine.Core.Tag
- uid: Engine.Core.Tag.op_Implicit*
  commentId: Overload:Engine.Core.Tag.op_Implicit
  name: Implicit
  nameWithType: Tag.Implicit
  fullName: Engine.Core.Tag.Implicit
  nameWithType.vb: Tag.Widening
  fullName.vb: Engine.Core.Tag.Widening
  name.vb: Widening
