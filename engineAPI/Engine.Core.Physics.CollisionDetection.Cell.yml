### YamlMime:ManagedReference
items:
- uid: Engine.Core.Physics.CollisionDetection.Cell
  commentId: T:Engine.Core.Physics.CollisionDetection.Cell
  id: Cell
  parent: Engine.Core.Physics.CollisionDetection
  children:
  - Engine.Core.Physics.CollisionDetection.Cell.#ctor(Vector2)
  - Engine.Core.Physics.CollisionDetection.Cell.#ctor(Vector2,Engine.Core.Physics.CollisionDetection.Cell)
  - Engine.Core.Physics.CollisionDetection.Cell.Contains(Mesh3D)
  - Engine.Core.Physics.CollisionDetection.Cell.Index
  - Engine.Core.Physics.CollisionDetection.Cell.meshes
  langs:
  - csharp
  - vb
  name: Cell
  nameWithType: Cell
  fullName: Engine.Core.Physics.CollisionDetection.Cell
  type: Class
  source:
    id: Cell
    path: ''
    startLine: 6272
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public class Cell
    content.vb: Public Class Cell
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.Physics.CollisionDetection.Cell.meshes
  commentId: F:Engine.Core.Physics.CollisionDetection.Cell.meshes
  id: meshes
  parent: Engine.Core.Physics.CollisionDetection.Cell
  langs:
  - csharp
  - vb
  name: meshes
  nameWithType: Cell.meshes
  fullName: Engine.Core.Physics.CollisionDetection.Cell.meshes
  type: Field
  source:
    id: meshes
    path: ''
    startLine: 6275
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public List<Mesh3D> meshes
    return:
      type: System.Collections.Generic.List{Mesh3D}
    content.vb: Public meshes As List(Of Mesh3D)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Physics.CollisionDetection.Cell.Index
  commentId: P:Engine.Core.Physics.CollisionDetection.Cell.Index
  id: Index
  parent: Engine.Core.Physics.CollisionDetection.Cell
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: Cell.Index
  fullName: Engine.Core.Physics.CollisionDetection.Cell.Index
  type: Property
  source:
    id: Index
    path: ''
    startLine: 6277
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public Vector2 Index { get; }
    parameters: []
    return:
      type: Vector2
    content.vb: Public ReadOnly Property Index As Vector2
  overload: Engine.Core.Physics.CollisionDetection.Cell.Index*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Physics.CollisionDetection.Cell.#ctor(Vector2)
  commentId: M:Engine.Core.Physics.CollisionDetection.Cell.#ctor(Vector2)
  id: '#ctor(Vector2)'
  parent: Engine.Core.Physics.CollisionDetection.Cell
  langs:
  - csharp
  - vb
  name: Cell(Vector2)
  nameWithType: Cell.Cell(Vector2)
  fullName: Engine.Core.Physics.CollisionDetection.Cell.Cell(Vector2)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 6279
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public Cell(Vector2 index)
    parameters:
    - id: index
      type: Vector2
    content.vb: Public Sub New(index As Vector2)
  overload: Engine.Core.Physics.CollisionDetection.Cell.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Physics.CollisionDetection.Cell.#ctor(Vector2,Engine.Core.Physics.CollisionDetection.Cell)
  commentId: M:Engine.Core.Physics.CollisionDetection.Cell.#ctor(Vector2,Engine.Core.Physics.CollisionDetection.Cell)
  id: '#ctor(Vector2,Engine.Core.Physics.CollisionDetection.Cell)'
  parent: Engine.Core.Physics.CollisionDetection.Cell
  langs:
  - csharp
  - vb
  name: Cell(Vector2, Cell)
  nameWithType: Cell.Cell(Vector2, Cell)
  fullName: Engine.Core.Physics.CollisionDetection.Cell.Cell(Vector2, Engine.Core.Physics.CollisionDetection.Cell)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 6285
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public Cell(Vector2 index, Cell cell)
    parameters:
    - id: index
      type: Vector2
    - id: cell
      type: Engine.Core.Physics.CollisionDetection.Cell
    content.vb: Public Sub New(index As Vector2, cell As Cell)
  overload: Engine.Core.Physics.CollisionDetection.Cell.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Physics.CollisionDetection.Cell.Contains(Mesh3D)
  commentId: M:Engine.Core.Physics.CollisionDetection.Cell.Contains(Mesh3D)
  id: Contains(Mesh3D)
  parent: Engine.Core.Physics.CollisionDetection.Cell
  langs:
  - csharp
  - vb
  name: Contains(Mesh3D)
  nameWithType: Cell.Contains(Mesh3D)
  fullName: Engine.Core.Physics.CollisionDetection.Cell.Contains(Mesh3D)
  type: Method
  source:
    id: Contains
    path: ''
    startLine: 6291
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Physics.CollisionDetection
  syntax:
    content: public bool Contains(Mesh3D mesh)
    parameters:
    - id: mesh
      type: Mesh3D
    return:
      type: System.Boolean
    content.vb: Public Function Contains(mesh As Mesh3D) As Boolean
  overload: Engine.Core.Physics.CollisionDetection.Cell.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Engine.Core.Physics.CollisionDetection
  commentId: N:Engine.Core.Physics.CollisionDetection
  name: Engine.Core.Physics.CollisionDetection
  nameWithType: Engine.Core.Physics.CollisionDetection
  fullName: Engine.Core.Physics.CollisionDetection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Mesh3D}
  commentId: T:System.Collections.Generic.List{Mesh3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Mesh3D>
  nameWithType: List<Mesh3D>
  fullName: System.Collections.Generic.List<Mesh3D>
  nameWithType.vb: List(Of Mesh3D)
  fullName.vb: System.Collections.Generic.List(Of Mesh3D)
  name.vb: List(Of Mesh3D)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mesh3D
    name: Mesh3D
    nameWithType: Mesh3D
    fullName: Mesh3D
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mesh3D
    name: Mesh3D
    nameWithType: Mesh3D
    fullName: Mesh3D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Engine.Core.Physics.CollisionDetection.Cell.Index*
  commentId: Overload:Engine.Core.Physics.CollisionDetection.Cell.Index
  name: Index
  nameWithType: Cell.Index
  fullName: Engine.Core.Physics.CollisionDetection.Cell.Index
- uid: Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: Engine.Core.Physics.CollisionDetection.Cell.#ctor*
  commentId: Overload:Engine.Core.Physics.CollisionDetection.Cell.#ctor
  name: Cell
  nameWithType: Cell.Cell
  fullName: Engine.Core.Physics.CollisionDetection.Cell.Cell
- uid: Engine.Core.Physics.CollisionDetection.Cell
  commentId: T:Engine.Core.Physics.CollisionDetection.Cell
  parent: Engine.Core.Physics.CollisionDetection
  name: Cell
  nameWithType: Cell
  fullName: Engine.Core.Physics.CollisionDetection.Cell
- uid: Engine.Core.Physics.CollisionDetection.Cell.Contains*
  commentId: Overload:Engine.Core.Physics.CollisionDetection.Cell.Contains
  name: Contains
  nameWithType: Cell.Contains
  fullName: Engine.Core.Physics.CollisionDetection.Cell.Contains
- uid: Mesh3D
  isExternal: true
  name: Mesh3D
  nameWithType: Mesh3D
  fullName: Mesh3D
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
