### YamlMime:ManagedReference
items:
- uid: Engine.Core.Components.Face3D
  commentId: T:Engine.Core.Components.Face3D
  id: Face3D
  parent: Engine.Core.Components
  children:
  - Engine.Core.Components.Face3D.#ctor(Engine.Core.Components.Vertex3D[],Engine.Core.Components.Edge3D[],Engine.Core.Object3D)
  - Engine.Core.Components.Face3D.Contains(Vector3)
  - Engine.Core.Components.Face3D.GetVertexOnFace(System.Single,System.Single)
  - Engine.Core.Components.Face3D.NormalVector
  - Engine.Core.Components.Face3D.SetFace(Engine.Core.Components.Vertex3D[],Engine.Core.Components.Edge3D[])
  langs:
  - csharp
  - vb
  name: Face3D
  nameWithType: Face3D
  fullName: Engine.Core.Components.Face3D
  type: Class
  source:
    id: Face3D
    path: ''
    startLine: 1269
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: 'public class Face3D : Component'
    content.vb: >-
      Public Class Face3D
          Inherits Component
  inheritance:
  - System.Object
  - Engine.Core.Component
  inheritedMembers:
  - Engine.Core.Component.Dependency
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.Components.Face3D.NormalVector
  commentId: P:Engine.Core.Components.Face3D.NormalVector
  id: NormalVector
  parent: Engine.Core.Components.Face3D
  langs:
  - csharp
  - vb
  name: NormalVector
  nameWithType: Face3D.NormalVector
  fullName: Engine.Core.Components.Face3D.NormalVector
  type: Property
  source:
    id: NormalVector
    path: ''
    startLine: 1276
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: public Vector3 NormalVector { get; }
    parameters: []
    return:
      type: Vector3
    content.vb: Public ReadOnly Property NormalVector As Vector3
  overload: Engine.Core.Components.Face3D.NormalVector*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Components.Face3D.#ctor(Engine.Core.Components.Vertex3D[],Engine.Core.Components.Edge3D[],Engine.Core.Object3D)
  commentId: M:Engine.Core.Components.Face3D.#ctor(Engine.Core.Components.Vertex3D[],Engine.Core.Components.Edge3D[],Engine.Core.Object3D)
  id: '#ctor(Engine.Core.Components.Vertex3D[],Engine.Core.Components.Edge3D[],Engine.Core.Object3D)'
  parent: Engine.Core.Components.Face3D
  langs:
  - csharp
  - vb
  name: Face3D(Vertex3D[], Edge3D[], Object3D)
  nameWithType: Face3D.Face3D(Vertex3D[], Edge3D[], Object3D)
  fullName: Engine.Core.Components.Face3D.Face3D(Engine.Core.Components.Vertex3D[], Engine.Core.Components.Edge3D[], Engine.Core.Object3D)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1278
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: public Face3D(Vertex3D[] vertices, Edge3D[] edges, Object3D dependency)
    parameters:
    - id: vertices
      type: Engine.Core.Components.Vertex3D[]
    - id: edges
      type: Engine.Core.Components.Edge3D[]
    - id: dependency
      type: Engine.Core.Object3D
    content.vb: Public Sub New(vertices As Vertex3D(), edges As Edge3D(), dependency As Object3D)
  overload: Engine.Core.Components.Face3D.#ctor*
  nameWithType.vb: Face3D.Face3D(Vertex3D(), Edge3D(), Object3D)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Components.Face3D.Face3D(Engine.Core.Components.Vertex3D(), Engine.Core.Components.Edge3D(), Engine.Core.Object3D)
  name.vb: Face3D(Vertex3D(), Edge3D(), Object3D)
- uid: Engine.Core.Components.Face3D.Contains(Vector3)
  commentId: M:Engine.Core.Components.Face3D.Contains(Vector3)
  id: Contains(Vector3)
  parent: Engine.Core.Components.Face3D
  langs:
  - csharp
  - vb
  name: Contains(Vector3)
  nameWithType: Face3D.Contains(Vector3)
  fullName: Engine.Core.Components.Face3D.Contains(Vector3)
  type: Method
  source:
    id: Contains
    path: ''
    startLine: 1286
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: >-
      [Obsolete("Not Implemented, needs LCS3.ToLocalPosition(gp) first")]

      public bool Contains(Vector3 globalPosition)
    parameters:
    - id: globalPosition
      type: Vector3
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("Not Implemented, needs LCS3.ToLocalPosition(gp) first")>

      Public Function Contains(globalPosition As Vector3) As Boolean
  overload: Engine.Core.Components.Face3D.Contains*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Not Implemented, needs LCS3.ToLocalPosition(gp) first
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Components.Face3D.GetVertexOnFace(System.Single,System.Single)
  commentId: M:Engine.Core.Components.Face3D.GetVertexOnFace(System.Single,System.Single)
  id: GetVertexOnFace(System.Single,System.Single)
  parent: Engine.Core.Components.Face3D
  langs:
  - csharp
  - vb
  name: GetVertexOnFace(Single, Single)
  nameWithType: Face3D.GetVertexOnFace(Single, Single)
  fullName: Engine.Core.Components.Face3D.GetVertexOnFace(System.Single, System.Single)
  type: Method
  source:
    id: GetVertexOnFace
    path: ''
    startLine: 1292
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: public Vertex3D GetVertexOnFace(float s, float t)
    parameters:
    - id: s
      type: System.Single
    - id: t
      type: System.Single
    return:
      type: Engine.Core.Components.Vertex3D
    content.vb: Public Function GetVertexOnFace(s As Single, t As Single) As Vertex3D
  overload: Engine.Core.Components.Face3D.GetVertexOnFace*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Components.Face3D.SetFace(Engine.Core.Components.Vertex3D[],Engine.Core.Components.Edge3D[])
  commentId: M:Engine.Core.Components.Face3D.SetFace(Engine.Core.Components.Vertex3D[],Engine.Core.Components.Edge3D[])
  id: SetFace(Engine.Core.Components.Vertex3D[],Engine.Core.Components.Edge3D[])
  parent: Engine.Core.Components.Face3D
  langs:
  - csharp
  - vb
  name: SetFace(Vertex3D[], Edge3D[])
  nameWithType: Face3D.SetFace(Vertex3D[], Edge3D[])
  fullName: Engine.Core.Components.Face3D.SetFace(Engine.Core.Components.Vertex3D[], Engine.Core.Components.Edge3D[])
  type: Method
  source:
    id: SetFace
    path: ''
    startLine: 1308
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  summary: "\nSetups the face and returns if the operation was successfull\n"
  example: []
  syntax:
    content: public bool SetFace(Vertex3D[] vertices, Edge3D[] edges)
    parameters:
    - id: vertices
      type: Engine.Core.Components.Vertex3D[]
      description: ''
    - id: edges
      type: Engine.Core.Components.Edge3D[]
      description: ''
    return:
      type: System.Boolean
      description: Returns true if the face is set correctly
    content.vb: Public Function SetFace(vertices As Vertex3D(), edges As Edge3D()) As Boolean
  overload: Engine.Core.Components.Face3D.SetFace*
  nameWithType.vb: Face3D.SetFace(Vertex3D(), Edge3D())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Components.Face3D.SetFace(Engine.Core.Components.Vertex3D(), Engine.Core.Components.Edge3D())
  name.vb: SetFace(Vertex3D(), Edge3D())
references:
- uid: Engine.Core.Components
  commentId: N:Engine.Core.Components
  name: Engine.Core.Components
  nameWithType: Engine.Core.Components
  fullName: Engine.Core.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Engine.Core.Component
  commentId: T:Engine.Core.Component
  parent: Engine.Core
  name: Component
  nameWithType: Component
  fullName: Engine.Core.Component
- uid: Engine.Core.Component.Dependency
  commentId: P:Engine.Core.Component.Dependency
  parent: Engine.Core.Component
  name: Dependency
  nameWithType: Component.Dependency
  fullName: Engine.Core.Component.Dependency
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Core
  commentId: N:Engine.Core
  name: Engine.Core
  nameWithType: Engine.Core
  fullName: Engine.Core
- uid: Engine.Core.Components.Face3D.NormalVector*
  commentId: Overload:Engine.Core.Components.Face3D.NormalVector
  name: NormalVector
  nameWithType: Face3D.NormalVector
  fullName: Engine.Core.Components.Face3D.NormalVector
- uid: Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: Engine.Core.Components.Face3D.#ctor*
  commentId: Overload:Engine.Core.Components.Face3D.#ctor
  name: Face3D
  nameWithType: Face3D.Face3D
  fullName: Engine.Core.Components.Face3D.Face3D
- uid: Engine.Core.Components.Vertex3D[]
  isExternal: true
  name: Vertex3D[]
  nameWithType: Vertex3D[]
  fullName: Engine.Core.Components.Vertex3D[]
  nameWithType.vb: Vertex3D()
  fullName.vb: Engine.Core.Components.Vertex3D()
  name.vb: Vertex3D()
  spec.csharp:
  - uid: Engine.Core.Components.Vertex3D
    name: Vertex3D
    nameWithType: Vertex3D
    fullName: Engine.Core.Components.Vertex3D
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Engine.Core.Components.Vertex3D
    name: Vertex3D
    nameWithType: Vertex3D
    fullName: Engine.Core.Components.Vertex3D
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Engine.Core.Components.Edge3D[]
  isExternal: true
  name: Edge3D[]
  nameWithType: Edge3D[]
  fullName: Engine.Core.Components.Edge3D[]
  nameWithType.vb: Edge3D()
  fullName.vb: Engine.Core.Components.Edge3D()
  name.vb: Edge3D()
  spec.csharp:
  - uid: Engine.Core.Components.Edge3D
    name: Edge3D
    nameWithType: Edge3D
    fullName: Engine.Core.Components.Edge3D
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Engine.Core.Components.Edge3D
    name: Edge3D
    nameWithType: Edge3D
    fullName: Engine.Core.Components.Edge3D
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Engine.Core.Object3D
  commentId: T:Engine.Core.Object3D
  parent: Engine.Core
  name: Object3D
  nameWithType: Object3D
  fullName: Engine.Core.Object3D
- uid: Engine.Core.Components.Face3D.Contains*
  commentId: Overload:Engine.Core.Components.Face3D.Contains
  name: Contains
  nameWithType: Face3D.Contains
  fullName: Engine.Core.Components.Face3D.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Engine.Core.Components.Face3D.GetVertexOnFace*
  commentId: Overload:Engine.Core.Components.Face3D.GetVertexOnFace
  name: GetVertexOnFace
  nameWithType: Face3D.GetVertexOnFace
  fullName: Engine.Core.Components.Face3D.GetVertexOnFace
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Engine.Core.Components.Vertex3D
  commentId: T:Engine.Core.Components.Vertex3D
  parent: Engine.Core.Components
  name: Vertex3D
  nameWithType: Vertex3D
  fullName: Engine.Core.Components.Vertex3D
- uid: Engine.Core.Components.Face3D.SetFace*
  commentId: Overload:Engine.Core.Components.Face3D.SetFace
  name: SetFace
  nameWithType: Face3D.SetFace
  fullName: Engine.Core.Components.Face3D.SetFace
