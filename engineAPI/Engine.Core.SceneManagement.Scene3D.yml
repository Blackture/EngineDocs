### YamlMime:ManagedReference
items:
- uid: Engine.Core.SceneManagement.Scene3D
  commentId: T:Engine.Core.SceneManagement.Scene3D
  id: Scene3D
  parent: Engine.Core.SceneManagement
  children:
  - Engine.Core.SceneManagement.Scene3D.#ctor(System.Int32)
  - Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem
  langs:
  - csharp
  - vb
  name: Scene3D
  nameWithType: Scene3D
  fullName: Engine.Core.SceneManagement.Scene3D
  type: Class
  source:
    id: Scene3D
    path: ''
    startLine: 5485
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.SceneManagement
  syntax:
    content: 'public class Scene3D : Scene'
    content.vb: >-
      Public Class Scene3D
          Inherits Scene
  inheritance:
  - System.Object
  - Engine.Core.SceneManagement.Scene
  inheritedMembers:
  - Engine.Core.SceneManagement.Scene.Name
  - Engine.Core.SceneManagement.Scene.SceneId
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem
  commentId: P:Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem
  id: GlobalCoordinateSystem
  parent: Engine.Core.SceneManagement.Scene3D
  langs:
  - csharp
  - vb
  name: GlobalCoordinateSystem
  nameWithType: Scene3D.GlobalCoordinateSystem
  fullName: Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem
  type: Property
  source:
    id: GlobalCoordinateSystem
    path: ''
    startLine: 5488
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.SceneManagement
  syntax:
    content: public GCS3 GlobalCoordinateSystem { get; }
    parameters: []
    return:
      type: GCS3
    content.vb: Public ReadOnly Property GlobalCoordinateSystem As GCS3
  overload: Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.SceneManagement.Scene3D.#ctor(System.Int32)
  commentId: M:Engine.Core.SceneManagement.Scene3D.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Engine.Core.SceneManagement.Scene3D
  langs:
  - csharp
  - vb
  name: Scene3D(Int32)
  nameWithType: Scene3D.Scene3D(Int32)
  fullName: Engine.Core.SceneManagement.Scene3D.Scene3D(System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 5490
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.SceneManagement
  syntax:
    content: public Scene3D(int sceneId)
    parameters:
    - id: sceneId
      type: System.Int32
    content.vb: Public Sub New(sceneId As Integer)
  overload: Engine.Core.SceneManagement.Scene3D.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Engine.Core.SceneManagement
  commentId: N:Engine.Core.SceneManagement
  name: Engine.Core.SceneManagement
  nameWithType: Engine.Core.SceneManagement
  fullName: Engine.Core.SceneManagement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Engine.Core.SceneManagement.Scene
  commentId: T:Engine.Core.SceneManagement.Scene
  parent: Engine.Core.SceneManagement
  name: Scene
  nameWithType: Scene
  fullName: Engine.Core.SceneManagement.Scene
- uid: Engine.Core.SceneManagement.Scene.Name
  commentId: F:Engine.Core.SceneManagement.Scene.Name
  parent: Engine.Core.SceneManagement.Scene
  name: Name
  nameWithType: Scene.Name
  fullName: Engine.Core.SceneManagement.Scene.Name
- uid: Engine.Core.SceneManagement.Scene.SceneId
  commentId: P:Engine.Core.SceneManagement.Scene.SceneId
  parent: Engine.Core.SceneManagement.Scene
  name: SceneId
  nameWithType: Scene.SceneId
  fullName: Engine.Core.SceneManagement.Scene.SceneId
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem*
  commentId: Overload:Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem
  name: GlobalCoordinateSystem
  nameWithType: Scene3D.GlobalCoordinateSystem
  fullName: Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem
- uid: GCS3
  commentId: '!:GCS3'
  isExternal: true
  name: GCS3
  nameWithType: GCS3
  fullName: GCS3
- uid: Engine.Core.SceneManagement.Scene3D.#ctor*
  commentId: Overload:Engine.Core.SceneManagement.Scene3D.#ctor
  name: Scene3D
  nameWithType: Scene3D.Scene3D
  fullName: Engine.Core.SceneManagement.Scene3D.Scene3D
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
