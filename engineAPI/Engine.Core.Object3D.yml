### YamlMime:ManagedReference
items:
- uid: Engine.Core.Object3D
  commentId: T:Engine.Core.Object3D
  id: Object3D
  parent: Engine.Core
  children:
  - Engine.Core.Object3D.#ctor(System.Boolean)
  - Engine.Core.Object3D.#ctor(Vector3,RotationVector3,System.Boolean)
  - Engine.Core.Object3D.#ctor(Vector3,RotationVector3,Vector3,System.Boolean)
  - Engine.Core.Object3D.#ctor(Vector3,System.Boolean)
  - Engine.Core.Object3D.AddComponent``1(``0)
  - Engine.Core.Object3D.Components
  - Engine.Core.Object3D.FindChild(System.String)
  - Engine.Core.Object3D.GetComponent``1
  - Engine.Core.Object3D.GetComponent``1(``0)
  - Engine.Core.Object3D.GetComponents``1
  - Engine.Core.Object3D.GetComponents``1(``0)
  - Engine.Core.Object3D.Local
  - Engine.Core.Object3D.Name
  - Engine.Core.Object3D.op_Implicit(Engine.Core.Object3D)~LCS3
  - Engine.Core.Object3D.Parent
  - Engine.Core.Object3D.RemoveComponent``1(``0)
  - Engine.Core.Object3D.SetParent(Engine.Core.Object3D,System.Boolean)
  langs:
  - csharp
  - vb
  name: Object3D
  nameWithType: Object3D
  fullName: Engine.Core.Object3D
  type: Class
  source:
    id: Object3D
    path: ''
    startLine: 273
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public class Object3D
    content.vb: Public Class Object3D
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.Object3D.Name
  commentId: F:Engine.Core.Object3D.Name
  id: Name
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Object3D.Name
  fullName: Engine.Core.Object3D.Name
  type: Field
  source:
    id: Name
    path: ''
    startLine: 278
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public string Name
    return:
      type: System.String
    content.vb: Public Name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Object3D.Components
  commentId: F:Engine.Core.Object3D.Components
  id: Components
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: Components
  nameWithType: Object3D.Components
  fullName: Engine.Core.Object3D.Components
  type: Field
  source:
    id: Components
    path: ''
    startLine: 279
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public List<Component> Components
    return:
      type: System.Collections.Generic.List{Engine.Core.Component}
    content.vb: Public Components As List(Of Component)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Object3D.Local
  commentId: P:Engine.Core.Object3D.Local
  id: Local
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: Local
  nameWithType: Object3D.Local
  fullName: Engine.Core.Object3D.Local
  type: Property
  source:
    id: Local
    path: ''
    startLine: 283
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  summary: "\nlocal coordinate system of the object\n"
  example: []
  syntax:
    content: public LCS3 Local { get; }
    parameters: []
    return:
      type: LCS3
    content.vb: Public ReadOnly Property Local As LCS3
  overload: Engine.Core.Object3D.Local*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Object3D.Parent
  commentId: P:Engine.Core.Object3D.Parent
  id: Parent
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: Object3D.Parent
  fullName: Engine.Core.Object3D.Parent
  type: Property
  source:
    id: Parent
    path: ''
    startLine: 288
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  summary: "\nThe set-accessor resets the local transformations the new parent ones. To keep this Object3D&apos;s transformation, use the method instead.\n"
  example: []
  syntax:
    content: public Object3D Parent { get; set; }
    parameters: []
    return:
      type: Engine.Core.Object3D
    content.vb: Public Property Parent As Object3D
  overload: Engine.Core.Object3D.Parent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Engine.Core.Object3D.#ctor(System.Boolean)
  commentId: M:Engine.Core.Object3D.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: Object3D(Boolean)
  nameWithType: Object3D.Object3D(Boolean)
  fullName: Engine.Core.Object3D.Object3D(System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 294
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public Object3D(bool global = false)
    parameters:
    - id: global
      type: System.Boolean
    content.vb: Public Sub New(global As Boolean = False)
  overload: Engine.Core.Object3D.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Object3D.#ctor(Vector3,System.Boolean)
  commentId: M:Engine.Core.Object3D.#ctor(Vector3,System.Boolean)
  id: '#ctor(Vector3,System.Boolean)'
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: Object3D(Vector3, Boolean)
  nameWithType: Object3D.Object3D(Vector3, Boolean)
  fullName: Engine.Core.Object3D.Object3D(Vector3, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 298
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public Object3D(Vector3 position, bool global = false)
    parameters:
    - id: position
      type: Vector3
    - id: global
      type: System.Boolean
    content.vb: Public Sub New(position As Vector3, global As Boolean = False)
  overload: Engine.Core.Object3D.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Object3D.#ctor(Vector3,RotationVector3,System.Boolean)
  commentId: M:Engine.Core.Object3D.#ctor(Vector3,RotationVector3,System.Boolean)
  id: '#ctor(Vector3,RotationVector3,System.Boolean)'
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: Object3D(Vector3, RotationVector3, Boolean)
  nameWithType: Object3D.Object3D(Vector3, RotationVector3, Boolean)
  fullName: Engine.Core.Object3D.Object3D(Vector3, RotationVector3, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 302
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public Object3D(Vector3 position, RotationVector3 rotation, bool global = false)
    parameters:
    - id: position
      type: Vector3
    - id: rotation
      type: RotationVector3
    - id: global
      type: System.Boolean
    content.vb: Public Sub New(position As Vector3, rotation As RotationVector3, global As Boolean = False)
  overload: Engine.Core.Object3D.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Object3D.#ctor(Vector3,RotationVector3,Vector3,System.Boolean)
  commentId: M:Engine.Core.Object3D.#ctor(Vector3,RotationVector3,Vector3,System.Boolean)
  id: '#ctor(Vector3,RotationVector3,Vector3,System.Boolean)'
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: Object3D(Vector3, RotationVector3, Vector3, Boolean)
  nameWithType: Object3D.Object3D(Vector3, RotationVector3, Vector3, Boolean)
  fullName: Engine.Core.Object3D.Object3D(Vector3, RotationVector3, Vector3, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 306
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public Object3D(Vector3 position, RotationVector3 rotation, Vector3 scale, bool global = false)
    parameters:
    - id: position
      type: Vector3
    - id: rotation
      type: RotationVector3
    - id: scale
      type: Vector3
    - id: global
      type: System.Boolean
    content.vb: Public Sub New(position As Vector3, rotation As RotationVector3, scale As Vector3, global As Boolean = False)
  overload: Engine.Core.Object3D.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Object3D.SetParent(Engine.Core.Object3D,System.Boolean)
  commentId: M:Engine.Core.Object3D.SetParent(Engine.Core.Object3D,System.Boolean)
  id: SetParent(Engine.Core.Object3D,System.Boolean)
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: SetParent(Object3D, Boolean)
  nameWithType: Object3D.SetParent(Object3D, Boolean)
  fullName: Engine.Core.Object3D.SetParent(Engine.Core.Object3D, System.Boolean)
  type: Method
  source:
    id: SetParent
    path: ''
    startLine: 347
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public void SetParent(Object3D parent, bool keepGlobalTransformation = false)
    parameters:
    - id: parent
      type: Engine.Core.Object3D
    - id: keepGlobalTransformation
      type: System.Boolean
    content.vb: Public Sub SetParent(parent As Object3D, keepGlobalTransformation As Boolean = False)
  overload: Engine.Core.Object3D.SetParent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Object3D.AddComponent``1(``0)
  commentId: M:Engine.Core.Object3D.AddComponent``1(``0)
  id: AddComponent``1(``0)
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: AddComponent<T>(T)
  nameWithType: Object3D.AddComponent<T>(T)
  fullName: Engine.Core.Object3D.AddComponent<T>(T)
  type: Method
  source:
    id: AddComponent
    path: ''
    startLine: 364
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: >-
      public T AddComponent<T>(T component)
          where T : Component
    parameters:
    - id: component
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function AddComponent(Of T As Component)(component As T) As T
  overload: Engine.Core.Object3D.AddComponent*
  nameWithType.vb: Object3D.AddComponent(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Object3D.AddComponent(Of T)(T)
  name.vb: AddComponent(Of T)(T)
- uid: Engine.Core.Object3D.RemoveComponent``1(``0)
  commentId: M:Engine.Core.Object3D.RemoveComponent``1(``0)
  id: RemoveComponent``1(``0)
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: RemoveComponent<T>(T)
  nameWithType: Object3D.RemoveComponent<T>(T)
  fullName: Engine.Core.Object3D.RemoveComponent<T>(T)
  type: Method
  source:
    id: RemoveComponent
    path: ''
    startLine: 371
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: >-
      public void RemoveComponent<T>(T component)
          where T : Component
    parameters:
    - id: component
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Sub RemoveComponent(Of T As Component)(component As T)
  overload: Engine.Core.Object3D.RemoveComponent*
  nameWithType.vb: Object3D.RemoveComponent(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Object3D.RemoveComponent(Of T)(T)
  name.vb: RemoveComponent(Of T)(T)
- uid: Engine.Core.Object3D.GetComponent``1(``0)
  commentId: M:Engine.Core.Object3D.GetComponent``1(``0)
  id: GetComponent``1(``0)
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: GetComponent<T>(T)
  nameWithType: Object3D.GetComponent<T>(T)
  fullName: Engine.Core.Object3D.GetComponent<T>(T)
  type: Method
  source:
    id: GetComponent
    path: ''
    startLine: 380
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: >-
      public T GetComponent<T>(T component)
          where T : Component
    parameters:
    - id: component
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetComponent(Of T As Component)(component As T) As T
  overload: Engine.Core.Object3D.GetComponent*
  nameWithType.vb: Object3D.GetComponent(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Object3D.GetComponent(Of T)(T)
  name.vb: GetComponent(Of T)(T)
- uid: Engine.Core.Object3D.GetComponent``1
  commentId: M:Engine.Core.Object3D.GetComponent``1
  id: GetComponent``1
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: GetComponent<T>()
  nameWithType: Object3D.GetComponent<T>()
  fullName: Engine.Core.Object3D.GetComponent<T>()
  type: Method
  source:
    id: GetComponent
    path: ''
    startLine: 384
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: >-
      public T GetComponent<T>()
          where T : Component
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetComponent(Of T As Component) As T
  overload: Engine.Core.Object3D.GetComponent*
  nameWithType.vb: Object3D.GetComponent(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Object3D.GetComponent(Of T)()
  name.vb: GetComponent(Of T)()
- uid: Engine.Core.Object3D.GetComponents``1(``0)
  commentId: M:Engine.Core.Object3D.GetComponents``1(``0)
  id: GetComponents``1(``0)
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: GetComponents<T>(T)
  nameWithType: Object3D.GetComponents<T>(T)
  fullName: Engine.Core.Object3D.GetComponents<T>(T)
  type: Method
  source:
    id: GetComponents
    path: ''
    startLine: 389
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: >-
      public List<T> GetComponents<T>(T component)
          where T : Component
    parameters:
    - id: component
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Function GetComponents(Of T As Component)(component As T) As List(Of T)
  overload: Engine.Core.Object3D.GetComponents*
  nameWithType.vb: Object3D.GetComponents(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Object3D.GetComponents(Of T)(T)
  name.vb: GetComponents(Of T)(T)
- uid: Engine.Core.Object3D.GetComponents``1
  commentId: M:Engine.Core.Object3D.GetComponents``1
  id: GetComponents``1
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: GetComponents<T>()
  nameWithType: Object3D.GetComponents<T>()
  fullName: Engine.Core.Object3D.GetComponents<T>()
  type: Method
  source:
    id: GetComponents
    path: ''
    startLine: 394
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: >-
      public List<T> GetComponents<T>()
          where T : Component
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Function GetComponents(Of T As Component) As List(Of T)
  overload: Engine.Core.Object3D.GetComponents*
  nameWithType.vb: Object3D.GetComponents(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Object3D.GetComponents(Of T)()
  name.vb: GetComponents(Of T)()
- uid: Engine.Core.Object3D.FindChild(System.String)
  commentId: M:Engine.Core.Object3D.FindChild(System.String)
  id: FindChild(System.String)
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: FindChild(String)
  nameWithType: Object3D.FindChild(String)
  fullName: Engine.Core.Object3D.FindChild(System.String)
  type: Method
  source:
    id: FindChild
    path: ''
    startLine: 404
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  summary: "\nFinds and returns the first child found with the inputted <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code>.\n"
  example: []
  syntax:
    content: public Object3D FindChild(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: Engine.Core.Object3D
      description: ''
    content.vb: Public Function FindChild(name As String) As Object3D
  overload: Engine.Core.Object3D.FindChild*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Object3D.op_Implicit(Engine.Core.Object3D)~LCS3
  commentId: M:Engine.Core.Object3D.op_Implicit(Engine.Core.Object3D)~LCS3
  id: op_Implicit(Engine.Core.Object3D)~LCS3
  parent: Engine.Core.Object3D
  langs:
  - csharp
  - vb
  name: Implicit(Object3D to LCS3)
  nameWithType: Object3D.Implicit(Object3D to LCS3)
  fullName: Engine.Core.Object3D.Implicit(Engine.Core.Object3D to LCS3)
  type: Operator
  source:
    id: op_Implicit
    path: ''
    startLine: 417
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core
  syntax:
    content: public static implicit operator LCS3(Object3D o)
    parameters:
    - id: o
      type: Engine.Core.Object3D
    return:
      type: LCS3
    content.vb: Public Shared Widening Operator CType(o As Object3D) As LCS3
  overload: Engine.Core.Object3D.op_Implicit*
  nameWithType.vb: Object3D.Widening(Object3D to LCS3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Core.Object3D.Widening(Engine.Core.Object3D to LCS3)
  name.vb: Widening(Object3D to LCS3)
references:
- uid: Engine.Core
  commentId: N:Engine.Core
  name: Engine.Core
  nameWithType: Engine.Core
  fullName: Engine.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{Engine.Core.Component}
  commentId: T:System.Collections.Generic.List{Engine.Core.Component}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Component>
  nameWithType: List<Component>
  fullName: System.Collections.Generic.List<Engine.Core.Component>
  nameWithType.vb: List(Of Component)
  fullName.vb: System.Collections.Generic.List(Of Engine.Core.Component)
  name.vb: List(Of Component)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Engine.Core.Component
    name: Component
    nameWithType: Component
    fullName: Engine.Core.Component
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Engine.Core.Component
    name: Component
    nameWithType: Component
    fullName: Engine.Core.Component
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Engine.Core.Object3D.Local*
  commentId: Overload:Engine.Core.Object3D.Local
  name: Local
  nameWithType: Object3D.Local
  fullName: Engine.Core.Object3D.Local
- uid: LCS3
  isExternal: true
  name: LCS3
  nameWithType: LCS3
  fullName: LCS3
- uid: Engine.Core.Object3D.Parent*
  commentId: Overload:Engine.Core.Object3D.Parent
  name: Parent
  nameWithType: Object3D.Parent
  fullName: Engine.Core.Object3D.Parent
- uid: Engine.Core.Object3D
  commentId: T:Engine.Core.Object3D
  parent: Engine.Core
  name: Object3D
  nameWithType: Object3D
  fullName: Engine.Core.Object3D
- uid: Engine.Core.Object3D.#ctor*
  commentId: Overload:Engine.Core.Object3D.#ctor
  name: Object3D
  nameWithType: Object3D.Object3D
  fullName: Engine.Core.Object3D.Object3D
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: RotationVector3
  isExternal: true
  name: RotationVector3
  nameWithType: RotationVector3
  fullName: RotationVector3
- uid: Engine.Core.Object3D.SetParent*
  commentId: Overload:Engine.Core.Object3D.SetParent
  name: SetParent
  nameWithType: Object3D.SetParent
  fullName: Engine.Core.Object3D.SetParent
- uid: Engine.Core.Object3D.AddComponent*
  commentId: Overload:Engine.Core.Object3D.AddComponent
  name: AddComponent
  nameWithType: Object3D.AddComponent
  fullName: Engine.Core.Object3D.AddComponent
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Engine.Core.Object3D.RemoveComponent*
  commentId: Overload:Engine.Core.Object3D.RemoveComponent
  name: RemoveComponent
  nameWithType: Object3D.RemoveComponent
  fullName: Engine.Core.Object3D.RemoveComponent
- uid: Engine.Core.Object3D.GetComponent*
  commentId: Overload:Engine.Core.Object3D.GetComponent
  name: GetComponent
  nameWithType: Object3D.GetComponent
  fullName: Engine.Core.Object3D.GetComponent
- uid: Engine.Core.Object3D.GetComponents*
  commentId: Overload:Engine.Core.Object3D.GetComponents
  name: GetComponents
  nameWithType: Object3D.GetComponents
  fullName: Engine.Core.Object3D.GetComponents
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Core.Object3D.FindChild*
  commentId: Overload:Engine.Core.Object3D.FindChild
  name: FindChild
  nameWithType: Object3D.FindChild
  fullName: Engine.Core.Object3D.FindChild
- uid: Engine.Core.Object3D.op_Implicit*
  commentId: Overload:Engine.Core.Object3D.op_Implicit
  name: Implicit
  nameWithType: Object3D.Implicit
  fullName: Engine.Core.Object3D.Implicit
  nameWithType.vb: Object3D.Widening
  fullName.vb: Engine.Core.Object3D.Widening
  name.vb: Widening
