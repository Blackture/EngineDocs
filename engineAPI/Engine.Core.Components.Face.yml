### YamlMime:ManagedReference
items:
- uid: Engine.Core.Components.Face
  commentId: T:Engine.Core.Components.Face
  id: Face
  parent: Engine.Core.Components
  children:
  - Engine.Core.Components.Face.#ctor(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[],Engine.Core.Object3D)
  - Engine.Core.Components.Face.GetVertexOnFace(System.Single,System.Single)
  - Engine.Core.Components.Face.NormalVector
  - Engine.Core.Components.Face.SetFace(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[])
  langs:
  - csharp
  - vb
  name: Face
  nameWithType: Face
  fullName: Engine.Core.Components.Face
  type: Class
  source:
    id: Face
    path: ''
    startLine: 342
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: 'public class Face : Component'
    content.vb: >-
      Public Class Face
          Inherits Component
  inheritance:
  - System.Object
  - Engine.Core.Component
  inheritedMembers:
  - Engine.Core.Component.dependency
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Core.Components.Face.NormalVector
  commentId: P:Engine.Core.Components.Face.NormalVector
  id: NormalVector
  parent: Engine.Core.Components.Face
  langs:
  - csharp
  - vb
  name: NormalVector
  nameWithType: Face.NormalVector
  fullName: Engine.Core.Components.Face.NormalVector
  type: Property
  source:
    id: NormalVector
    path: ''
    startLine: 349
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: public Vector3 NormalVector { get; }
    parameters: []
    return:
      type: Vector3
    content.vb: Public ReadOnly Property NormalVector As Vector3
  overload: Engine.Core.Components.Face.NormalVector*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Engine.Core.Components.Face.#ctor(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[],Engine.Core.Object3D)
  commentId: M:Engine.Core.Components.Face.#ctor(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[],Engine.Core.Object3D)
  id: '#ctor(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[],Engine.Core.Object3D)'
  parent: Engine.Core.Components.Face
  langs:
  - csharp
  - vb
  name: Face(Vertex[], Edge[], Object3D)
  nameWithType: Face.Face(Vertex[], Edge[], Object3D)
  fullName: Engine.Core.Components.Face.Face(Engine.Core.Components.Vertex[], Engine.Core.Components.Edge[], Engine.Core.Object3D)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 351
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: public Face(Vertex[] vertices, Edge[] edges, Object3D dependency)
    parameters:
    - id: vertices
      type: Engine.Core.Components.Vertex[]
    - id: edges
      type: Engine.Core.Components.Edge[]
    - id: dependency
      type: Engine.Core.Object3D
    content.vb: Public Sub New(vertices As Vertex(), edges As Edge(), dependency As Object3D)
  overload: Engine.Core.Components.Face.#ctor*
  nameWithType.vb: Face.Face(Vertex(), Edge(), Object3D)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Components.Face.Face(Engine.Core.Components.Vertex(), Engine.Core.Components.Edge(), Engine.Core.Object3D)
  name.vb: Face(Vertex(), Edge(), Object3D)
- uid: Engine.Core.Components.Face.GetVertexOnFace(System.Single,System.Single)
  commentId: M:Engine.Core.Components.Face.GetVertexOnFace(System.Single,System.Single)
  id: GetVertexOnFace(System.Single,System.Single)
  parent: Engine.Core.Components.Face
  langs:
  - csharp
  - vb
  name: GetVertexOnFace(Single, Single)
  nameWithType: Face.GetVertexOnFace(Single, Single)
  fullName: Engine.Core.Components.Face.GetVertexOnFace(System.Single, System.Single)
  type: Method
  source:
    id: GetVertexOnFace
    path: ''
    startLine: 359
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  syntax:
    content: public Vertex GetVertexOnFace(float s, float t)
    parameters:
    - id: s
      type: System.Single
    - id: t
      type: System.Single
    return:
      type: Engine.Core.Components.Vertex
    content.vb: Public Function GetVertexOnFace(s As Single, t As Single) As Vertex
  overload: Engine.Core.Components.Face.GetVertexOnFace*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Core.Components.Face.SetFace(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[])
  commentId: M:Engine.Core.Components.Face.SetFace(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[])
  id: SetFace(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[])
  parent: Engine.Core.Components.Face
  langs:
  - csharp
  - vb
  name: SetFace(Vertex[], Edge[])
  nameWithType: Face.SetFace(Vertex[], Edge[])
  fullName: Engine.Core.Components.Face.SetFace(Engine.Core.Components.Vertex[], Engine.Core.Components.Edge[])
  type: Method
  source:
    id: SetFace
    path: ''
    startLine: 375
  assemblies:
  - cs.temp.dll
  namespace: Engine.Core.Components
  summary: "\nSetups the face and returns if the operation was successfull\n"
  example: []
  syntax:
    content: public bool SetFace(Vertex[] vertices, Edge[] edges)
    parameters:
    - id: vertices
      type: Engine.Core.Components.Vertex[]
      description: ''
    - id: edges
      type: Engine.Core.Components.Edge[]
      description: ''
    return:
      type: System.Boolean
      description: Returns true if the face is set correctly
    content.vb: Public Function SetFace(vertices As Vertex(), edges As Edge()) As Boolean
  overload: Engine.Core.Components.Face.SetFace*
  nameWithType.vb: Face.SetFace(Vertex(), Edge())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Core.Components.Face.SetFace(Engine.Core.Components.Vertex(), Engine.Core.Components.Edge())
  name.vb: SetFace(Vertex(), Edge())
references:
- uid: Engine.Core.Components
  commentId: N:Engine.Core.Components
  name: Engine.Core.Components
  nameWithType: Engine.Core.Components
  fullName: Engine.Core.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Engine.Core.Component
  commentId: T:Engine.Core.Component
  parent: Engine.Core
  name: Component
  nameWithType: Component
  fullName: Engine.Core.Component
- uid: Engine.Core.Component.dependency
  commentId: F:Engine.Core.Component.dependency
  parent: Engine.Core.Component
  name: dependency
  nameWithType: Component.dependency
  fullName: Engine.Core.Component.dependency
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Core
  commentId: N:Engine.Core
  name: Engine.Core
  nameWithType: Engine.Core
  fullName: Engine.Core
- uid: Engine.Core.Components.Face.NormalVector*
  commentId: Overload:Engine.Core.Components.Face.NormalVector
  name: NormalVector
  nameWithType: Face.NormalVector
  fullName: Engine.Core.Components.Face.NormalVector
- uid: Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: Engine.Core.Components.Face.#ctor*
  commentId: Overload:Engine.Core.Components.Face.#ctor
  name: Face
  nameWithType: Face.Face
  fullName: Engine.Core.Components.Face.Face
- uid: Engine.Core.Components.Vertex[]
  isExternal: true
  name: Vertex[]
  nameWithType: Vertex[]
  fullName: Engine.Core.Components.Vertex[]
  nameWithType.vb: Vertex()
  fullName.vb: Engine.Core.Components.Vertex()
  name.vb: Vertex()
  spec.csharp:
  - uid: Engine.Core.Components.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: Engine.Core.Components.Vertex
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Engine.Core.Components.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: Engine.Core.Components.Vertex
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Engine.Core.Components.Edge[]
  isExternal: true
  name: Edge[]
  nameWithType: Edge[]
  fullName: Engine.Core.Components.Edge[]
  nameWithType.vb: Edge()
  fullName.vb: Engine.Core.Components.Edge()
  name.vb: Edge()
  spec.csharp:
  - uid: Engine.Core.Components.Edge
    name: Edge
    nameWithType: Edge
    fullName: Engine.Core.Components.Edge
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Engine.Core.Components.Edge
    name: Edge
    nameWithType: Edge
    fullName: Engine.Core.Components.Edge
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Engine.Core.Object3D
  commentId: T:Engine.Core.Object3D
  parent: Engine.Core
  name: Object3D
  nameWithType: Object3D
  fullName: Engine.Core.Object3D
- uid: Engine.Core.Components.Face.GetVertexOnFace*
  commentId: Overload:Engine.Core.Components.Face.GetVertexOnFace
  name: GetVertexOnFace
  nameWithType: Face.GetVertexOnFace
  fullName: Engine.Core.Components.Face.GetVertexOnFace
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Engine.Core.Components.Vertex
  commentId: T:Engine.Core.Components.Vertex
  parent: Engine.Core.Components
  name: Vertex
  nameWithType: Vertex
  fullName: Engine.Core.Components.Vertex
- uid: Engine.Core.Components.Face.SetFace*
  commentId: Overload:Engine.Core.Components.Face.SetFace
  name: SetFace
  nameWithType: Face.SetFace
  fullName: Engine.Core.Components.Face.SetFace
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
